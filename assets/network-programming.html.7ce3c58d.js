import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c,a as n,b as e,e as t,d as s,r as i}from"./app.4bb086e8.js";const l={},d=t('<h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><h2 id="_2-\u5BFC\u8BFB" tabindex="-1"><a class="header-anchor" href="#_2-\u5BFC\u8BFB" aria-hidden="true">#</a> 2. \u5BFC\u8BFB</h2><h2 id="_3-\u4EC0\u4E48\u662Fsocket" tabindex="-1"><a class="header-anchor" href="#_3-\u4EC0\u4E48\u662Fsocket" aria-hidden="true">#</a> 3. \u4EC0\u4E48\u662Fsocket</h2><p>\u4F60\u4E00\u76F4\u5728\u542C\u522B\u4EBA\u8C08\u8BBA&quot;<code>sockets</code>&quot;\uFF0C\u6216\u8BB8\u4F60\u4E5F\u60F3\u641E\u660E\u767D\u8FD9\u5230\u5E95\u662F\u4E2A\u4EC0\u4E48\u4E1C\u897F\u3002</p><p>\u597D\u5427\uFF0C\u5B83\u4EEC\u5176\u5B9E\u5C31\u662F\uFF1A\u300C\u4F7F\u7528\u6807\u51C6\u7684<code>Unix file descriptors</code>\uFF08Unix\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF09\u4E0E\u5176\u4ED6\u7A0B\u5E8F\u8FDB\u884C\u6C9F\u901A\u7684\u4E00\u79CD\u65B9\u5F0F\u300D\u3002</p><p>\u5565\u73A9\u610F\u513F\uFF1F</p><p>\u5982\u679C\u63A5\u89E6\u8FC7Unix\uFF0C\u4F60\u4E00\u5B9A\u542C\u8BF4\u8FC7\u300CUnix\u4E00\u5207\u7686\u6587\u4EF6\u300D\u7684\u8BF4\u6CD5\u3002</p><p>\u4E00\u5B9A\u610F\u4E49\u4E0A\u6765\u8BF4\uFF0C\u8FD9\u4E2A\u8BF4\u6CD5\u5E76\u6CA1\u6709\u4EC0\u4E48\u9519\u3002\u56E0\u4E3AUnix\u7A0B\u5E8F\u505A\u4EFB\u4F55I/O\u64CD\u4F5C\uFF0C\u90FD\u662F\u901A\u8FC7\u5BF9<code>file descriptor</code>\uFF08\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF09\u8FDB\u884C\u8BFB\u5199\u6765\u5B9E\u73B0\u7684\u3002</p><p>\u6587\u4EF6\u63CF\u8FF0\u7B26\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u6574\u6570\u7F62\u4E86\uFF0C\u53EA\u662F\u8FD9\u4E2A\u6574\u6570\u5173\u8054\u4E86\u4E00\u4E2A\u6253\u5F00\u7684\u6587\u4EF6\u3002\u8FD9\u91CC\u7684\u6587\u4EF6\u53EF\u4EE5\u662F\u4E00\u4E2A<code>\u7F51\u7EDC\u8FDE\u63A5</code>\u3001<code>FIFO</code>\u3001<code>pipe</code>\uFF08\u7BA1\u9053\uFF09\u3001<code>terminal</code>\uFF08\u7EC8\u7AEF\uFF09\u3001\u78C1\u76D8\u4E2D\u7684\u5B9E\u9645\u6587\u4EF6\u7B49\u7B49\u3002</p>',9),r=s("\u6211\u4E4B\u524D\u5199\u8FC7\u4E00\u7BC7\u300A"),u={href:"https://www.chanmufeng.com/posts/os/%E4%BB%80%E4%B9%88%E6%98%AF%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6.html",target:"_blank",rel:"noopener noreferrer"},k=s("\u4EC0\u4E48\u662F\u6587\u4EF6\u63CF\u8FF0\u7B26"),v=s("\u300B\u7684\u6587\u7AE0\uFF0C\u611F\u5174\u8DA3\u7684\u8BDD\u5927\u5BB6\u53EF\u4EE5\u770B\u4E00\u4E0B"),m=t(`<p>\u6240\u4EE5\u300CUnix\u4E00\u5207\u7686\u6587\u4EF6\u300D\u7684\u8BF4\u6CD5\u5E76\u975E\u662F\u5938\u5927\u5176\u8BCD\u3002</p><p>\u4E0D\u7BA1\u4F60\u4FE1\u4E0D\u4FE1\uFF0C\u5F53\u4F60\u60F3\u901A\u8FC7\u7F51\u7EDC\u548C\u53E6\u4E00\u4E2A\u7A0B\u5E8F\u8FDB\u884C\u901A\u8BAF\u65F6\uFF0C\u4F60\u5FC5\u987B\u901A\u8FC7<code>file descriptor</code>\u6765\u5B9E\u73B0\u3002</p><p>\u90A3\u4E48\u600E\u4E48\u83B7\u53D6\u5230\u548C\u7F51\u7EDC\u901A\u4FE1\u76F8\u5173\u7684\u8FD9\u4E2A<code>file descriptor</code>\u5462\uFF1F</p><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>socket()</code>\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>socket descriptor</code>\uFF08<code>socket</code>\u90FD\u662F\u4E00\u4E2A\u6587\u4EF6\uFF0C<code>socket descriptor</code>\u81EA\u7136\u5C31\u662F\u4E00\u4E2A<code>file descriptor</code>\u4E86\uFF09\u3002\u7136\u540E\u4F60\u5C31\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A<code>socket descriptor</code>\uFF0C\u4F7F\u7528<code>send()</code>\u548C<code>recv()</code>\u8FD9\u4E24\u4E2A\u51FD\u6570\u4E0E\u5176\u4ED6\u7A0B\u5E8F\u8FDB\u884C\u901A\u4FE1\u4E86\u3002</p><p>\u5982\u679C\u4F60\u7528C\u8BED\u8A00\u5BF9\u6587\u4EF6\u8FDB\u884C\u8FC7\u8BFB\u5199\u64CD\u4F5C\uFF0C\u4F60\u5C31\u77E5\u9053<code>read()/write()</code>\u8FD9\u4E00\u7EC4\u51FD\u6570\u540C\u6837\u53EF\u4EE5\u4F5C\u7528\u4E8E<code>file descriptor</code>\uFF0C\u4E3A\u4EC0\u4E48\u4E0D\u7528\u8FD9\u4E00\u5957\u51FD\u6570\u5462\uFF1F</p><p>\u5F53\u7136\u5B8C\u5168\u53EF\u4EE5\u7528\uFF01\u53EA\u4E0D\u8FC7<code>send()/recv()</code>\u5728\u6570\u636E\u4F20\u8F93\u65B9\u9762\u6BD4<code>read/write()</code>\u63D0\u4F9B\u4E86\u66F4\u591A\u53EF\u9009\u9879\u7F62\u4E86\u3002</p><p>\u5176\u5B9E<code>sockets</code>\u7684\u79CD\u7C7B\u6709\u5F88\u591A\uFF0C\u6BD4\u5982\uFF1A</p><ul><li>DARPA Internet addresses\uFF0C\u7B80\u79F0<code>Internet Sockets </code></li></ul><p>Internet Sockets\u662F\u6211\u4EEC\u63A5\u4E0B\u6765\u8BB2\u89E3\u7684\u91CD\u70B9\uFF0C\u56E0\u4E3A\u5B83\u662F\u6211\u4EEC\u76EE\u524D\u8FDB\u884C\u7F51\u7EDC\u901A\u4FE1\u65F6\u4F7F\u7528\u6700\u591A\u7684\u4E00\u79CDSocket.</p><blockquote><p>DARPA\u8868\u793A\u56FD\u9632\u90E8\u9AD8\u7EA7\u7814\u7A76\u8BA1\u5212\u5C40</p></blockquote><ul><li>path names on a local node\uFF0C\u7B80\u79F0<code>Unix Sockets</code></li></ul><p>\u8FD9\u4E2A\u82F1\u6587\u7FFB\u8BD1\u6210\u4E2D\u6587\u4E5F\u4E0D\u662F\u5F88\u76F4\u89C2\uFF0C\u6240\u4EE5\u5E72\u8106\u4E0D\u7FFB\u8BD1\u4E86\uFF0C<code>Unix Sockets</code>\u6709\u65F6\u5019\u88AB\u79F0\u4E3A<code>Unix\u57DF\u5957\u63A5\u5B57</code>\u3002\u7B80\u800C\u8A00\u4E4B\uFF0C<code>Unix Sockets</code>\u662F\u7528\u4E8E\u540C\u4E00\u53F0\u4E3B\u673A\u4E2D\u8FDB\u7A0B\u95F4\u901A\u8BAF\u7684\u4E00\u79CD\u65B9\u5F0F\u3002</p><p>\u4F7F\u7528\u8FC7MySQL\u7684\u670B\u53CB\u5F88\u53EF\u80FD\u89C1\u8FC7\u4E0B\u9762\u8FD9\u4E2A\u9519\u8BEF\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ERROR <span class="token number">2002</span> <span class="token punctuation">(</span>HY000<span class="token punctuation">)</span>: 
Can<span class="token string">&#39;t connect to local MySQL server through socket &#39;</span>/var/lib/mysql/mysql.sock&#39; <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u9519\u8BEF\u8BF4\u660EMySQL Client\u548CMySQL Server\u8FD0\u884C\u5728\u540C\u4E00\u53F0\u4E3B\u673A\u4E0A\uFF0C\u5E76\u4E14\u4E24\u4E2A\u8FDB\u7A0B\u901A\u8FC7<code>/var/lib/mysql/mysql.sock</code>\u8FD9\u4E2A\u6587\u4EF6\u8FDB\u884C\u901A\u4FE1\uFF0C\u8FD9\u4E2A\u6587\u4EF6\u5C31\u662FUnix\u57DF\u5957\u63A5\u5B57\u6587\u4EF6\uFF0C\u4E0D\u9700\u8981\u7ECF\u8FC7\u7F51\u7EDC\u534F\u8BAE\u6808\uFF0C\u4E0D\u9700\u8981\u6253\u5305\u62C6\u5305\u3001\u8BA1\u7B97\u6821\u9A8C\u548C\u3001\u7EF4\u62A4\u5E8F\u5217\u53F7\u5E94\u7B54\u7B49\u7B49\u7F51\u7EDC\u901A\u4FE1\u7EC6\u8282\u3002</p><p>\u4F60\u53EF\u80FD\u4F1A\u95EE\uFF0CMySQL Client\u548CMySQL Server\u4E4B\u95F4\u4E3A\u4EC0\u4E48\u4E0D\u901A\u8FC7\u672C\u5730\u7F51\u7EDC\u8FDB\u884C\u901A\u4FE1\u5462\uFF1F</p><p>\u8FD9\u548C\u4F60\u5BF9MySQL\u7684\u914D\u7F6E\u6709\u5173\u7CFB\u3002</p><p>\u5982\u679C\u4F60\u6307\u5B9A\u7684MySQL\u4E3B\u673A\u540D\u4E3A<code>localhost</code>\uFF0C\u6216\u8005\u4F60\u6307\u5B9A\u4E86<code>--protocl=socket</code>\u7684\u542F\u52A8\u53C2\u6570\uFF0C\u90A3\u4E48Client\u548CServer\u4E4B\u95F4\u5C31\u4F1A\u901A\u8FC7<code>Unix\u57DF\u5957\u63A5\u5B57</code>\u8FDB\u884C\u901A\u4FE1\u4E86\u3002</p><p>\u76F8\u53CD\uFF0C\u5982\u679C\u4F60\u6307\u5B9A\u7684MySQL\u4E3B\u673A\u540D\u662F<code>127.0.0.1</code>\uFF0C\u90A3\u4E48Client\u548CServer\u4E4B\u95F4\u5C31\u4F1A\u901A\u8FC7<code>Internet Sockets</code>\u8FDB\u884C\u901A\u4FE1\u4E86\u3002</p><h3 id="_3-1-\u4E24\u79CDinternet-socket" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4E24\u79CDinternet-socket" aria-hidden="true">#</a> 3.1. \u4E24\u79CDInternet Socket</h3><p>\u5565\uFF1F\u53EA\u6709\u4E24\u79CD<code>Internet Socket</code>\u5417\uFF1F</p><p>\u5F00\u73A9\u7B11\u7684\u5566\uFF0C\u5F53\u7136\u8FDC\u4E0D\u6B62\u4E24\u79CD\u55BD\u3002\u4F46\u662F\u4E3A\u4E86\u6015\u5413\u5230\u4F60\uFF0C\u8FD9\u91CC\u4E3B\u8981\u4ECB\u7ECD<code>Stream Sockets</code>\u4EE5\u53CA<code>Datagram Sockets</code>\u3002\u9664\u6B64\u4E4B\u5916\uFF0C<code>Raw Sockets</code>\uFF08\u539F\u59CB\u5957\u63A5\u5B57\uFF09\u4E5F\u662F\u4E00\u79CD\u529F\u80FD\u66F4\u52A0\u5F3A\u5927\u7684Socket\uFF0C\u5982\u679C\u611F\u5174\u8DA3\uFF0C\u4F60\u53EF\u4EE5\u67E5\u4E00\u67E5\u8D44\u6599\u4E86\u89E3\u4E00\u4E0B\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-09-30-074116.png" alt="image-20220930154115557" loading="lazy"></p><p>\u5982\u679C\u8981\u8FDB\u884C\u7F51\u7EDC\u901A\u4FE1\uFF0C\u6211\u4EEC\u8981\u505A\u7684\u7B2C\u4E00\u4EF6\u4E8B\u80AF\u5B9A\u662F\u8C03\u7528<code>socket()</code>\u51FD\u6570\uFF0C\u5E76\u6307\u5B9A\u60F3\u4F7F\u7528\u7684\u5957\u63A5\u5B57\u7C7B\u578B\uFF0C\u6BD4\u5982<code>SOCK_STREAM</code>\u3001<code>SOCK_DGRAM</code>\u3001<code>SOCK_RAW</code>\u7B49\u7C7B\u578B\uFF0C\u4ED6\u4EEC\u5206\u522B\u8868\u793A<code>Stream Sockets</code>\u3001<code>Datagram Sockets</code>\u4EE5\u53CA<code>Raw Sockets</code>\u3002</p><p>\u6211\u4EEC\u5148\u4ECE<code>Stream Sockets</code>\u8BF4\u8D77\u3002</p><h4 id="_3-1-1-stream-sockets" tabindex="-1"><a class="header-anchor" href="#_3-1-1-stream-sockets" aria-hidden="true">#</a> 3.1.1. Stream Sockets</h4><p><code>Stream sockets</code>\u662F\u4E00\u79CD\u53EF\u9760\u7684\u3001\u652F\u6301\u53CC\u5411\u8FDE\u63A5\u7684\u901A\u4FE1\u6D41\u3002</p><p>\u5982\u679C\u4F60\u4EE5\u201C1\uFF0C2\u201D\u7684\u987A\u5E8F\u5C06\u8FD9\u4E32\u6570\u5B57\u53D1\u9001\u5230socket\u4E2D\uFF0C\u90A3\u4E48\u5728\u63A5\u6536\u7AEF\u5C31\u4F1A\u4EE5\u540C\u6837\u7684\u987A\u5E8F\u63A5\u53D7\u5230\u201C1\uFF0C2\u201D\uFF0C\u80AF\u5B9A\u4E0D\u4F1A\u51FA\u9519\u3002</p><p>\u54EA\u91CC\u4F1A\u7528\u5230<code>Stream sockets</code>\u5462\uFF1F</p><p>\u6216\u8BB8\u4F60\u542C\u8BF4\u8FC7<code>telnet</code>\u7A0B\u5E8F\uFF1F<code>telnet</code>\u7528\u7684\u5C31\u662F<code>Stream sockets</code>\uFF0C\u4F60\u8F93\u5165\u7684\u6BCF\u4E2A\u5B57\u7B26\u90FD\u5FC5\u987B\u6309\u7167\u4F60\u7684\u8F93\u5165\u987A\u5E8F\u4F9D\u6B21\u62B5\u8FBE\uFF0C\u8981\u4E0D\u7136\u6307\u4EE4\u80AF\u5B9A\u5C31\u9519\u4E71\u4E86\u4E0D\u662F\uFF1F</p><p>\u540C\u6837\uFF0C\u6D4F\u89C8\u5668\u4F7F\u7528\u7684<code>HTTP</code>\u534F\u8BAE\u5E95\u5C42\u4E5F\u4F7F\u7528\u4E86<code>Stream sockets</code>\u6765\u83B7\u53D6\u7F51\u9875\u4FE1\u606F\u3002\u5982\u679C\u4F60\u901A\u8FC780\u7AEF\u53E3<code>telnet</code>\u5230\u4E00\u4E2A\u7F51\u7AD9\uFF0C\u5E76\u8F93\u5165 &quot;<code>GET / HTTP/1.0</code>&quot;\uFF0C\u7136\u540E\u6309\u4E24\u4E0BEnter\uFF0C\u4F60\u5C31\u4F1A\u6536\u5230\u7F51\u7AD9\u53D1\u9001\u7ED9\u4F60\u7684 HTML \uFF01</p><p><code>Stream sockets</code> \u662F\u600E\u4E48\u505A\u5230\u5982\u6B64\u9AD8\u8D28\u91CF\u5730\u4F20\u8F93\u6570\u636E\u7684\u5462\uFF1F</p>`,32),b=n("code",null,"Stream sockets ",-1),h=s('\u5E95\u5C42\u4F7F\u7528\u4E86 "The Transmission Control Protocol"\uFF08\u4F20\u8F93\u63A7\u5236\u534F\u8BAE\uFF09\uFF0C\u5C31\u662F\u5927\u540D\u9F0E\u9F0E\u7684 "'),_=n("code",null,"TCP",-1),f=s('"\uFF08TCP \u7684\u5168\u90E8\u7EC6\u8282\u53EF\u4EE5\u53C2\u8003'),g={href:"https://tools.ietf.org/html/rfc793",target:"_blank",rel:"noopener noreferrer"},y=s("RFC 793"),w=s("\uFF09\u3002"),I=n("code",null,"TCP ",-1),P=s('\u4F1A\u786E\u4FDD\u4F60\u7684\u6570\u636E\u53EF\u4EE5\u6309\u7167\u987A\u5E8F\u62B5\u8FBE\u800C\u4E14\u4E0D\u4F1A\u51FA\u9519\u3002\u4F60\u4E4B\u524D\u53EF\u80FD\u662F\u4ECE"'),x=n("code",null,"TCP/IP",-1),S=s('"\u8FD9\u4E2A\u4E13\u4E1A\u540D\u8BCD\u4E2D\u542C\u8BF4\u7684'),q=n("code",null,"TCP",-1),A=s("\uFF0C\u5176\u4E2D\u7684"),E=n("code",null,"IP",-1),T=s(' \u662F\u6307 "Internet Protocol"\uFF08\u7F51\u7EDC\u534F\u8BAE\uFF0C\u8BE6\u89C1 '),N={href:"https://tools.ietf.org/html/rfc791",target:"_blank",rel:"noopener noreferrer"},C=s("RFC 791"),D=s("\uFF09\u3002"),R=n("code",null,"IP",-1),L=s(" \u4E3B\u8981\u5904\u7406\u6570\u636E\u5728\u5404\u4E2A\u8282\u70B9\u4E4B\u95F4\u7684Internet routing\uFF08\u7F51\u7EDC\u8DEF\u7531\uFF09\uFF0C\u901A\u5E38\u4E0D\u4FDD\u969C\u6570\u636E\u7684\u5B8C\u6574\u6027\u3002"),O=n("h4",{id:"_3-1-2-datagram-sockets",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-1-2-datagram-sockets","aria-hidden":"true"},"#"),s(" 3.1.2. Datagram Sockets")],-1),U=n("p",null,[n("code",null,"Datagram sockets"),s(" \u6709\u65F6\u5019\u88AB\u53EB\u505A \u201Cconnectionless sockets\u201D\uFF08\u65E0\u8FDE\u63A5\u7684sockets\uFF09\uFF0C\u800C\u4E14\uFF0C\u8FD9\u73A9\u610F\u901A\u5E38\u4E5F\u4E0D\u600E\u4E48\u53EF\u9760\uFF01")],-1),F=n("p",null,"\u4E3A\u5565\uFF1F",-1),z=s("\u56E0\u4E3A"),M=n("code",null,"Datagram Sockets",-1),B=s("\u5E95\u5C42\u7528\u7684\u662F\u201CUser Datagram Protocol\u201D\uFF08\u7528\u6237\u6570\u636E\u62A5\u534F\u8BAE\uFF0C\u8BE6\u89C1"),K={href:"https://tools.ietf.org/html/rfc768",target:"_blank",rel:"noopener noreferrer"},X=s("RFC 768"),j=s("\uFF09\uFF0C\u4E5F\u5C31\u662F\u201C"),G=n("code",null,"UDP",-1),H=s("\u201D\u3002"),V=t('<p><code>UDP</code>\u5E76\u4E0D\u50CF<code>TCP</code>\u90A3\u6837\u4F1A\u76F4\u63A5\u5728\u4F20\u8F93\u5C42\u5C06\u6570\u636E\u91CF\u8FC7\u5927\u7684\u6D88\u606F\u5206\u7247\uFF08TCP segments\uFF09\uFF0C\u800C\u662F\u4F1A\u5728IP\u5C42\u88AB\u52A8\u8FDB\u884C\u5206\u5305\uFF0C\u5C06\u4E00\u4E2AIP packet\u5206\u5305\u6210\u591A\u4E2AIP fragments\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u63A5\u6536\u7AEF\u5C31\u5FC5\u987B\u505AIP fragments\u7684\u91CD\u7EC4\uFF0C\u5408\u5E76\u4E3A\u539F\u6765\u7684IP packet\uFF0C\u8FD9\u65E0\u7591\u589E\u52A0\u4E86\u6570\u636E\u5305\u4E22\u5931\u7684\u6982\u7387\u3002\uFF08\u5176\u5B9E\u5206\u5305\u5012\u8FD8\u597D\uFF0C\u4E3B\u8981\u662FUDP\u6CA1\u6709TCP\u90A3\u4E48\u5F3A\u5927\u7684\u7EA0\u9519\u80FD\u529B\uFF09</p><p>\u5982\u679C\u4F60\u53D1\u9001\u4E86\u4E00\u4E2A <code>datagram</code>\uFF08UDP\u7684\u6570\u636E\u62A5\uFF09\uFF0C\u5B83\u53EF\u80FD\u4F1A\u987A\u5229\u62B5\u8FBE\u3001\u4F46\u53EF\u80FD\u4E0D\u4F1A\u6309\u7167\u53D1\u9001\u987A\u5E8F\u62B5\u8FBE\u3002</p><blockquote><p>\u8BD1\u8005\u6CE8\uFF1A\u4E0B\u6587\u5C06\u79F0UDP\u53D1\u9001\u7684\u6570\u636E\u4E3Adatagram\uFF0C\u4E4B\u540E\u63D0\u5230\u8FD9\u4E2A\u8BCD\u5C31\u610F\u5473\u7740\u4F7F\u7528\u7684\u662FUDP\u534F\u8BAE</p></blockquote><p>\u90A3\u4E3A\u4EC0\u4E48\u53C8\u4F1A\u88AB\u79F0\u4E3A\u201C\u65E0\u8FDE\u63A5\u7684sockets\u201D\u5462\uFF1F</p><p>\u56E0\u4E3A<code>Datagram Sockets</code>\u4E0D\u7528\u50CF<code>Stream Sockets</code>\u4E00\u6837\u7EF4\u6301\u53CC\u65B9\u7684\u8FDE\u63A5\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u628A\u9700\u8981\u53D1\u9001\u7684\u6570\u636E\u6253\u5305\uFF0C\u7ED9\u5B83\u4E00\u4E2A\u76EE\u7684\u5730\u4FE1\u606F\uFF0C\u7136\u540E\u53D1\u9001\u51FA\u53BB\u5C31\u884C\u4E86\u3002</p><p>\u56E0\u6B64\u5F53<code>TCP</code>\u534F\u8BAE\u4E0D\u53EF\u7528\uFF0C\u6216\u8005\u4F60\u5F88\u786E\u5B9A\u4E22\u51E0\u4E2A\u6570\u636E\u5305\u4E0D\u81F3\u4E8E\u60F9\u4EC0\u4E48\u5927\u4E71\u5B50\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E0D\u59A8\u4F7F\u7528<code>datagram socket</code>\u3002\u8FD9\u6837\u7684\u4F7F\u7528\u573A\u666F\u6709\u5F88\u591A\uFF0C\u6BD4\u5982<code>tftp</code>\uFF08trivial file transfer protocol\uFF0C\u7B80\u6613\u6587\u4EF6\u4F20\u8F93\u534F\u8BAE\uFF0C\u662F <code>FTP</code> \u534F\u8BAE\u7684\u5C0F\u5144\u5F1F\uFF09\uFF0C\u591A\u4EBA\u6E38\u620F\u4EE5\u53CA\u89C6\u9891\u4F1A\u8BAE\u7B49\u3002</p><p>\u4E8B\u60C5\u6709\u70B9\u4E0D\u592A\u5BF9\u52B2\uFF01<code>tftp</code>\u53EF\u662F\u8FDB\u884C\u6587\u4EF6\u4F20\u8F93\u7684\u534F\u8BAE\u554A\uFF0C\u5982\u679C\u4F20\u8F93\u8FC7\u7A0B\u4E2D\u4E22\u5305\u4E86\uFF0C\u5BA2\u6237\u6839\u672C\u6CA1\u6CD5\u6B63\u5E38\u4F7F\u7528\u554A\u3002</p><p>\u6CA1\u9519\uFF01<code>UDP</code>\u662F\u4E0D\u53EF\u9760\u7684\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u5728<code>UDP</code>\u7684\u4E0A\u5C42\u4F7F\u7528\u53EF\u9760\u7684\u5E94\u7528\u5C42\u534F\u8BAE\uFF0C\u5C31\u6BD4\u5982<code>tftp</code>\u534F\u8BAE\u3002<code>tftp </code>\u534F\u8BAE\u4F1A\u6B7B\u6B7B\u76EF\u7740\u81EA\u5DF1\u53D1\u9001\u7684\u6BCF\u4E2A\u6570\u636E\u5305\uFF0C\u8981\u6C42\u63A5\u53D7\u65B9\u5FC5\u987B\u56DE\u590D\u4E00\u4E2A\u6570\u636E\u5305\u6765\u8868\u793A\uFF02\u6211\u6536\u5230\u4E86\uFF01\uFF02\uFF08\u4E00\u4E2A\uFF02<code>ACK</code>\uFF02\u56DE\u590D\u6570\u636E\u5305\uFF09\u3002\u5982\u679C\u53D1\u9001\u65B9\u57285\u79D2\u5185\u6C92\u6709\u6536\u5230<code>ACK</code>\uFF0C\u8868\u793A\u5B83\u8BE5\u91CD\u4F20\u8FD9\u4E2A\u6570\u636E\u5305\uFF0C\u76F4\u5230\u6536\u5230 <code>ACK </code>\u4E3A\u6B62\u3002\u5728\u4E0D\u53EF\u9760\u7684<code>UDP</code>\u4E0A\u6784\u5EFA\u53EF\u9760\u7684<code>SOCK_DGRAM</code>\u5E94\u7528\u7A0B\u5E8F\uFF0C\u8FD9\u79CD<code>ACK</code>\u673A\u5236\u975E\u5E38\u503C\u5F97\u501F\u9274\u3002</p><p>\u65E2\u7136\u6709\u4E86<code>TCP</code>\u8FD9\u79CD\u53EF\u9760\u7684\u4F20\u8F93\uFF0C<code>UDP</code>\u6709\u5B58\u5728\u7684\u5FC5\u8981\u5417\uFF1F</p><p>\u8FD9\u91CC\u6709\u4E24\u4E2A\u539F\u56E0\u6765\u8BF4\u660E<code>UDP</code>\u7684\u5FC5\u8981\u6027\uFF0C\u7B2C\u4E00\u4E2A\u539F\u56E0\u662F\u901F\u5EA6\uFF0C\u7B2C\u4E8C\u4E2A\u539F\u56E0\u8FD8\u662F\u901F\u5EA6\u3002\uFF08\u9C81\u8FC5\u65E2\u89C6\u611F\uFF09</p><p>\u76F8\u6BD4\u4E8E\u8DDF\u8E2A\u6570\u636E\u5305\u7684\u62B5\u8FBE\u72B6\u51B5\u5E76\u786E\u4FDD\u6570\u636E\u5305\u7684\u987A\u5E8F\u6027\u8FD9\u79CD\u7D2F\u6D3B\u513F\uFF0C\u201C\u6570\u636E\u5305\u4E22\u4E86\u5C31\u4E22\u4E86\u201D\u8FD9\u79CD\u5904\u7406\u6001\u5EA6\u53EF\u80FD\u66F4\u9AD8\u6548\u3002\u5982\u679C\u4F60\u662F\u8981\u53D1\u9001\u804A\u5929\u4FE1\u606F\uFF0C<code>TCP</code>\u662F\u4E2A\u597D\u7684\u9009\u62E9\u3002\u4F46\u662F\u5982\u679C\u4F60\u60F3\u4E3A\u5168\u4E16\u754C\u7684\u6E38\u620F\u73A9\u5BB6\u6BCF\u79D2\u9001\u51FA40\u4E2A\u4F4D\u7F6E\u66F4\u65B0\u4FE1\u606F\uFF0C\u5E76\u4E14\u4E22\u4E00\u4E24\u4E2A\u6570\u636E\u5305\u4E5F\u65E0\u8DB3\u8F7B\u91CD\u7684\u8BDD\uFF0C<code>UDP</code>\u80AF\u5B9A\u662F\u4E0D\u4E8C\u4E4B\u9009\u3002</p><h3 id="_3-2-\u6F2B\u8C08\u7F51\u7EDC" tabindex="-1"><a class="header-anchor" href="#_3-2-\u6F2B\u8C08\u7F51\u7EDC" aria-hidden="true">#</a> 3.2. \u6F2B\u8C08\u7F51\u7EDC</h3><p>\u5B66\u4E60\u8BA1\u7B97\u673A\u600E\u4E48\u80FD\u4E0D\u8C08\u7F51\u7EDC\u5206\u5C42\u5462\u3002\u4E0B\u9762\u6211\u4EEC\u5C31\u7B80\u5355\u4E86\u89E3\u4E00\u4E0B\u7F51\u7EDC\u662F\u600E\u6837\u5DE5\u4F5C\u7684\uFF0C\u5E76\u4E14\u4E3E\u4E00\u4E9B\u5982\u4F55<code>SOCK_DGRAM</code> \u5C01\u5305\u7684\u4F8B\u5B50\u3002</p><p>\u5B9E\u9645\u4E0A\uFF0C\u5982\u679C\u4F60\u53EF\u4EE5\u8DF3\u8FC7\u8FD9\u4E00\u8282\u5185\u5BB9\uFF0C\u4E0D\u8FC7\uFF0C\u8FD9\u4E00\u8282\u80FD\u5E2E\u4F60\u5F88\u597D\u7684\u4E86\u89E3\u7F51\u7EDC\u80CC\u666F\uFF0C\u6709\u4E00\u5B9A\u7684\u53C2\u8003\u610F\u4E49\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-10-01-012138.png" alt="\u6570\u636E\u5C01\u88C5" loading="lazy"></p><p>\u73B0\u5728\u662F\u65F6\u5019\u4E86\u89E3\u4E00\u4E0B<code>*Data Encapsulation*</code>\uFF08\u6570\u636E\u5C01\u88C5\uFF09\u4E86\uFF0C\u5B83\u5B9E\u5728\u5B9E\u5728\u662F\u975E\u5E38\u91CD\u8981\uFF01\u5373\u4FBF\u5982\u6B64\uFF0C\u5728\u5927\u90E8\u5206\u7684\u7F51\u7EDC\u8BFE\u7A0B\u7684\u5B66\u4E60\u4E2D\uFF0C\u6240\u5360\u7684\u7B14\u58A8\u5E76\u4E0D\u7B97\u591A\u3002</p><p>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F1A\u8FD9\u4E48\u8BB2\uFF1A</p><p>\u4F60\u53D1\u9001\u7684\u6570\u636E\u6784\u6210\u4E86\u6700\u521D\u59CB\u7684\u6570\u636E\u5305\uFF0C\u7136\u540E\u5C06\u6570\u636E\u5305\u5C01\u88C5\u5230\u5E94\u7528\u5C42\u534F\u8BAE\uFF08\u6BD4\u5982<code>TFTP</code>\u534F\u8BAE\uFF09\u7684<code>header</code>\u4E2D\uFF0C\u7136\u540E\u5C06\u5C01\u88C5\u4E4B\u540E\u7684\u5305\u518D\u6B21\u5C01\u88C5\u5230\u4E0B\u4E00\u4E2A\u534F\u8BAE\uFF08<code>UDP</code>\uFF09\u4E2D\uFF0C\u518D\u63A5\u7740\u88AB\u5C01\u88C5\u5230\u4E0B\u4E00\u4E2A\u534F\u8BAE\uFF08<code>IP</code>\u534F\u8BAE\uFF09\uFF0C\u6700\u7EC8\u88AB\u786C\u4EF6\u5C42\u9762\u7684\u901A\u8BAF\u534F\u8BAE\uFF08\u4EE5\u592A\u7F51\u534F\u8BAE\uFF09\u5C01\u88C5\u3002</p><p>\u63A5\u6536\u65B9\u63A5\u6536\u5230\u6570\u636E\u540E\uFF0C\u786C\u4EF6\u5C42\u4F1A\u62C6\u6389<code>\u4EE5\u592A\u7F51header</code>\u548C<code>footer</code>\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u5185\u6838\u4F1A\u62C6\u5F00 <code>IP</code> \u4E0E<code> UDP header</code>\uFF0C\u6700\u540E\u7531\u5E94\u7528\u5C42\u7A0B\u5E8F<code> TFTP</code> \u89E3\u5F00<code> TFTP header</code>\uFF0C\u6700\u7EC8\u83B7\u53D6\u5230\u7528\u6237\u6570\u636E\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-10-01-080343.png" alt="image-20221001160343286" loading="lazy"></p><p>\u63A5\u4E0B\u6765\u7EC8\u4E8E\u53EF\u4EE5\u804A\u4E00\u804A\u58F0\u540D\u72FC\u85C9\u7684\u7F51\u7EDC\u5206\u5C42\u6A21\u578B\uFF08Layered Network Model\uFF09\uFF0C\u4E5F\u5C31\u662F &quot;<strong>ISO/OSI</strong>&quot;\u4E86\u3002</p><p>\u8BF4\u5B83\u58F0\u540D\u72FC\u85C9\uFF0C\u662F\u56E0\u4E3A\u6240\u6709\u5165\u95E8\u8BA1\u7B97\u673A\u7F51\u7EDC\u7684\u4EBA\u9996\u5148\u5B66\u4E60\u7684\u4FBF\u662F\u8FD9\u4E2A\u5206\u5C42\u6A21\u578B\uFF0C\u800C\u5BF9\u521A\u63A5\u89E6\u7F51\u7EDC\u7684\u5C0F\u767D\u800C\u8A00\u5F88\u96BE\u5BF9\u5206\u5C42\u6709\u5F88\u6DF1\u7684\u7406\u89E3\u548C\u611F\u609F\uFF0C\u53EA\u80FD\u662F\u6B7B\u8BB0\u786C\u80CC\uFF0C\u6700\u7EC8\u7684\u7ED3\u679C\u5C31\u662F\u5E94\u4ED8\u8003\u8BD5\u800C\u5DF2\u3002</p><p>20\u4E16\u754C70\u5E74\u4EE3\u540E\u671F\uFF0C\u56FD\u9645\u6807\u51C6\u5316\u7EC4\u7EC7\uFF08ISO\uFF09\u63D0\u51FA\u8BA1\u7B97\u673A\u7F51\u7EDC\u5E94\u8BE5\u7EC4\u7EC7\u4E3A\u5927\u69827\u5C42\uFF0C\u5E76\u79F0\u4E4B\u4E3A\u5F00\u653E\u7CFB\u7EDF\u4E92\u8FDE\uFF08OSI\uFF09\u6A21\u578B\u3002\u4E8B\u5B9E\u4E0A\uFF0COSI\u6A21\u578B\u7684\u521B\u5EFA\u8005\u63D0\u51FA\u8FD9\u4E2A\u6A21\u578B\u7684\u65F6\u5019\u5E76\u6CA1\u6709\u8054\u60F3\u5230\u5982\u4ECA\u4F7F\u7528\u7684\u56E0\u7279\u7F51\uFF0C\u4F46\u5E76\u4E0D\u59A8\u788DOSI\u6A21\u578B\u5230\u5982\u4ECA\u4F9D\u7136\u9002\u7528\uFF0C\u8FD9\u4FBF\u662F\u62BD\u8C61\u7684\u80FD\u529B\u3002</p><p>OSI\u6A21\u578B\u5C06\u7F51\u7EDC\u5206\u5C42\u4E3A\uFF1A</p><ul><li>\u5E94\u7528\u5C42</li><li>\u8868\u793A\u5C42</li><li>\u4F1A\u8BDD\u5C42</li><li>\u4F20\u8F93\u5C42</li><li>\u7F51\u7EDC\u5C42</li><li>\u94FE\u8DEF\u5C42</li><li>\u7269\u7406\u5C42</li></ul><p>\u4F46\u662F\u8FD9\u79CD\u5206\u5C42\u5B9E\u5728\u662F\u8FC7\u4E8E\u7E41\u7410\uFF0C\u56E0\u6B64\u73B0\u5728\u4ECB\u7ECD\u7F51\u7EDC\u5206\u5C42\uFF0C\u4E00\u822C\u90FD\u662F\u62FF<code>TCP/IP</code>\u534F\u8BAE\u6808\u6765\u8FDB\u884C\u8BF4\u660E\u3002</p><ul><li>\u5E94\u7528\u5C42\uFF08\u6BD4\u5982<code>telnet</code>\u3001<code>ftp</code>\u7B49\uFF09</li><li>\u4F20\u8F93\u5C42\uFF08<code>TCP</code>\u3001<code>UDP</code>\u7B49\uFF09</li><li>\u7F51\u7EDC\u5C42\uFF08<code>IP</code>\u3001<code>ICMP</code>\u4EE5\u53CA<code>IGMP</code>\uFF09</li><li>\u7F51\u7EDC\u63A5\u53E3\u5C42\uFF08<code>\u4EE5\u592A\u7F51</code>\u3001<code>wi-fi</code>\u7B49\uFF09</li></ul><p>\u6BCF\u4E00\u5C42\u5206\u522B\u8D1F\u8D23\u4E0D\u540C\u7684\u901A\u4FE1\u529F\u80FD\uFF1A</p><ol><li>\u5E94\u7528\u5C42\u8D1F\u8D23\u5904\u7406\u7279\u5B9A\u5E94\u7528\u7A0B\u5E8F\u7684\u7EC6\u8282\u3002\u6BD4\u5982\u5BF9\u7528\u6237\u6D88\u606F\u7684\u52A0\u5BC6\u89E3\u5BC6\u64CD\u4F5C\u3001\u6309\u7167\u7279\u5B9A\u683C\u5F0F\u5BF9\u6570\u636E\u8FDB\u884C\u7EC4\u88C5\u6216\u89E3\u6790\u7B49\u3002</li><li>\u4F20\u8F93\u5C42\u4E3B\u8981\u4E3A\u4E24\u53F0\u4E3B\u673A\u4E0A\u7684\u5E94\u7528\u7A0B\u5E8F\u63D0\u4F9B\u7AEF\u5230\u7AEF\u7684\u901A\u4FE1\u3002\u6240\u8C13\u7684\u7AEF\u5230\u7AEF\uFF0C\u5C31\u662F\u80FD\u627E\u5230\u771F\u6B63\u5904\u7406\u6570\u636E\u5305\u7684\u4E24\u4E2A\u8FDB\u7A0B\u3002\u4E3E\u4E2A\u4F8B\u5B50\u5C31\u662F\u5FEB\u9012\u80FD\u591F\u4FDD\u8BC1\u9001\u8D27\u4E0A\u95E8\uFF0C\u800C\u4E0D\u53EA\u662F\u9001\u5230\u5C0F\u533A\u9A7F\u7AD9\u3002</li><li>\u7F51\u7EDC\u5C42\uFF0C\u7528\u4E8E\u4E3B\u673A\u4E4B\u95F4\u7684\u8DEF\u7531\uFF0C\u5C31\u662F\u53EA\u8D1F\u8D23\u627E\u5230\u5BF9\u5E94\u7684\u4E3B\u673A\u3002</li><li>\u7F51\u7EDC\u63A5\u53E3\u5C42\uFF0C\u6709\u65F6\u5019\u4E5F\u88AB\u79F0\u4E3A\u6570\u636E\u94FE\u8DEF\u5C42\u6216\u94FE\u8DEF\u5C42\uFF0C\u901A\u5E38\u5305\u62EC\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u7684\u8BBE\u5907\u9A71\u52A8\u7A0B\u5E8F\u548C\u8BA1\u7B97\u673A\u7684\u7F51\u5361\u8BBE\u5907\uFF0C\u5B83\u4EEC\u4E00\u8D77\u5904\u7406\u4E0E\u7269\u7406\u4F20\u8F93\u5A92\u4ECB\u7684\u901A\u4FE1\u7EC6\u8282\u3002</li></ol><h2 id="_4-ip\u5730\u5740\u3001struct\u4EE5\u53CA\u5730\u5740\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#_4-ip\u5730\u5740\u3001struct\u4EE5\u53CA\u5730\u5740\u8F6C\u6362" aria-hidden="true">#</a> 4. IP\u5730\u5740\u3001struct\u4EE5\u53CA\u5730\u5740\u8F6C\u6362</h2><p>\u7EC8\u4E8E\u8981\u8BB2\u70B9\u597D\u73A9\u513F\u7684\u4E1C\u897F\u4E86\uFF0C\u8FD9\u4E00\u7AE0\u6211\u4EEC\u8981\u5F00\u59CB\u5199\u4E00\u70B9\u4EE3\u7801\u4E86\u3002</p><p>\u4F46\u662F\u9996\u5148\uFF0C\u6211\u4EEC\u8FD8\u5F97\u518D\u804A\u4E00\u4E9B\u4E0E\u4EE3\u7801\u65E0\u5173\u7684\u4E1C\u897F\u3002</p><p>\u5148\u7A0D\u5FAE\u4ECB\u7ECD\u4E00\u70B9IP address\uFF08IP\u5730\u5740\uFF09\u548Cport\uFF08\u7AEF\u53E3\uFF09\u7684\u77E5\u8BC6\uFF0C\u5165\u4E2A\u95E8\uFF1B\u7136\u540E\u6211\u4EEC\u4F1A\u8BA8\u8BBAsocket API\u662F\u5982\u4F55\u5B58\u50A8\u548C\u64CD\u4F5CIP address\u4EE5\u53CA\u5176\u4ED6\u6570\u636E\u7684\u3002</p><h3 id="_4-1-ipv4\u4E0Eipv6" tabindex="-1"><a class="header-anchor" href="#_4-1-ipv4\u4E0Eipv6" aria-hidden="true">#</a> 4.1. IPv4\u4E0EIPv6</h3><p>\u8FDC\u5728\u300C\u5367\u9F99\u51E4\u96CF\u300D\u6210\u4E3A\u8D2C\u4E49\u8BCD\u4E4B\u524D\uFF0C\u5C31\u6709\u4E00\u4E2A\u5F88\u68D2\u7684\u7F51\u7EDC\u8DEF\u7531\u7CFB\u7EDF\uFF08 network routing system\uFF09\u4E86\uFF0C\u79F0\u4E3A<strong>\u4E92\u8054\u7F51\u901A\u4FE1\u534F\u8BAE\u7B2C\u56DB\u7248</strong>\uFF08 Internet Protocol Version 4\uFF09\uFF0C\u53C8\u79F0\u4E3A IPv4\u3002\u5B83\u7684\u5730\u5740\u75314\u4E2A\u5B57\u8282\u7EC4\u6210\uFF0C\u901A\u5E38\u88AB\u5199\u4F5C<strong>\u70B9\u5206\u5341\u8FDB\u5236</strong>\u7684\u5F62\u5F0F\uFF0C\u5373\u56DB\u4E2A\u5B57\u8282\u88AB\u5206\u5F00\u7528\u5341\u8FDB\u5236\u5199\u51FA\uFF0C\u4E2D\u95F4\u7528\u70B9\u5206\u9694\uFF0C\u6BD4\u5982\uFF1A<code>192.0.2.111</code>\u3002</p><p>\u4F60\u5927\u6982\u7387\u89C1\u8FC7\u4E0D\u5C11IPv4\u7684\u5730\u5740\u4E86\u3002</p><p>\u5B9E\u9645\u4E0A\uFF0C\u5728\u64B0\u5199\u672C\u6587\u4E4B\u524D\uFF0C\u51E0\u4E4E\u6574\u4E2A\u4E92\u8054\u7F51\u7684\u5404\u4E2A\u7F51\u7AD9\u90FD\u8FD8\u7528\u7684\u662FIPv4\u3002</p><p>\u4EBA\u4EEC\u7528IPv4\u7528\u7684\u5F88\u5F00\u5FC3\uFF0C\u4E00\u5207\u90FD\u662F\u5982\u6B64\u7F8E\u597D\u3002\u76F4\u5230\u4E00\u4E2A\u53EB Vint Cerf \u7684\u8001\u5934\u513F\u63D0\u51FA\u4E86\u8B66\u544A\uFF0C\u8BF4\u662FIPv4\u7684\u5730\u5740\u5373\u5C06\u8017\u5C3D\u3002</p>',38),W=s("\u9664\u4E86\u8B66\u544A\u6BCF\u4E2A\u4EBA\u5373\u5C06\u5230\u6765\u7684IPv4\u5371\u673A\uFF0C"),Y={href:"https://en.wikipedia.org/wiki/Vint_Cerf",target:"_blank",rel:"noopener noreferrer"},Q=s("Vint Cerf"),$=s(" \u672C\u8EAB\u8FD8\u662F\u9F0E\u9F0E\u5927\u540D\u7684\u201CInternet\u4E4B\u7236\u201D\uFF0C\u6211\u5B9E\u5728\u662F\u6CA1\u6709\u4EC0\u4E48\u8D44\u683C\u8BC4\u5224\u4ED6\u7684\u5224\u65AD\u3002"),Z=t("<p>IPv4\u5730\u5740\u8017\u5C3D\uFF1F\u8FD9\u600E\u4E48\u53EF\u80FD\u5462\uFF1F32-bit\u7684IPv4\u6709\u51E0\u5341\u4EBF\u4E2AIP\u5730\u5740\u5462\uFF0C\u6211\u4EEC\u771F\u7684\u6709\u51E0\u5341\u4EBF\u53F0\u7535\u8111\u5728\u7528\u5417\uFF1F</p><p>\u662F\u7684\u3002</p><p>\u4E00\u5F00\u59CB\u5728\u7535\u8111\u6570\u91CF\u8FD8\u4E0D\u591A\u7684\u65F6\u5019\uFF0C\u5927\u5BB6\u4E5F\u662F\u8BA4\u4E3A\u8FD9\u4E2A\u6570\u91CF\u5DF2\u7ECF\u8DB3\u591F\u4E86\uFF0C\u51E0\u5341\u4EBF\u5DF2\u7ECF\u7B97\u662F\u4E00\u4E2A\u5929\u6587\u6570\u5B57\u4E86\u3002\u751A\u81F3\u5F53\u65F6\u8FD8\u5F88\u6177\u6168\u5730\u5206\u7ED9\u67D0\u4E9B\u5927\u578B\u7EC4\u7EC7\u51E0\u767E\u4E07\u4E2AIP\u5730\u5740\u7ED9\u4ED6\u4EEC\u4F7F\u7528\uFF08\u6BD4\u5982Xerox\u3001MIT\u3001Ford\u3001HP\u3001IBM\u3001GE\u3001AT&amp;T \u53CA\u67D0\u4E2A\u540D\u4E3A Apple \u7684\u5C0F\u516C\u53F8\uFF0C\u7B49\u7B49\uFF09\u3002</p><p>\u4E8B\u5B9E\u4E0A\uFF0C\u8981\u4E0D\u662F\u6211\u4EEC\u7528\u4E86\u4E00\u4E9B\u5C0F\u624B\u6BB5\uFF08NAT\u8F6C\u6362\u7B49\uFF09\uFF0CIPv4\u65E9\u5C31\u88AB\u7528\u5C3D\u4E86\u3002</p><p>\u6211\u4EEC\u73B0\u5728\u751F\u6D3B\u4E8E\u6BCF\u4E2A\u4EBA\u3001\u6BCF\u53F0\u7535\u8111\u3001\u6BCF\u90E8\u8BA1\u7B97\u5668\u3001\u6BCF\u4E2A\u7535\u8BDD\u3001\u6BCF\u90E8\u505C\u8F66\u8BA1\u65F6\u6536\u8D39\u5668\uFF0C\u751A\u81F3\u662F\u6BCF\u4E2A\u73A9\u5177\u5C0F\u72D7\uFF08\u6CA1\u4EC0\u4E48\u4E0D\u53EF\u80FD\u7684\uFF09\u90FD\u6709\u4E00\u4E2AIP\u5730\u5740\u7684\u65F6\u4EE3\u3002</p><p>\u4E8E\u662F\u4E4E\uFF0C128-bit\u7684IPv6\u8BDE\u751F\u4E86\u3002</p><p>Vint Cerf \u6216\u8BB8\u662F\u4E0D\u673D\u7684\uFF0C\u53EF\u662F\u8C01\u4E5F\u67B6\u4E0D\u4F4F\u5728\u6BCF\u6B21\u5730\u5740\u4E0D\u591F\u7528\u800C\u7814\u53D1\u4E0B\u4E00\u4EE3Internet\u534F\u8BAE\u7684\u65F6\u5019\uFF0C\u4ED6\u8001\u4EBA\u5BB6\u51FA\u6765\u561F\u56D4\u4E00\u53E5\uFF1A\u201C\u6211\u65E9\u5C31\u8BF4\u8FC7\u4E86\u5427...\u3002\u3002\u3002\u201D</p><p>\u6240\u4EE5\uFF0C\u6211\u4EEC\u5E94\u8BE5\u600E\u4E48\u5835\u4F4F\u4ED6\u7684\u5634\uFF1F</p><p>\u6211\u4EEC\u9700\u8981\u66F4\u591A\u7684\u5730\u5740\uFF0C\u4E0D\u53EA\u662F\u9700\u8981\u4E24\u500D\u4EE5\u4E0A\u7684\u5730\u5740\u3001\u4E5F\u4E0D\u6B62\u51E0\u5341\u4EBF\u500D\u3001\u66F4\u4E0D\u6B62\u4E8E\u5343\u5146\u500D\uFF0C\u800C\u662F\u9700\u898179\u2716\uFE0F\u767E\u4E07\u2716\uFE0F\u5341\u4EBF\u2716\uFE0F\u5146\u500D\u4EE5\u4E0A\u7684\u53EF\u7528\u5730\u5740\uFF01\u6211\u4EEC\u7EC8\u5C06\u89C1\u8BC6\u5230\u3002</p><p>\u4F60\u53EF\u80FD\u4F1A\u8BF4\uFF1A\u201C\u771F\u7684\u5417\uFF1F\u8FD9\u4E2A\u6570\u5B57\u5927\u7684\u8BA9\u6211\u6709\u70B9\u4E0D\u53EF\u7F6E\u4FE1\u3002\u201D</p>",10),J=n("p",null,[s("32-bit\u548C128-bit\u542C\u8D77\u6765\u5DEE\u5F97\u5E76\u4E0D\u7B97\u592A\u591A\uFF0C\u53EA\u662F\u591A\u4E8696\u4E2Abit\u800C\u5DF2\u3002\u4F46\u662F\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u91CC\u8BF4\u7684\u53EF\u662F\u7B49\u6BD4\u6570\u5217\uFF0C32 bits\u53EF\u4EE5\u8868\u793A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msup",null,[n("mn",null,"2"),n("mn",null,"32")])]),n("annotation",{encoding:"application/x-tex"},"2^{32}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8141em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"2"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"32")])])])])])])])])])])]),s(" \u4E2A\u6570\u5B57\uFF0C128 bits\u53EF\u4EE5\u8868\u793A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msup",null,[n("mn",null,"2"),n("mn",null,"128")])]),n("annotation",{encoding:"application/x-tex"},"2^{128}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8141em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"2"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"128")])])])])])])])])])])]),s("\uFF08\u5927\u7EA6340\u4E2A\u5146\u5146\u5146\uFF09\u4E2A\u6570\u5B57\uFF0C\u5927\u5230\u6211\u90FD\u4E0D\u77E5\u9053\u600E\u4E48\u8BFB\u3002\u3002\u3002\u3002\u3002\u3002\u8FD9\u4E48\u8BF4\u5427\uFF0C\u8FD9\u4E2A\u6570\u5B57\u76F8\u5F53\u4E8E\u5B87\u5B99\u4E2D\u7684\u6BCF\u9897\u661F\u661F\u90FD\u80FD\u62E5\u6709\u4E00\u767E\u4E07\u4E2A IPv4 \u5730\u5740\u3002")],-1),nn=t(`<p>\u5FD8\u8BB0\u70B9\u5206\u5341\u8FDB\u5236\u7684IPv4\u7684\u5199\u6CD5\u5427\uFF0C\u73B0\u5728\u6211\u4EEC\u6709\u4E8616\u8FDB\u5236\u8868\u793A\u6CD5\uFF0C\u6BCF\u4E24\u4E2A\u5B57\u8282\u4E4B\u95F4\u7528<code>:</code>\u5206\u9694\uFF0C\u7C7B\u4F3C\u8FD9\u6837\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2001:0db8:c9d2:aee5:73e3:934a:a5ae:9551
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD8\u6CA1\u5B8C\u5462\uFF01\u5927\u591A\u65F6\u5019\uFF0CIP\u5730\u5740\u91CC\u8FB9\u4F1A\u6709\u5F88\u591A\u4E2A0\uFF0C\u4F60\u53EF\u4EE5\u5C06\u5B83\u4EEC\u538B\u7F29\u5230\u4E24\u4E2A\u5192\u53F7\u4E4B\u95F4\uFF0C\u800C\u4E14\u53EF\u4EE5\u7701\u7565\u6BCF\u4E2A\u5B57\u8282\u5BF9\u5F00\u5934\u76840\u3002\u4F8B\u5982\uFF0C\u8FD9\u4E9B\u5730\u5740\u5BF9\u4E2D\u7684\u6BCF\u4E00\u5BF9\u90FD\u662F\u7B49\u4EF7\u7684\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2001:0db8:c9d2:0012:0000:0000:0000:0051
2001:db8:c9d2:12::51
    
2001:0db8:ab00:0000:0000:0000:0000:0000
2001:db8:ab00::
    
0000:0000:0000:0000:0000:0000:0000:0001
::1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5730\u5740 <code>::1</code> \u662F\u500B loopback\uFF08\u672C\u5730\u56DE\u73AF\uFF09\u5730\u5740\uFF0C\u76F8\u5F53\u4E8E IPv4 \u4E2D\u7684<code>127.0.0.1</code>\u3002</p><p>\u6700\u540E\uFF0C\u4F60\u53EF\u80FD\u4F1A\u78B0\u5230 IPv6 \u4E0E IPv4 \u517C\u5BB9\u7684\u6A21\u5F0F\u3002\u4F60\u5982\u679C\u613F\u610F\uFF0C\u4F60\u53EF\u4EE5\u5C06 IPv4\u5730\u5740 <code>192.0.2.33</code> \u7528 IPv6 \u5F62\u5F0F\u8868\u793A\uFF1A<code>::ffff:192.0.2.33</code>\u3002</p><p>\u4E8B\u5B9E\u4E0A\uFF0CIPv6\u7684\u521B\u5EFA\u8005\u4EEC\u5DF2\u7ECF\u8086\u65E0\u5FCC\u60EE\u5730\u4FDD\u7559\u4E86\u4E07\u4EBF\u8BA1\u7684\u5730\u5740\u4EE5\u4F9B\u5907\u7528\uFF0C\u8FD9\u771F\u662F\u592A\u6709\u8DA3\u4E86\uFF0C\u4F46\u5766\u767D\u5730\u8BB2\uFF0C\u6211\u4EEC\u6709\u8FD9\u4E48\u591A\u5730\u5740\uFF0C\u8C01\u5728\u610F\u5462\uFF1F</p><h4 id="_4-1-1-\u5B50\u7F51" tabindex="-1"><a class="header-anchor" href="#_4-1-1-\u5B50\u7F51" aria-hidden="true">#</a> 4.1.1. \u5B50\u7F51</h4><p>\u73B0\u4EE3\u7684\u4E92\u8054\u7F51\u662F\u57FA\u4E8E<code>TCP/IP</code>\u7684\u601D\u8DEF\u6765\u8BBE\u8BA1\u7684\uFF0C\u8BF4\u5F97\u901A\u4FD7\u70B9\u5C31\u662F\u4E92\u8054\u7F51\u7531\u8BB8\u8BB8\u591A\u591A\u7684\u5C0F\u5B50\u7F51\u7EC4\u6210\uFF0C\u5B50\u7F51\u4E2D\u7684\u8BBE\u5907\u7528\u96C6\u7EBF\u5668\u8FDB\u884C\u8FDE\u63A5\uFF0C\u5B50\u7F51\u4E4B\u95F4\u901A\u8FC7\u8DEF\u7531\u5668\u8FDB\u884C\u4E92\u8054\uFF0C\u5982\u4E0B\u56FE\uFF1A</p><p><img src="http://qiniu.chanmufeng.com/2022-10-03-040038.png" alt="image-20221003120038276" loading="lazy"></p><p>\u4E3A\u4E86\u66F4\u597D\u5730\u7BA1\u7406IP\u5730\u5740\uFF08\u5176\u5B9E\u4E5F\u662F\u8DF5\u884C\u4E0A\u9762\u8FD9\u4E2A\u601D\u8DEF\uFF09\uFF0CIP\u5730\u5740\u672C\u8EAB\u88AB\u5206\u6210\u4E86\u4E24\u90E8\u5206\uFF0C\u5206\u522B\u662F\u7F51\u7EDC\u53F7\u548C\u4E3B\u673A\u53F7\u3002</p><p>\u66F4\u5177\u4F53\u5730\uFF0C\u4E92\u8054\u7F51\u8BDE\u751F\u4E4B\u521D\uFF0CIP\u5730\u5740\u66FE\u7ECF\u88AB\u5206\u6210\u4E86<code>A</code>\u3001<code>B</code>\u3001<code>C</code>\u3001<code>D</code>\u3001<code>E</code> 5\u7C7B\uFF0C\u5F88\u591A\u8BA1\u7B97\u673A\u7F51\u7EDC\u7684\u4E66\u4ECB\u7ECDIP\u5730\u5740\u7684\u65F6\u5019\u4E5F\u662F\u4EE5\u8FD9\u4E2A\u5206\u7C7B\u5F00\u59CB\u7684\u3002</p><p>\u4F46\u662F\u8FD9\u4E2A\u5212\u5206\u4F9D\u7136\u662F\u4E00\u4E2A\u5386\u53F2\u6982\u5FF5\uFF0C\u5B9E\u9645\u4F7F\u7528\u4E2D\u5DF2\u7ECF\u6CA1\u6709\u4EFB\u4F55\u610F\u4E49\uFF01\u56E0\u6B64\u5173\u4E8E\u8FD9\u90E8\u5206\u77E5\u8BC6\u7684\u8BB2\u8FF0\u90FD\u53EF\u4EE5\u76F4\u63A5\u5FFD\u7565\u3002</p><p>\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\u57281993\u5E74\uFF0C\u56E0\u7279\u7F51\u5DE5\u7A0B\u4EFB\u52A1\u7EC4IETF\u53C8\u63D0\u51FA\u4E86<strong>\u65E0\u5206\u7C7B\u7F16\u5740</strong>\uFF08CIDR\uFF09\u7684\u65B9\u6CD5\u6765\u89E3\u51B3IPv4\u5730\u5740\u7D27\u7F3A\u7684\u95EE\u9898\uFF0C\u5F53\u7136\u4E86\uFF0C\u540C\u65F6\u542F\u52A8\u7684\u8FD8\u6709\u5F7B\u5E95\u89E3\u51B3IP\u5730\u5740\u8017\u5C3D\u95EE\u9898\u7684IPv6\u9879\u76EE\u3002</p><p>\u5728\u4E92\u8054\u7F51\u4E2D\uFF0C\u6BCF\u4E2A\u8BBE\u5907\u90FD\u4F1A\u88AB\u5206\u914D\u4E00\u4E2AIP\u5730\u5740\uFF08\u5176\u5B9E\u88AB\u5206\u914DIP\u5730\u5740\u7684\u662F\u8BBE\u5907\u4E0A\u7684\u7F51\u5361\uFF0C\u5982\u679C\u4E00\u53F0\u8BBE\u5907\u6709\u591A\u4E2A\u7F51\u5361\uFF0C\u81EA\u7136\u5C31\u4F1A\u6709\u591A\u4E2AIP\u5730\u5740\uFF09\uFF0C\u8FD9\u4E2A\u5730\u5740\u5C31\u76F8\u5F53\u4E8E\u201CXX\u8DEFXX\u53F7\u201D\uFF0C\u5176\u4E2D\u201C\u8DEF\u201D\u5C31\u76F8\u5F53\u4E8E\u7F51\u7EDC\u53F7\uFF0C\u201C\u53F7\u201D\u5C31\u76F8\u5F53\u4E8E\u4E3B\u673A\u53F7\uFF0C\u4E24\u8005\u5408\u8D77\u6765\u5C31\u662FIP\u5730\u5740\u5566\uFF01</p><p>\u56E0\u6B64\uFF0C\u7406\u8BBA\u4E0A\u6211\u4EEC\u5E94\u8BE5\u80FD\u901A\u8FC7IP\u5730\u5740\u8BC6\u522B\u51FA\u4E3B\u673A\u5904\u4E8E\u7684\u5B50\u7F51\u53F7\uFF0C\u4EE5\u53CA\u5B50\u7F51\u4E0B\u7684\u4E3B\u673A\u53F7\u3002</p><p>IPv4\u7684IP\u5730\u5740\u7531<code>32</code>\u4E2Abit\u7EC4\u6210\uFF0C\u6309\u7167\u6BCF<code>8</code>\u4E2A\u6BD4\u7279\uFF081\u5B57\u8282\uFF09\u4E3A\u4E00\u7EC4\u5206\u62104\u7EC4\uFF0C\u4F46\u662F\u4EC5\u51ED\u8FD9\u4E00\u4E32\u6570\u5B57\u6839\u672C\u65E0\u6CD5\u533A\u5206\u54EA\u90E8\u5206\u662F\u7F51\u7EDC\u53F7\uFF0C\u54EA\u90E8\u5206\u662F\u4E3B\u673A\u53F7\u3002</p><p>\u56E0\u6B64\u9700\u8981\u67D0\u4E9B\u9644\u52A0\u4FE1\u606F\u3002\u8FD9\u4E2A\u9644\u52A0\u4FE1\u606F\u5C31\u662F<strong>\u5B50\u7F51\u63A9\u7801</strong>\u3002</p><p>\u5B50\u7F51\u63A9\u7801\u7684\u683C\u5F0F\u662F\u4E00\u4E32\u4E0EIP\u5730\u5740\u957F\u5EA6\u76F8\u540C\u7684<code>32</code>\u6BD4\u7279\u6570\u5B57\uFF0C\u5DE6\u8FB9\u662F\u4E00\u4E32\u8FDE\u7EED\u7684<code>1</code>\uFF0C\u53F3\u8FB9\u5269\u4E0B\u7684\u90FD\u662F<code>0</code>\u3002\u5176\u4E2D\u4E3A<code>1</code>\u7684\u90A3\u4E00\u90E8\u5206\u8868\u793A\u7684\u662F\u7F51\u7EDC\u53F7\uFF0C\u5269\u4E0B\u4E3A<code>0</code>\u7684\u4E00\u90E8\u5206\u8868\u793A\u7684\u662F\u4E3B\u673A\u53F7\u3002\u5B50\u7F51\u63A9\u7801\u8868\u793A\u7F51\u7EDC\u53F7\u4E0E\u4E3B\u673A\u53F7\u4E4B\u95F4\u7684\u8FB9\u754C\uFF0C\u6B63\u89C4\u7684\u8868\u793A\u65B9\u5F0F\u5982\u4E0B\u6240\u793A\uFF1A</p><p><img src="http://qiniu.chanmufeng.com/2022-10-03-130009.png" alt="image-20221003210009224" loading="lazy"></p><p>\u4E00\u79CD\u6700\u7B80\u5355\u7684\u8868\u793A\u65B9\u6CD5\u662F\uFF0C\u628A<code>1</code>\u7684\u90E8\u5206\u7684\u6BD4\u7279\u6570\u7528\u5341\u8FDB\u5236\u7684\u65B9\u5F0F\u5199\u5728IP\u5730\u5740\u7684\u53F3\u4FA7\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>182.92.193.45/24
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-1-2-\u7AEF\u53E3\u53F7" tabindex="-1"><a class="header-anchor" href="#_4-1-2-\u7AEF\u53E3\u53F7" aria-hidden="true">#</a> 4.1.2. \u7AEF\u53E3\u53F7</h4><p>\u5982\u679C\u4F60\u9084\u8A18\u5F97\u6211\u4E4B\u524D\u8DDF\u4F60\u8AAA\u904E\u7684\u5206\u5C64\u7DB2\u8DEF\u6A21\u578B\uFF08Layered Network Model\uFF09\uFF0C\u5B83\u5C07\u7DB2\u8DEF\u5C64\uFF08IP\uFF09\u8207\u4E3B\u6A5F\u5230\u4E3B\u6A5F\u9593\u7684\u50B3\u8F38\u5C64\uFF3BTCP \u8207 UDP\uFF3D\u5206\u958B\u3002</p><p>\u6211\u5011\u8981\u52A0\u5FEB\u8173\u6B65\u4E86\u3002</p><p>\u9664\u4E86 IP address \u4E4B\u5916\uFF3BIP \u5C64\uFF3D\uFF0C\u6709\u53E6\u4E00\u500B TCP\uFF3Bstream socket\uFF3D\u4F7F\u7528\u7684\u4F4D\u5740\uFF0C\u525B\u597D UDP\uFF3Bdatagram socket\uFF3D\u4E5F\u7528\u9019\u500B\uFF0C\u5C31\u662F port number\uFF0C\u9019\u662F\u4E00\u500B 16-bit \u7684\u6578\u5B57\uFF0C\u5C31\u50CF\u662F\u9023\u7DDA\u7684\u672C\u5730\u7AEF\u4F4D\u5740\u4E00\u6A23\u3002</p><p>\u5C07 IP address \u60F3\u6210\u98EF\u5E97\u7684\u5730\u5740\uFF0C\u800C port number \u5C31\u662F\u98EF\u5E97\u7684\u623F\u9593\u865F\u78BC\u3002\u9019\u662F\u8CBC\u5207\u7684\u6BD4\u55BB\uFF1B\u6216\u8A31\u4EE5\u5F8C\u6211\u6703\u7528\u6C7D\u8ECA\u5DE5\u696D\u4F86\u6BD4\u55BB\u3002</p><p>\u4F60\u8AAA\u60F3\u8981\u6709\u4E00\u53F0\u96FB\u8166\u80FD\u8655\u7406\u6536\u5230\u7684\u96FB\u5B50\u90F5\u4EF6\u8207\u7DB2\u9801\u670D\u52D9\uFF0D\u4F60\u8981\u5982\u4F55\u5728\u4E00\u53F0\u53EA\u6709\u4E00\u500B IP address \u7684\u96FB\u8166\u4E0A\u5206\u8FA8\u9019\u4E9B\u5C01\u5305\u5462\uFF1F</p><p>\u597D\uFF0CInternet \u4E0A\u4E0D\u540C\u7684\u670D\u52D9\u90FD\u6709\u5DF2\u77E5\u7684\uFF08well-known\uFF09port numbers\u3002\u4F60\u53EF\u4EE5\u5728 Big IANA Port \u6E05\u55AE [12] \u4E2D\u627E\u5230\uFF0C\u5982\u679C\u4F60\u7528\u7684\u662F Unix \u7CFB\u7D71\uFF0C\u4F60\u53EF\u4EE5\u53C3\u8003\u6A94\u6848 /etc/services\u3002HTTP\uFF08\u7DB2\u7AD9\uFF09\u662F port 80\u3001telnet \u662F port 23\u3001SMTP \u662F port 25\uFF0C\u800C DOOM \u904A\u6232 [13] \u4F7F\u7528 port 666 \u7B49\uFF0C\u8AF8\u5982\u6B64\u985E\u3002Port 1024 \u4EE5\u4E0B\u901A\u5E38\u662F\u6709\u7279\u5730\u7528\u9014\u7684\uFF0C\u800C\u4E14\u8981\u6709\u4F5C\u696D\u7CFB\u7D71\u7BA1\u7406\u54E1\u6B0A\u9650\u624D\u80FD\u4F7F\u7528\u3002</p><p>\u6441\uFF0C\u9019\u5C31\u662F port number \u7684\u4ECB\u7D39\u3002</p><h3 id="_4-2-\u5B57\u8282\u5E8F" tabindex="-1"><a class="header-anchor" href="#_4-2-\u5B57\u8282\u5E8F" aria-hidden="true">#</a> 4.2. \u5B57\u8282\u5E8F</h3><h4 id="_4-2-1-\u4EC0\u4E48\u662F\u5B57\u8282\u5E8F" tabindex="-1"><a class="header-anchor" href="#_4-2-1-\u4EC0\u4E48\u662F\u5B57\u8282\u5E8F" aria-hidden="true">#</a> 4.2.1. \u4EC0\u4E48\u662F\u5B57\u8282\u5E8F</h4><p>\u5B57\u8282\u662F\u5185\u5B58\u8BFB\u5199\u7684\u6700\u5C0F\u5355\u4F4D\uFF0C\u4E00\u4E2A\u5B57\u8282\u80FD\u591F\u8868\u793A\u7684\u6570\u636E\u8303\u56F4\u662F0\uFF5E255\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5982\u679C\u4F60\u8981\u4FDD\u5B58\u4E00\u4E2A\u5728\u6B64\u8303\u56F4\u533A\u95F4\u7684\u6570\u5B57\uFF0C\u4E00\u4E2A\u5B57\u8282\u8DB3\u77E3\u3002</p><p>\u4F46\u662F\u50CF\u53604\u4E2A\u5B57\u8282\u7684<code>int</code>\uFF0C8\u4E2A\u5B57\u8282\u7684<code>double</code>\uFF0C\u8BE5\u600E\u4E48\u5B58\u50A8\u5462\uFF1F\u591A\u4E2A\u5B57\u8282\u8BE5\u7528\u600E\u6837\u7684\u987A\u5E8F\u6765\u8FDB\u884C\u6392\u5217\uFF1F\u4E3E\u4E2A\u4F8B\u5B50\uFF0C<code>0xb3f4</code>\uFF0C\u6570\u503C\u7684\u9AD8\u4F4D<code>b3</code>\u662F\u5B58\u50A8\u5728\u4E86\u5185\u5B58\u7684\u9AD8\u5730\u5740\u5904\uFF0C\u8FD8\u662F\u5185\u5B58\u7684\u4F4E\u5730\u5740\u5904\u5462\uFF1F</p><p>\u8FD9\u79CD\u5B57\u8282\u7684\u6392\u5217\u987A\u5E8F\u5C31\u53EB\u505A\u5B57\u8282\u5E8F\uFF0C\u5B57\u8282\u5E8F\u6709\u4E24\u79CD\uFF1A</p><ol><li>\u5927\u7AEF\u5B57\u8282\u5E8F</li></ol><p>\u6570\u503C\u7684\u4F4E\u5B57\u8282\u653E\u5728\u5185\u5B58\u7684\u4F4E\u5730\u5740\u5904\uFF0C\u6570\u503C\u7684\u9AD8\u5B57\u8282\u653E\u5728\u5185\u5B58\u7684\u9AD8\u5730\u5740\u3002</p><ol start="2"><li>\u5C0F\u7AEF\u5B57\u8282\u5E8F</li></ol><p>\u6570\u503C\u7684\u4F4E\u5B57\u8282\u653E\u5728\u5185\u5B58\u7684\u9AD8\u5730\u5740\u5904\uFF0C\u6570\u503C\u7684\u9AD8\u5B57\u8282\u653E\u5728\u5185\u5B58\u7684\u4F4E\u5730\u5740\u3002</p><h4 id="_4-2-2-\u4E3B\u673A\u5B57\u8282\u5E8F" tabindex="-1"><a class="header-anchor" href="#_4-2-2-\u4E3B\u673A\u5B57\u8282\u5E8F" aria-hidden="true">#</a> 4.2.2. \u4E3B\u673A\u5B57\u8282\u5E8F</h4><p>\u5F53\u6211\u4EEC\u8C08\u8BBA\u5B57\u8282\u5E8F\uFF0C\u5927\u90E8\u5206\u65F6\u5019\u5BF9\u5E94\u7684\u90FD\u662FCPU\u8BBF\u95EE\u5185\u5B58\u65F6\u7684\u6982\u5FF5\uFF0C\u6BD4\u5982\u5BF9\u4E0B\u56FE\u800C\u8A00\uFF1A</p><p><img src="http://qiniu.chanmufeng.com/2022-10-06-030645.png" alt="image-20221006110645258" loading="lazy"></p><p>\u5185\u5B58\u4F4E\u4F4D\u5B58\u50A8\u7684\u5B57\u8282\u662F<code>0xb3</code>\uFF0C\u9AD8\u4F4D\u5B58\u50A8\u7684\u662F<code>0xf4</code>\uFF0C\u81F3\u4E8ECPU\u8BFB\u53D6\u8FD9\u4E2A2\u5B57\u8282\u6570\u636E\u7684\u65F6\u5019\uFF0C\u662F\u5C06\u5176\u89E3\u91CA\u4E3A<code>0xb3f4</code>\uFF08\u5C0F\u7AEF\uFF09\u8FD8\u662F<code>0xf4b3</code>\uFF08\u5927\u7AEF\uFF09\u5C31\u53D6\u51B3\u4E8ECPU\u91C7\u7528\u7684\u662F\u54EA\u4E00\u79CD\u5B57\u8282\u5E8F\u4E86\u3002</p><p>\u5E38\u7528\u7684CPU\u5B57\u8282\u5E8F\u5982\u4E0B\uFF1A</p><ul><li><p>\u5927\u7AEF\u5B57\u8282\u5E8F\uFF1AIBM\u3001PowerPC</p></li><li><p>\u5C0F\u7AEF\u5B57\u8282\u5E8F\uFF1Ax86</p></li></ul><p>\u8FD9\u79CDCPU\u5B57\u8282\u5E8F\u4E5F\u88AB\u79F0\u4E3A<strong>\u4E3B\u673A\u5B57\u8282\u5E8F\uFF08Host Byte Order\uFF09</strong>\u3002\u7FFB\u8BD1\u4E00\u4E0B\u5C31\u662F\uFF0CIBM\u7684\u4E3B\u673A\u5E8F\u662F\u5927\u7AEF\uFF0Cx86\u7684\u4E3B\u673A\u5E8F\u662F\u5C0F\u7AEF\u3002</p><p>\u95EE\u9898\u6765\u4E86\u3002</p><p>\u4E16\u754C\u4E0A\u7684\u4E3B\u673A\u8FD9\u4E48\u591A\uFF0C\u6BCF\u53F0\u4E3B\u673A\u7684CPU\u7C7B\u578B\u8FD8\u4E0D\u4E00\u6837\uFF0CA\u4E3B\u673A\u6309\u7167A\u7684\u4E3B\u673A\u5B57\u8282\u5E8F\u53D1\u4FE1\u606F\u7ED9B\u4E3B\u673A\uFF0CB\u4E3B\u673A\u5982\u679C\u76F4\u63A5\u6309\u7167B\u7684\u4E3B\u673A\u5B57\u8282\u5E8F\u6765\u89E3\u6790\u4FE1\u606F\uFF0C\u90A3\u4E48\u6781\u6709\u53EF\u80FD\u4F1A\u4EA7\u751F\u9519\u8BEF\u3002</p><p>\u8981\u60F3\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u8FD8\u5FC5\u987B\u5F15\u51FA\u4E00\u4E9B\u5176\u4ED6\u60C5\u51B5\u4E0B\u7684\u5B57\u8282\u5E8F\u3002</p><blockquote><p>\u4E3A\u4E86\u907F\u514D\u5F15\u8D77\u6DF7\u6DC6\uFF0C\u6211\u5728\u8FD9\u91CC\u5F3A\u8C03\u4E00\u4E0B\uFF0C\u5B57\u8282\u5E8F\u5C31\u5206\u4E3A2\u79CD\uFF0C\u5927\u7AEF\u548C\u5C0F\u7AEF\u3002\u800C\u6240\u8C13\u7684\u4E3B\u673A\u5B57\u8282\u5E8F\u4EE5\u53CA\u4E0B\u9762\u6211\u5C06\u63D0\u5230\u7684\u4E24\u79CD\uFF0C\u90FD\u53EA\u662F\u5B57\u8282\u5E8F\u4F5C\u7528\u5728\u4E0D\u540C\u7684\u573A\u666F\u4E2D\u53D6\u5F97\u7279\u5B9A\u540D\u79F0\u7F62\u4E86\u3002</p></blockquote><h4 id="_4-2-3-\u6587\u4EF6\u5B58\u50A8\u5B57\u8282\u5E8F" tabindex="-1"><a class="header-anchor" href="#_4-2-3-\u6587\u4EF6\u5B58\u50A8\u5B57\u8282\u5E8F" aria-hidden="true">#</a> 4.2.3. \u6587\u4EF6\u5B58\u50A8\u5B57\u8282\u5E8F</h4><p>\u987E\u540D\u601D\u4E49\uFF0C\u5C31\u662F\u5B58\u50A8\u6587\u4EF6\u4FE1\u606F\u7684\u65F6\u5019\u7528\u7684\u662F\u5927\u7AEF\u8FD8\u662F\u5C0F\u7AEF\u3002</p><p>bmp\u683C\u5F0F\u7684\u56FE\u7247\u5C5E\u4E8E\u5C0F\u7AEF\u5B57\u8282\u5E8F\uFF0Cjpeg\u683C\u5F0F\u7684\u56FE\u7247\u5C31\u662F\u5927\u7AEF\u5B57\u8282\u5E8F\u3002</p><p>\u8FD9\u91CC\u63D0\u53CA\u6587\u4EF6\u5B58\u50A8\u5B57\u8282\u5E8F\u4E3B\u8981\u662F\u4E3A\u4E86\u8BA9\u5927\u5BB6\u7406\u89E3\u4E00\u4E2A\u4E8B\u5B9E\uFF1A<strong>\u91C7\u7528\u4EC0\u4E48\u5B57\u8282\u5E8F\u5B8C\u5168\u662F\u5F00\u53D1\u8005\u8BBE\u8BA1\u4EA7\u54C1\u65F6\u7684\u4E00\u79CD\u6280\u672F\u9009\u578B\u7F62\u4E86</strong>\u3002\u4F46\u662F\u8FD9\u79CD\u9009\u578B\u4E00\u5B9A\u8981\u6210\u4E3A\u4E00\u79CD\u6807\u51C6\uFF0C\u8BA9\u5176\u4ED6\u5F00\u53D1\u8005\u89E3\u6790\u7684\u65F6\u5019\u660E\u767D\u5E94\u8BE5\u7528\u54EA\u79CD\u5B57\u8282\u5E8F\uFF0C\u5426\u5219jpeg\u7684\u56FE\u7247\u4E5F\u5C31\u6CA1\u529E\u6CD5\u5728\u6240\u6709\u7684\u7535\u8111\u4E0A\u6B63\u5E38\u663E\u793A\u4E86\uFF0C\u4F60\u8BF4\u5BF9\u5417\uFF1F</p><p>\u73B0\u5728\u597D\u4E86\uFF0C\u6240\u6709jpeg\u8F6F\u4EF6\u7684\u5F00\u53D1\u8005\u90FD\u77E5\u9053\u5E94\u8BE5\u7528\u5927\u7AEF\u5B57\u8282\u5E8F\u6765\u4FDD\u5B58jpeg\u56FE\u7247\uFF0C\u4F46\u662F\u5BF9\u4E8E\u4ECE\u5176\u4ED6\u4E3B\u673A\u4F20\u8FC7\u6765\u7684jpeg\u6570\u636E\u6D41\uFF0C\u5F00\u53D1\u8005\u53C8\u600E\u4E48\u77E5\u9053\u8FD9\u4E2A\u6570\u636E\u6D41\u7528\u7684\u662F\u5927\u7AEF\u8FD8\u662F\u5C0F\u7AEF\u5462\uFF1F</p><p>\u8FD9\u5C31\u662F<strong>\u7F51\u7EDC\u5B57\u8282\u5E8F\uFF08Network Byte Order\uFF09</strong> \u7684\u95EE\u9898\u4E86\u3002</p><h4 id="_4-2-4-\u7F51\u7EDC\u5B57\u8282\u5E8F" tabindex="-1"><a class="header-anchor" href="#_4-2-4-\u7F51\u7EDC\u5B57\u8282\u5E8F" aria-hidden="true">#</a> 4.2.4. \u7F51\u7EDC\u5B57\u8282\u5E8F</h4><p>\u6211\u60F3\u4F60\u5E94\u8BE5\u80FD\u60F3\u660E\u767D\u4E86\uFF0C\u7F51\u7EDC\u5B57\u8282\u5E8F\u4E0D\u662F\u5927\u7AEF\u5C31\u662F\u5C0F\u7AEF\uFF0C\u4E0D\u53EF\u80FD\u5B58\u5728\u300C\u53EF\u80FD\u662F\u5927\u7AEF\u4E5F\u53EF\u80FD\u662F\u5C0F\u7AEF\u300D\u8FD9\u79CD\u60C5\u51B5\uFF0C\u5426\u5219\u7F51\u7EDC\u4F20\u9012\u7684\u6D88\u606F\u5168\u90FD\u4E71\u5957\u4E86\uFF01</p><p>TCP/IP\u65E2\u7136\u662F\u4E00\u79CD\u6807\u51C6\uFF0C\u90A3\u6807\u51C6\u81EA\u7136\u5C31\u6709\u81EA\u5DF1\u7684\u5B57\u8282\u5E8F\u89C4\u5B9A\u3002</p><p><strong>TCP/IP\u7F51\u7EDC\u91C7\u7528\u7684\u662F\u5927\u7AEF\uFF0C\u662F\u89C4\u5B9A\u597D\u7684\u4E00\u79CD\u6570\u636E\u8868\u793A\u683C\u5F0F\uFF0C\u5B83\u4E0E\u5177\u4F53\u7684CPU\u7C7B\u578B\u3001\u64CD\u4F5C\u7CFB\u7EDF\u7B49\u65E0\u5173\uFF0C\u4ECE\u800C\u53EF\u4EE5\u4FDD\u8BC1\u6570\u636E\u5728\u4E0D\u540C\u4E3B\u673A\u4E4B\u95F4\u4F20\u8F93\u65F6\u80FD\u591F\u88AB\u6B63\u786E\u89E3\u91CA\u3002</strong></p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u4F60\u60F3\u8BA9\u4F60\u7684\u6D88\u606F\u80FD\u5728\u5176\u4ED6\u8BBE\u5907\u6B63\u5E38\u89E3\u6790\uFF0C\u5C31\u5FC5\u987B\u6309\u7167\u5927\u7AEF\u5B57\u8282\u5E8F\u8FDB\u884C\u5904\u7406\u3002\u6BD4\u5982\uFF0C\u7F51\u7EDC\u4F20\u8F93\u7684\u662F<code>0x12345678</code>\u8FD9\u4E2A\u6574\u5F62\u53D8\u91CF\uFF0C\u9996\u5148\u88AB\u53D1\u9001\u7684\u5E94\u8BE5\u662F<code>0x12</code>\uFF0C\u63A5\u7740\u662F<code>0x34</code>\uFF0C\u7136\u540E\u662F<code>0x56</code>\uFF0C\u6700\u540E\u662F<code>0x78</code>\u3002</p><h4 id="_4-2-5-\u5B57\u8282\u5E8F\u5728socket\u4E2D\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_4-2-5-\u5B57\u8282\u5E8F\u5728socket\u4E2D\u7684\u4F8B\u5B50" aria-hidden="true">#</a> 4.2.5. \u5B57\u8282\u5E8F\u5728socket\u4E2D\u7684\u4F8B\u5B50</h4><p>\u5F53\u4F60\u5728\u7F51\u7EDC\u5C01\u5305\u6216\u8005\u5728\u586B\u5145\u6570\u636E\u7684\u65F6\u5019\uFF0C\u4F60\u9700\u8981\u786E\u5B9A\u4F60\u7684\u7AEF\u53E3\u53F7\uFF08port number\uFF09\u548Cip\u5730\u5740\u90FD\u662F\u7B26\u5408\u7F51\u7EDC\u5B57\u8282\u5E8F\u7684\u3002\u4F46\u662F\u4F60\u5E76\u4E0D\u77E5\u9053\u4F60\u7684\u4E3B\u673A\u5B57\u8282\u5E8F\u662F\u5927\u7AEF\u8FD8\u662F\u5C0F\u7AEF\uFF0C\u4F60\u81EA\u7136\u4E5F\u5C31\u641E\u4E0D\u6E05\u4F60\u5230\u5E95\u9700\u4E0D\u9700\u8981\u8FDB\u884C\u8F6C\u6362\u3002</p><p>\u5176\u5B9E\u4E0D\u5FC5\u5982\u6B64\u8D39\u795E\uFF0C\u4E0D\u7528\u5728\u610F\u4E3B\u673A\u5E8F\uFF0C\u76F4\u63A5\u8C03\u7528\u51FD\u6570\u5F3A\u884C\u5C06\u4E3B\u673A\u5E8F\u8F6C\u6362\u4E3A\u7F51\u7EDC\u5B57\u8282\u5E8F\u5373\u53EF\u3002\u4E0B\u9762\u4E3E\u4E00\u4E2AC\u8BED\u8A00\u7F16\u5199\u670D\u52A1\u5668\u4EE3\u7801\u7ED1\u5B9A\u7AEF\u53E3\u7684\u4F8B\u5B50\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-10-06-053355.png" alt="image-20221006133355026" loading="lazy"></p><p>\u4EE3\u7801\u4E2D\u88AB\u7EA2\u8272\u6807\u8BB0\u7684\u90E8\u5206\u5C31\u662F\u5206\u522B\u5C06\u7AEF\u53E3\u53F7<code>33000</code>\u7531\u4E3B\u673A\u5E8F\u8F6C\u6362\u4E3A\u7F51\u7EDC\u5B57\u8282\u5E8F\uFF0C\u5C06ip\u5730\u5740\u7531\u4E3B\u673A\u5E8F\u8F6C\u6362\u4E3A\u7F51\u7EDC\u5B57\u8282\u5E8F\u7684\u51FD\u6570\u3002</p><p>\u4E4D\u773C\u4E00\u770B\uFF0C\u51FD\u6570\u540D\u975E\u5E38\u53E4\u602A\uFF0C\u4E0D\u597D\u8BB0\u5FC6\uFF0C\u4E0B\u9762\u7A0D\u5FAE\u89E3\u91CA\u4E00\u4E0B\uFF0C\u5404\u4F4D\u5C31\u8C41\u7136\u5F00\u6717\u4E86\u3002</p><p><code>Socket\u51FD\u6570\u5E93</code>\u63D0\u4F9B\u4E86\u8FD9\u79CD\u5B57\u8282\u5E8F\u8F6C\u6362\u7684\u51FD\u6570\uFF0C\u51FD\u6570\u7684\u4F5C\u7528\u5BF9\u8C61\u6709\u4E24\u79CD\uFF0C\u5206\u522B\u662F<code>short</code>\uFF082\u5B57\u8282\uFF09\u548C<code>long</code>\uFF084\u5B57\u8282\uFF09\uFF0C\u8FD9\u5C31\u662F\u51FD\u6570\u6700\u540E\u7684\u300C<code>s</code>\u300D\u548C\u300C<code>l</code>\u300D\u7684\u542B\u4E49\u3002</p><p>\u8FD8\u6709\uFF0C\u4E3B\u673A\u5B57\u8282\u5E8F\u7684\u82F1\u6587\u662F<code>Host Byte Order</code>\uFF0C\u7B80\u5199\u4E3A\u300C<code>h</code>\u300D\uFF0C\u7F51\u7EDC\u5B57\u8282\u5E8F\u7684\u82F1\u6587\u662F<code>Network Byte Order</code>\uFF0C\u7B80\u5199\u4E3A\u300C<code>n</code>\u300D\uFF0C\u300C<code>to</code>\u300D\u8868\u793A\u8F6C\u6362\uFF0C\u6240\u4EE5\uFF0C\u5982\u679C\u4F60\u60F3\u5C06<code>short</code>\u6570\u636E\u4ECE\u4E3B\u673A\u5B57\u8282\u5E8F\u8F6C\u6362\u4E3A\u7F51\u7EDC\u5B57\u8282\u5E8F\uFF0C\u90A3\u5C31\u5E94\u8BE5\u662F<code>h-to-n-s</code>\uFF0C\u8868\u793A<code>Host to Network Short</code>\u3002\u662F\u4E0D\u662F\u5F88\u7B80\u5355\uFF1F</p><p>\u6240\u4EE5\u7406\u8BBA\u4E0A\uFF0C\u4F60\u53EF\u4EE5\u7528\u300C<code>h</code>\u300D\u3001\u300C<code>to</code>\u300D\u3001\u300C<code>n</code>\u300D\u3001\u300C<code>s/l</code>\u300D\u8FD9\u51E0\u4E2A\u5B57\u6BCD\u7075\u6D3B\u7EC4\u5408\uFF0C\u7EC4\u6210\u4F60\u60F3\u8981\u7684api\uFF0C\u4F46\u662F\u4E5F\u522B\u778E\u641E\uFF0Cstolh()\uFF3B&quot;Short to Long Host&quot;\uFF3D\u8FD9\u79CD\u7EC4\u5408\u538B\u6839\u90FD\u4E0D\u5B58\u5728\u3002</p><p>\u57FA\u672C\u4E0A\u4F60\u9700\u8981\u7684\u4E5F\u5C31\u662F\u4EE5\u4E0B\u56DB\u79CD\u7F62\u4E86\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>htons() // host to network short
htonl() // host to network long
ntohs() // network to host short
ntohl() // network to host long
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u672C\u4E0A\uFF0C\u6211\u4EEC\u5728\u8FDB\u884Csocket\u7F16\u7A0B\u65F6\uFF0C\u5728\u53D1\u9001\u6570\u636E\u4E4B\u524D\u90FD\u9700\u8981\u628A\u6570\u636E\u8F6C\u6362\u4E3A\u7F51\u7EDC\u5B57\u8282\u5E8F\uFF0C\u5E76\u5728\u6536\u5230\u6570\u636E\u4E4B\u540E\u518D\u8F6C\u6362\u6210\u4E3B\u673A\u5B57\u8282\u5E8F\u3002</p><blockquote><p>\u66F4\u591A\u5173\u4E8E\u6D6E\u70B9\u6570\u7684\u5904\u7406\uFF0C\u4F1A\u5728\u4E4B\u540E\u4E13\u95E8\u7684\u7AE0\u8282\u63D0\u53CA\u3002</p></blockquote><blockquote><p>\u5982\u65E0\u7279\u6B8A\u8BF4\u660E\uFF0C\u672C\u5C0F\u518C\u7684\u6570\u503C\u9884\u8BBE\u90FD\u89C6\u4E3A\u4E3B\u673A\u5B57\u8282\u5E8F\u3002</p></blockquote><h3 id="_4-3-socket\u76F8\u5173\u7684\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_4-3-socket\u76F8\u5173\u7684\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 4.3. socket\u76F8\u5173\u7684\u6570\u636E\u7ED3\u6784</h3><p>\u7EC8\u4E8E\u8BB2\u5230\u8FD9\u91CC\u4E86\uFF0C\u73B0\u5728\u8BE5\u804A\u4E00\u804A\u548C\u7F16\u7A0B\u76F4\u63A5\u76F8\u5173\u7684\u4E00\u4E9B\u5185\u5BB9\u4E86\uFF0C\u672C\u8282\u4F1A\u4ECB\u7ECD\u591A\u79CDSocket\u5E93\u4F7F\u7528\u7684\u6570\u636E\u7ED3\u6784\u3002</p><h4 id="_4-3-1-socket\u63CF\u8FF0\u7B26" tabindex="-1"><a class="header-anchor" href="#_4-3-1-socket\u63CF\u8FF0\u7B26" aria-hidden="true">#</a> 4.3.1. socket\u63CF\u8FF0\u7B26</h4><p>\u9996\u5148\u4ECB\u7ECD\u4E00\u4E2A\u6700\u7B80\u5355\u7684\uFF1Asocket\u63CF\u8FF0\u7B26\u3002\u5B83\u7684\u7C7B\u578B\u662F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6CA1\u9519\uFF0C\u5C31\u53EA\u662F\u4E2A\u666E\u666E\u901A\u901A\u7684<code>int</code>\u800C\u5DF2\u3002</p><p>\u7B2C\u4E00\u4E2A\u4ECB\u7ECD\u5B8C\u4E86\u3002\u3002\u3002\u3002\u3002\u3002\u7B80\u5355\u5427\u3002</p><p>\u4F46\u662F\u4ECE\u8FD9\u513F\u5F00\u59CB\u5C31\u7A0D\u5FAE\u6709\u70B9\u4E0D\u597D\u7406\u89E3\u4E86\uFF0C\u5927\u5BB6\u8DDF\u4E0A\u8F66\u901F\uFF0C\u6162\u6162\u6765\u3002</p><h4 id="_4-3-2-struct\u2014addrinfo" tabindex="-1"><a class="header-anchor" href="#_4-3-2-struct\u2014addrinfo" aria-hidden="true">#</a> 4.3.2. struct\u2014addrinfo</h4><p>\u7B2C\u4E00\u4E2A\u8981\u4ECB\u7ECD\u7684<code>struct</code>\u7ED3\u6784\u662F<code>addrinfo</code>\uFF0C\u8FD9\u4E2A\u6570\u636E\u7ED3\u6784\u7684\u53D1\u660E\u65F6\u95F4\u8FD8\u4E0D\u7B97\u5F88\u4E45\uFF0C\u662F\u7528\u6765\u51C6\u5907<code>socket\u5730\u5740</code>\u7B49\u4FE1\u606F\u4EE5\u4F9B\u540E\u7EED\u4F7F\u7528\u7684\u3002\u5B83\u4E5F\u4F1A\u88AB\u7528\u5728<strong>\u57DF\u540D\u67E5\u627E</strong>\uFF08host name lookups\uFF09\u4EE5\u53CA<strong>\u670D\u52A1\u67E5\u627E</strong>\uFF08service name lookups\uFF09\u7B49\u65B9\u9762\u3002</p><p>\u8FD9\u4E48\u542C\u8D77\u6765\u611F\u89C9\u5F88\u62BD\u8C61\uFF0C\u7B49\u4E4B\u540E\u6211\u4EEC\u5B9E\u9645\u4F7F\u7528\u7684\u65F6\u5019\u5C31\u597D\u7406\u89E3\u4E86\uFF0C\u73B0\u5728\u6211\u4EEC\u9700\u8981\u77E5\u9053\u7684\u5C31\u662F\uFF1A\u6211\u4EEC\u5728\u5EFA\u7ACB\u7F51\u7EDC\u8FDE\u63A5\u7684\u65F6\u5019\u4F1A\u7528\u5230<code>addrinfo</code>\u8FD9\u4E2A\u6570\u636E\u7ED3\u6784\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span>              ai_flags<span class="token punctuation">;</span>     <span class="token comment">// AI_PASSIVE, AI_CANONNAME, etc.</span>
    <span class="token keyword">int</span>              ai_family<span class="token punctuation">;</span>    <span class="token comment">// AF_INET, AF_INET6, AF_UNSPEC</span>
    <span class="token keyword">int</span>              ai_socktype<span class="token punctuation">;</span>  <span class="token comment">// SOCK_STREAM, SOCK_DGRAM</span>
    <span class="token keyword">int</span>              ai_protocol<span class="token punctuation">;</span>  <span class="token comment">// use 0 for &quot;any&quot;</span>
    <span class="token class-name">size_t</span>           ai_addrlen<span class="token punctuation">;</span>   <span class="token comment">// size of ai_addr in bytes</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>ai_addr<span class="token punctuation">;</span>      <span class="token comment">// struct sockaddr_in or _in6</span>
    <span class="token keyword">char</span>            <span class="token operator">*</span>ai_canonname<span class="token punctuation">;</span> <span class="token comment">// full canonical hostname</span>

    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>ai_next<span class="token punctuation">;</span>      <span class="token comment">// \u94FE\u8868\u7ED3\u6784\uFF0C\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u7528\u57DF\u540D\u67E5\u627E\u6765\u505A\u4E2A\u4F8B\u5B50\uFF0C\u5E2E\u52A9\u5927\u5BB6\u7406\u89E3\u3002</p><h5 id="_4-3-2-1-\u4F7F\u7528ip\u5EFA\u7ACB\u8FDE\u63A5" tabindex="-1"><a class="header-anchor" href="#_4-3-2-1-\u4F7F\u7528ip\u5EFA\u7ACB\u8FDE\u63A5" aria-hidden="true">#</a> 4.3.2.1. \u4F7F\u7528ip\u5EFA\u7ACB\u8FDE\u63A5</h5><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u90FD\u662F\u76F4\u63A5\u5229\u7528IP\u548C\u7AEF\u53E3\u5411\u670D\u52A1\u5668\u53D1\u8D77\u8FDE\u63A5\uFF0C\u50CF\u8FD9\u6837</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> si<span class="token punctuation">;</span>

<span class="token comment">//\u8FD9\u4E00\u884C\u4F60\u53EF\u80FD\u8FD8\u4E0D\u77E5\u9053\u4EC0\u4E48\u610F\u601D\uFF0C\u522B\u6025\uFF0C\u4E0B\u6587\u4F1A\u89E3\u91CA</span>
<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>si<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>si<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

si<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
si<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span><span class="token string">&quot;182.25.23.123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
si<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">connect</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>si<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>si<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6CA1\u63A5\u89E6\u8FC7C\u7684socket\u7F16\u7A0B\uFF0C\u4F60\u53EF\u80FD\u5DF2\u7ECF\u5F00\u59CB\u6253\u9000\u5802\u9F13\u4E86\u3002\u6211\u61C2\u4F60\u8FD9\u79CD\u611F\u89C9\uFF0C\u6211\u90FD\u5DF2\u7ECF\u653E\u5F03\u597D\u51E0\u6B21\u4E86\u3002\u3002\u3002\u3002\u3002\u3002</p><p>\u4F46\u662F\u540E\u6765\u786C\u7740\u5934\u76AE\u770B\u5176\u5B9E\u4E5F\u6CA1\u4EC0\u4E48\uFF0C\u867D\u7136\u5199\u6CD5\u602A\u5F02\uFF0C\u4F46\u90FD\u662FC\u8BED\u8A00\u4E0A\u7684\u5957\u8DEF\u800C\u5DF2\uFF0C\u770B\u591A\u4E86\u4E5F\u5C31\u90A3\u4E48\u56DE\u4E8B\u513F\uFF01</p><p>\u4E0A\u9762\u7684\u4EE3\u7801\u7684\u610F\u601D\u5C31\u662F\u5BF9<code>182.25.23.123</code>\u7684<code>80</code>\u7AEF\u53E3\u53D1\u8D77\u4E86\u4E00\u4E2A\u8FDE\u63A5\u3002\u524D\u63D0\u662F\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\u4E86\u4E3B\u673A\u7684IP\u4E86\uFF0C\u5982\u679C\u53EA\u6709\u57DF\u540D\u8BE5\u600E\u4E48\u529E\u5462\uFF1F</p><p>\u90A3\u6211\u4EEC\u5C31\u5F97\u5229\u7528<code>DNS</code>\uFF0C\u7528\u53E6\u4E00\u79CD\u65B9\u5F0F\u6765\u6784\u5EFA\u5BA2\u6237\u7AEF\u5957\u63A5\u5B57\u4E86\uFF0C\u800C\u8FD9\u79CD\u65B9\u5F0F\u5C31\u4F1A\u7528\u5230<code>addrinfo</code>\u3002</p><h5 id="_4-3-2-2-\u4F7F\u7528\u57DF\u540D\u5EFA\u7ACB\u8FDE\u63A5" tabindex="-1"><a class="header-anchor" href="#_4-3-2-2-\u4F7F\u7528\u57DF\u540D\u5EFA\u7ACB\u8FDE\u63A5" aria-hidden="true">#</a> 4.3.2.2. \u4F7F\u7528\u57DF\u540D\u5EFA\u7ACB\u8FDE\u63A5</h5><p>\u76F4\u63A5\u4E0A\u4EE3\u7801\uFF01</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// \u4E3A\u4E86\u4F7F\u7528getaddrinfo()\u51FD\u6570\uFF0C\u9700\u8981\u8FD9\u4E2A\u5934\u6587\u4EF6</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">;</span>
<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>hints<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token string">&quot;www.chanmufeng.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;80&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getaddrinfo()</code>\u51FD\u6570\u4F1A\u521B\u5EFA\u4E00\u4E2A\u53EB\u505A<strong>\u540D\u5B57\u8D44\u6E90</strong>\u7684\u65B0\u6570\u636E\u7ED3\u6784\uFF08\u4E5F\u5C31\u662F\u4EE3\u7801\u4E2D\u7684<code>res</code>\uFF09\uFF0C\u7ED9\u5B9A<code>\u57DF\u540D</code>\u548C<code>\u7AEF\u53E3\u53F7</code>\u4EE5\u53CA<code>hints</code>\u4FE1\u606F\uFF0C\u8BE5\u51FD\u6570\u5C31\u4F1A\u5C06\u540D\u5B57\u8D44\u6E90\u7684\u6570\u636E\u4FDD\u5B58\u5728\u4E86\u4E00\u4E2A\u53EB\u505A<code>res</code>\u7684<code>addrinfo</code>\u6570\u636E\u7ED3\u6784\u4E2D\uFF0C<code>res</code>\u5C31\u5305\u542B\u4E86\u670D\u52A1\u5668\u7684IP\u7B49\u4E0B\u4E00\u6B65\u6240\u9700\u7684\u4FE1\u606F\u3002</p><blockquote><p>\u5728\u53D1\u660E<code>struct addrinfo</code>\u4E4B\u524D\uFF0C\u6211\u4EEC\u90FD\u9700\u8981\u624B\u52A8\u586B\u5199<code>res</code>\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5B57\u6BB5\u7684\uFF0C\u8FDC\u4E0D\u5982\u73B0\u5728<code>getaddrinfo()</code>\u5E2E\u6211\u4EEC\u5904\u7406\u5730\u8FD9\u4E48\u597D\u3002</p></blockquote><p>\u8FD8\u6CA1\u5B8C\u5462\uFF0C\u8FD9\u53EA\u662F\u83B7\u53D6\u5230\u4E86\u670D\u52A1\u5668\u7684IP\u4FE1\u606F\u800C\u5DF2\uFF0C\u6211\u4EEC\u8FD8\u5F97\u521B\u5EFA\u5BA2\u6237\u7AEF<code>socket</code>\uFF0C\u7136\u540E\u8FDB\u884C<code>connect()</code>\uFF0C\u4F46\u662F\u518D\u8FDB\u4E00\u6B65\u8BB2\u89E3\u4E4B\u524D\uFF0C\u6211\u60F3\u5148\u7A0D\u5FAE\u89E3\u91CA\u4E00\u4E0B\u4EE3\u7801\u4E2D<code>hints</code>\u7684\u4FE1\u606F\u5206\u522B\u662F\u4EC0\u4E48\u610F\u601D\uFF0C\u6BD5\u7ADF\u8BA9\u67D0\u4E9B\u8BFB\u8005\u5E26\u7740\u7591\u95EE\u5F80\u4E0B\u8BFB\u4E5F\u662F\u6709\u4E9B\u4E8E\u5FC3\u4E0D\u5FCD\u3002</p><p><code>hints.ai_family</code>\u67093\u79CD\u9009\u62E9\uFF0C</p><ul><li><code>AF_INET</code>\uFF0C\u8868\u793A\u5F3A\u5236\u4F7F\u7528IPv4</li><li><code>AF_INET6</code>\uFF0C\u8868\u793A\u5F3A\u5236\u4F7F\u7528IPv6</li><li><code>AF_UNSPEC</code>\uFF0C\u968F\u4FBF\uFF0CIPv4\u6216\u8005IPv6\u90FD\u884C</li></ul><p><code>hints.ai_socktype</code>\u67092\u79CD\u9009\u62E9\uFF0C</p><ul><li><code>SOCK_STREAM</code>\uFF0C\u8868\u793A\u4F7F\u7528TCP\u534F\u8BAE</li><li><code>SOCK_DGRAM</code>\uFF0C\u8868\u793A\u4F7F\u7528UDP\u534F\u8BAE</li></ul><p>\u89E3\u91CA\u5B8C\u4E86\uFF0C\u7136\u540E\u6211\u4EEC\u7528<code>res</code>\u4E2D\u7684\u6570\u636E\u7EE7\u7EED\u6211\u4EEC\u7684\u8FDE\u63A5\u8FC7\u7A0B\u3002\u4ECE\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\u4F60\u53EF\u4EE5\u770B\u5230\uFF0C\u521B\u5EFA<code>socket</code>\u5957\u63A5\u5B57\u4EE5\u53CA<code>connect</code>\u6240\u9700\u8981\u7684\u6240\u6709\u4FE1\u606F\u6211\u4EEC\u90FD\u53EF\u4EE5\u4ECE<code>res</code>\u4E2D\u76F4\u63A5\u83B7\u53D6\u5230\u4E86\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> s <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">connect</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E00\u70B9\u9700\u8981\u9700\u8981\u6211\u4EEC\u7279\u522B\u6CE8\u610F\uFF0C\u5728\u4F7F\u7528ip\u5EFA\u7ACB\u8FDE\u63A5\u65F6\uFF0C<code>connect()</code>\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6211\u4EEC\u91C7\u7528\u4E86\u7C7B\u578B\u5F3A\u8F6C\u7684\u65B9\u5F0F\uFF0C\u5C06<code>struct sockraddr_in *</code>\u5F3A\u8F6C\u6210\u4E86<code>struct sockaddr *</code>\u3002\u4F46\u662F\u5728\u4F7F\u7528\u57DF\u540D<code>connect()</code>\u65F6\uFF0C\u76F4\u63A5\u4ECE<code>res</code>\u8FD9\u4E2A<code>addrinfo</code>\u7ED3\u6784\u4E2D\u4F7F\u7528\u4E86<code>struct sockaddr *ai_addr</code>\u8FD9\u4E2A\u5B57\u6BB5\uFF08\u4E0D\u6E05\u695A\u7684\u8BDD\u518D\u770B\u4E00\u770B<code>addrinfo</code>\u7684\u6570\u636E\u7ED3\u6784\uFF09\u3002</p><p>\u6240\u4EE5\uFF0C<code>sockaddr</code>\u5C31\u662F\u6211\u4EEC\u8981\u5B66\u4E60\u7684\u4E0B\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u4E86\u3002</p><blockquote><p>\u6CE8\uFF1A\u6709\u4E9B\u6570\u636E\u7ED3\u6784\u5C5E\u4E8E IPv4\uFF0C\u800C\u6709\u4E9B\u662F IPv6\uFF0C\u6709\u4E9B\u4E24\u8005\u7686\u53EF\uFF0C\u6211\u4F1A\u7279\u5225\u6CE8\u660E\u5B83\u4EEC\u5C5E\u4E8E\u54EA\u4E00\u79CD\u3002</p></blockquote><h4 id="_4-3-3-struct\u2014sockaddr" tabindex="-1"><a class="header-anchor" href="#_4-3-3-struct\u2014sockaddr" aria-hidden="true">#</a> 4.3.3. struct\u2014sockaddr</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">short</span>    sa_family<span class="token punctuation">;</span>    <span class="token comment">// address family, AF_xxx</span>
    <span class="token keyword">char</span>              sa_data<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 14 bytes of protocol address</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sa_family</code>\u7684\u53EF\u9009\u503C\u6709\u5F88\u591A\uFF0C\u4F46\u662F\u672C\u5C0F\u518C\u4E2D\u53EA\u4F1A\u4F7F\u7528<code>AF_INET</code>\uFF08IPv4\uFF09\u6216 <code>AF_INET6</code>\uFF08IPv6\uFF09\u3002</p><p><code>sa_data</code>\u5305\u542B\u4E86socket\u9700\u8981\u7684\u76EE\u7684\u5730\u5740\u4EE5\u53CA\u7AEF\u53E3\u53F7\uFF0C\u4F46\u662F\u8FD9\u6837\u5B9E\u5728\u662F\u5F88\u4E0D\u65B9\u4FBF\uFF0C\u56E0\u4E3A\u4F60\u9700\u8981\u624B\u52A8\u628Aip\u5730\u5740\u548C\u7AEF\u53E3\u53F7\u6253\u5305\u523014\u5B57\u8282\u7684\u6570\u7EC4\u4E2D\u3002</p><p>\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5927\u4F6C\u4EEC\u53C8\u521B\u9020\u4E86\u4E24\u4E2A\u66FF\u4EE3\u54C1\uFF0C<code>sockaddr_in</code>\u548C<code>sockaddr_in6</code>\u3002</p><h4 id="_4-3-4-struct\u2014sockaddr-in" tabindex="-1"><a class="header-anchor" href="#_4-3-4-struct\u2014sockaddr-in" aria-hidden="true">#</a> 4.3.4. struct\u2014sockaddr_in</h4><p>\u540E\u7F00<code>in</code>\u8868\u793A<code>internet</code>\uFF0C\u800C\u4E14\u8FD9\u4E2A\u6570\u636E\u7ED3\u6784\u53EA\u80FD\u7528\u5728<code>IPv4</code>\uFF01</p><p>\u975E\u5E38\u91CD\u8981\u7684\u4E00\u70B9\uFF08\u5176\u5B9E\u4E0A\u6587\u5DF2\u7ECF\u63D0\u5230\u8FC7\uFF09\uFF0C<code>struct sockaddr_in *</code>\u7C7B\u578B\u53EF\u4EE5\u548C <code>struct sockaddr *</code>\u76F8\u4E92\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u3002\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48<code>connect()</code>\u51FD\u6570\u9700\u8981\u4E00\u4E2A<code>struct sockaddr *</code>\u53C2\u6570\uFF0C\u6211\u4EEC\u5374\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528<code>struct sockaddr_in *</code>\u8FDB\u884C\u5F3A\u8F6C\u4F20\u5165\u7684\u539F\u56E0\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// (IPv4\u4E13\u7528--IPv6\u89C1\u4E0B\u6587\u7684 sockaddr_in6)</span>
    
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token punctuation">{</span>
    <span class="token keyword">short</span> <span class="token keyword">int</span>          sin_family<span class="token punctuation">;</span>  <span class="token comment">// Address family, AF_INET</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token keyword">int</span> sin_port<span class="token punctuation">;</span>    <span class="token comment">// Port number</span>
    <span class="token keyword">struct</span> <span class="token class-name">in_addr</span>     sin_addr<span class="token punctuation">;</span>    <span class="token comment">// Internet address</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span>      sin_zero<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Same size as struct sockaddr</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sockaddr_in</code>\u4E2D\u7684\u6BCF\u4E2A\u5B57\u6BB5\u770B\u8D77\u6765\u5C31\u6BD4<code>sockaddr</code>\u8981\u6E05\u6670\u5F88\u591A\u4E86\u3002</p><p><code>sin_zero</code>\u662F\u4E3A\u4E86\u8BA9<code>sockaddr</code>\u4E0E<code>sockaddr_in</code>\u4E24\u4E2A\u6570\u636E\u7ED3\u6784\u4FDD\u6301\u5927\u5C0F\u76F8\u540C\u800C\u4FDD\u7559\u7684\u7A7A\u5B57\u8282\uFF0C\u4F7F\u7528\u4E4B\u524D\u5E94\u8BE5\u4F7F\u7528<code>memset()</code>\u5C06\u6240\u6709\u6570\u636E\u7F6E\u4E3A0\u3002</p>`,121),sn=n("code",null,"sin_family",-1),an=s("\u5BF9\u5E94\u7684\u5C31\u662F"),en=n("code",null,"sockaddr",-1),tn=s("\u4E2D\u7684"),on=n("code",null,"sa_family",-1),pn=s("\uFF0C\u5E94\u8BE5\u8BBE\u7F6E\u4E3A"),cn=n("code",null,"AF_INET",-1),ln=s("\u3002"),dn=n("code",null,"sin_port",-1),rn=s("\u5FC5\u987B\u4F7F\u7528"),un=n("code",null,"htons()",-1),kn=s("\u4F7F\u5176\u7B26\u5408"),vn={href:"https://www.chanmufeng.com/posts/network-programming/%E5%AD%97%E8%8A%82%E5%BA%8F.html",target:"_blank",rel:"noopener noreferrer"},mn=s("\u7F51\u7EDC\u5B57\u8282\u5E8F"),bn=s("\u3002"),hn=t(`<p>\u518D\u7EE7\u7EED\u6316\u5F97\u6DF1\u4E00\u70B9\uFF01<code>sockaddr_in</code>\u7684<code>sin_addr</code>\u5B57\u6BB5\u662F<code>struct in_addr</code>\u7ED3\u6784\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// (IPv4 \u4E13\u7528--IPv6\u89C1\u4E0B\u6587\u7684in6_addr)</span>
    
<span class="token comment">// Internet address (\u7531\u4E8E\u5386\u53F2\u539F\u56E0\u800C\u4FDD\u7559\u7684\u4E00\u4E2A\u6570\u636E\u7ED3\u6784)</span>
<span class="token keyword">struct</span> <span class="token class-name">in_addr</span> <span class="token punctuation">{</span>
  	<span class="token class-name">uint32_t</span> s_addr<span class="token punctuation">;</span> <span class="token comment">// that&#39;s a 32-bit int (4 bytes)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528\u8D77\u6765\u5F88\u7B80\u5355\uFF0C\u5982\u679C\u4F60\u58F0\u660E\u4E86\u4E00\u4E2A<code>sockaddr_in</code>\u7684\u53D8\u91CF<code>sin</code>\uFF0C\u90A3\u4E48<code>sin.sin_addr.s_addr</code>\u8868\u793A\u7684\u5C31\u662F\u4E00\u4E2A4\u5B57\u8282\u7684IP\u5730\u5740\uFF08\u7B26\u5408\u7F51\u7EDC\u5B57\u8282\u5E8F\uFF09\u3002</p><p>IPv4\u7684\u8BF4\u5B8C\u4E86\uFF0C\u5BF9\u5E94\u7740\uFF0C\u6211\u4EEC\u518D\u770B\u770BIPv6\u7684\u3002</p><h4 id="_4-3-5-struct\u2014sockaddr-in6" tabindex="-1"><a class="header-anchor" href="#_4-3-5-struct\u2014sockaddr-in6" aria-hidden="true">#</a> 4.3.5. struct\u2014sockaddr_in6</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// (IPv6 \u4E13\u7528--IPv4\u89C1\u4E0A\u6587\u7684sockaddr_in)</span>
    
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token punctuation">{</span>
    <span class="token class-name">u_int16_t</span>       sin6_family<span class="token punctuation">;</span>   <span class="token comment">// address family, AF_INET6</span>
    <span class="token class-name">u_int16_t</span>       sin6_port<span class="token punctuation">;</span>     <span class="token comment">// port number, Network Byte Order</span>
    <span class="token class-name">u_int32_t</span>       sin6_flowinfo<span class="token punctuation">;</span> <span class="token comment">// IPv6 flow information</span>
    <span class="token keyword">struct</span> <span class="token class-name">in6_addr</span> sin6_addr<span class="token punctuation">;</span>     <span class="token comment">// IPv6 address</span>
    <span class="token class-name">u_int32_t</span>       sin6_scope_id<span class="token punctuation">;</span> <span class="token comment">// Scope ID</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
    
<span class="token keyword">struct</span> <span class="token class-name">in6_addr</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span>   s6_addr<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">// IPv6 address</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sin6_family</code>\u5BF9\u5E94\u7684\u662F<code>sockaddr_in</code>\u7684<code>sin_family</code>\u5B57\u6BB5\uFF0C<code>sin6_port</code>\u5BF9\u5E94\u7684\u662F<code>sockaddr_in</code>\u7684<code>sin_port</code>\u5B57\u6BB5\uFF0C<code>sin6_addr</code>\u5BF9\u5E94\u7684\u662F<code>sockaddr_in</code>\u7684<code>sin_addr</code>\u5B57\u6BB5\u3002</p><p>\u81F3\u4E8E<code>sin6_flowinfo</code>\u548C<code>sin6_scope_id</code>\u672C\u5C0F\u518C\u5C31\u4E0D\u4F1A\u6D89\u53CA\u4E86\uFF0C\u6BD5\u7ADF\u6211\u4EEC\u662F\u7B80\u660E\u6559\u7A0B\u561B\u3002</p><p>hold on\uFF5Ehold on\uFF5E</p><p>\u8FD8\u6CA1\u7ED3\u675F\uFF0C\u6700\u540E\u518D\u4ECB\u7ECD\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\uFF0C\u90A3\u53E5\u82F1\u6587\u600E\u4E48\u8BF4\u6765\u7740\uFF1FLast but not least\uFF0C\u867D\u7136\u5B83\u6392\u5728\u6700\u540E\uFF0C\u4F46\u662F\u4E5F\u4E0D\u5BB9\u5FFD\u89C6\u3002</p><h4 id="_4-3-6-struct\u2014sockaddr-storage" tabindex="-1"><a class="header-anchor" href="#_4-3-6-struct\u2014sockaddr-storage" aria-hidden="true">#</a> 4.3.6. struct\u2014sockaddr_storage</h4><p><code>sockaddr_storage</code>\u662F\u4E00\u4E2A\u4E0E<code>sockaddr</code>\u540C\u4E00\u7EA7\u522B\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u7528\u6765\u4FDD\u5B58IPv4\u5730\u5740\u548CIPv6\u5730\u5740\u3002</p><p>\u4E0D\u662F\u5DF2\u7ECF\u6709\u4E86<code>sockaddr_in</code>\u6765\u4FDD\u5B58IPv4\uFF0C<code>sockaddr_in6</code>\u6765\u4FDD\u5B58IPv6\u4E86\u561B\uFF1F\u751A\u81F3<code>sockaddr</code>\u8FD8\u901A\u7528\uFF0C\u4E3A\u4EC0\u4E48\u8FD8\u9700\u8981<code>sockaddr_storage</code>\u5462\uFF1F</p><p>\u56E0\u4E3A\u6709\u4E9B\u65F6\u5019\u4F60\u53EF\u80FD\u65E0\u6CD5\u63D0\u524D\u786E\u5B9A\u4F60\u8981\u4F7F\u7528IPv4\u8FD8\u662FIPv6\uFF01</p><p>\u4F60\u53EF\u80FD\u4F1A\u95EE\uFF0C\u8FD9\u6709\u4EC0\u4E48\u5173\u7CFB\u5462\uFF1F\u6211\u4EEC\u8FD8\u6709<code>sockaddr</code>\u554A\uFF0C\u5B83\u53EF\u662F\u901A\u5403\u554A\u3002</p><p>\u5BF9\uFF0C\u901A\u5403\uFF01\u4F46\u53EA\u662F\u540D\u4E49\u4E0A\u7684\u3002\u6211\u4EEC\u6765\u5206\u6790\u4E00\u4E0B\u3002</p><p><code>sockaddr</code>\u8EAB\u4E3A\u4E00\u4E2A\u901A\u7528\u7684\u5730\u5740\u6570\u636E\u7ED3\u6784\uFF0C\u7406\u8BBA\u4E0A\u7684\u5927\u5C0F\u5C31\u5E94\u8BE5\u662F\u6240\u6709\u5177\u4F53\u534F\u8BAE\u5730\u5740\u7ED3\u6784\u5927\u5C0F\u7684\u6700\u5927\u503C\u3002\u4F46\u662F<code>sizeof(struct sockaddr) = 16</code>, \u800C<code>sizeof(struct sockaddr_in6) = 28</code>\uFF0C<code>sockaddr</code>\u6CA1\u6709\u80FD\u529B\u4FDD\u5B58IPv6\u554A\u3002</p><p>\u4E8E\u662F<code>sockaddr_storage</code>\u5C31\u8BDE\u751F\u4E86\u3002\u5B83\u7684\u5927\u5C0F\u4E3A128\u5B57\u8282\uFF0C\u5E94\u8BE5\u80FD\u88C5\u5F97\u4E0B\u76EE\u524D\u6240\u4EE5\u534F\u8BAE\u7684\u5730\u5740\u7ED3\u6784\u4E86\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> <span class="token punctuation">{</span>
  <span class="token class-name">sa_family_t</span>  ss_family<span class="token punctuation">;</span>     <span class="token comment">// address family</span>

  <span class="token comment">// all this is padding, implementation specific, ignore it:</span>
  <span class="token keyword">char</span>      __ss_pad1<span class="token punctuation">[</span>_SS_PAD1SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token class-name">int64_t</span>   __ss_align<span class="token punctuation">;</span>
  <span class="token keyword">char</span>      __ss_pad2<span class="token punctuation">[</span>_SS_PAD2SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3E\u4E2A\u6817\u5B50\u5427\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> addr<span class="token punctuation">;</span>
<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>addr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isIPv6 <span class="token operator">==</span> TRUE<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token operator">*</span>addr_v6 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>addr<span class="token punctuation">;</span>
    addr_v6<span class="token operator">-&gt;</span>sin6_family <span class="token operator">=</span> AF_INET6<span class="token punctuation">;</span>
    addr_v6<span class="token operator">-&gt;</span>sin6_port <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
    <span class="token function">inet_pton</span><span class="token punctuation">(</span>AF_INET6<span class="token punctuation">,</span> \u201C<span class="token number">2201</span><span class="token operator">:</span><span class="token number">3212</span><span class="token operator">::</span><span class="token number">1</span>\u201D<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>addr_v6<span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span>addr_v4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>addr<span class="token punctuation">;</span>
    addr_v4<span class="token operator">-&gt;</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
    addr_v4<span class="token operator">-&gt;</span>sin_port <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
    <span class="token function">inet_aton</span><span class="token punctuation">(</span>\u201C<span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.45</span>\u201D<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>addr_v4<span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">sendto</span><span class="token punctuation">(</span>sock<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> len<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u7ED3\u4E00\u4E0B\u4F60\u4E5F\u5C31\u660E\u767D\u4E86\uFF0C\u5BF9\u4E8E\u5B58\u50A8\u5730\u5740\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4E00\u5171\u67094\u79CD\uFF0C\u5E76\u4E14\u6BCF\u79CD\u4E4B\u95F4\u90FD\u53EF\u4EE5\u8FDB\u884C\u8F6C\u6362</p><ul><li><code>sockaddr</code>\uFF08\u6700\u539F\u59CB\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F46\u662F\u88C5\u4E0D\u4E0BIPv6\uFF09</li><li><code>sockaddr_in</code>\uFF08\u4E13\u7528\u4E8EIPv4\uFF09</li><li><code>sockaddr_in6</code>\uFF08\u4E13\u7528\u4E8EIPv6\uFF09</li><li><code>sockaddr_storage</code>\uFF08\u76F8\u5F53\u4E8E<code>sockaddr</code>\u7684\u8865\u4E01\uFF0C\u80FD\u88C5\u4E0D\u4E0BIPv6\uFF09</li></ul><p>\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u540E3\u79CD\u7ED3\u6784\u90FD\u9700\u8981\u5F3A\u8F6C\u4E3A<code>sockaddr</code>\uFF0C\u4F60\u53EF\u80FD\u4F1A\u95EE\u4E3A\u4EC0\u4E48\u4E0D\u76F4\u63A5\u4F20\u5165<code>sockaddr_storage</code>\u5462\uFF1F\u8FD9\u4E5F\u662F\u6CA1\u529E\u6CD5\u7684\u4E8B\u60C5\uFF0C\u56E0\u4E3Aapi\u4ECE\u4E00\u5F00\u59CB\u7684\u65F6\u5019\u5C31\u5DF2\u7ECF\u786E\u5B9A\u597D\u4E86\uFF0C\u53D8\u4E86\u7684\u8BDD\u65E7\u4EE3\u7801\u4E5F\u5C31\u4E0D\u80FD\u8FD0\u884C\u4E86\u3002\u6211\u4EEC\u80FD\u505A\u7684\u5C31\u662F\u6253\u8865\u4E01\u3002</p><p>\u5F88\u591A\u5947\u5947\u602A\u602A\u6570\u636E\u7ED3\u6784\u7684\u51FA\u73B0\uFF0C\u5C31\u662F\u7531\u4E8E\u6700\u5F00\u59CB\u6CA1\u60F3\u5230\u4F1A\u53D1\u5C55\u5230\u73B0\u5728\u8FD9\u79CD\u60C5\u51B5\u800C\u5BFC\u81F4\u7684\u3002\u5305\u62EC\u73B0\u5728\u4E5F\u4E00\u6837\uFF0C\u6211\u4EEC\u5F88\u96BE\u9884\u6D4B\u672A\u6765\u7684\u5168\u90E8\u53D8\u5316\uFF0C\u80FD\u60F3\u5230\u6700\u597D\uFF0C\u60F3\u4E0D\u5168\u6216\u662F\u4F4E\u4F30\u672A\u6765\u624D\u662F\u5E38\u6001\u3002</p><h3 id="_4-4-ip\u7684\u4E8C\u8FDB\u5236\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#_4-4-ip\u7684\u4E8C\u8FDB\u5236\u8F6C\u6362" aria-hidden="true">#</a> 4.4. IP\u7684\u4E8C\u8FDB\u5236\u8F6C\u6362</h3><p>\u4E0D\u5F97\u4E0D\u8BF4\uFF0C\u6211\u4EEC\u771F\u7684\u5F88\u5E78\u8FD0\uFF0C\u5982\u4ECA\u5DF2\u7ECF\u6709\u4E86\u5F88\u591A\u51FD\u6570\u53EF\u4EE5\u8BA9\u6211\u4EEC\u64CD\u4F5CIP\u5730\u5740\uFF0C\u800C\u4E0D\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u7528<code>long</code>\u7C7B\u578B\u6570\u636E\u4EE5\u53CA<code>&lt;&lt;</code>\u8FD0\u7B97\u7B26\u6765\u5904\u7406\u5B83\u4EEC\u3002</p><p>\u5047\u5982\u4F60\u58F0\u660E\u4E86\u4E00\u4E2A\u6570\u636E\u7ED3\u6784<code>struct sockaddr_in ina</code>\uFF0C\u4F60\u8FD8\u6709\u4E00\u4E2A\u201C<code>10.12.110.57</code>\u201D\u6216\u201C<code>2001:db8:63b3:1::3490</code>\u201D\u8FD9\u6837\u7684IP\u5730\u5740\uFF0C\u8BE5\u600E\u4E48\u628AIP\u5730\u5740\u5B58\u5165<code>ina</code>\u5462\u3002</p><h4 id="_4-4-1-ip\u8F6C\u4E8C\u8FDB\u5236" tabindex="-1"><a class="header-anchor" href="#_4-4-1-ip\u8F6C\u4E8C\u8FDB\u5236" aria-hidden="true">#</a> 4.4.1. IP\u8F6C\u4E8C\u8FDB\u5236</h4><p>\u4F60\u53EF\u4EE5\u4F7F\u7528<code>inet_pton()</code>\u5C06\u70B9\u5206\u5341\u8FDB\u5236\u5F62\u5F0F\u7684IPv4\u5730\u5740\u4FDD\u5B58\u5728<code>ina</code>\u4E2D\uFF0C\u4F46\u5982\u679C\u8981\u4FDD\u5B58IPv6\u5730\u5740\u7684\u8BDD\uFF0C\u6211\u4EEC\u5C31\u9700\u8981<code>struct sockaddr_in6 ina6</code>\u4E86\u3002</p><blockquote><p>\u201C<code>pton</code>\u201D\u7684\u5168\u79F0\u662F\u201Cpresentation to network\u201D\uFF0C\u4E5F\u53EF\u4EE5\u662F\u201Cprintable to network\u201D\uFF0C\u9009\u4E00\u4E2A\u80FD\u5E2E\u52A9\u4F60\u8BB0\u5FC6\u7684\u5C31\u884C\u3002</p></blockquote><p>\u5177\u4F53\u7684\u8F6C\u6362\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> sa<span class="token punctuation">;</span> <span class="token comment">// IPv4</span>
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> sa6<span class="token punctuation">;</span> <span class="token comment">// IPv6</span>
    
<span class="token function">inet_pton</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> <span class="token string">&quot;10.12.110.57&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// IPv4</span>
<span class="token function">inet_pton</span><span class="token punctuation">(</span>AF_INET6<span class="token punctuation">,</span> <span class="token string">&quot;2001:db8:63b3:1::3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>sa6<span class="token punctuation">.</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// IPv6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5C0F\u8BB0\uFF1A\u539F\u672C\u7684\u8001\u65B9\u6CD5\u662F\u4F7F\u7528\u540D\u4E3A<code>inet_addr()</code>\u6216\u662F <code>inet_aton() </code>\u7684\u51FD\u6570\uFF1B\u8FD9\u4E9B\u51FD\u6570\u5DF2\u7ECF\u8FC7\u65F6\u4E86\uFF0C\u800C\u4E14\u4E0D\u9002\u7528\u4E8E IPv6</p></blockquote><p>\u4E0A\u9762\u7684\u7A0B\u5E8F\u5199\u7684\u6BD4\u8F83\u7B80\u5355\uFF0C\u800C\u4E14\u4E0D\u591F\u5065\u58EE\uFF0C\u56E0\u4E3A\u6CA1\u6709\u8FDB\u884C\u9519\u8BEF\u68C0\u67E5\u3002<code>inet_pton() </code>\u5728\u53D1\u751F\u9519\u8BEF\u65F6\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u800C\u82E5\u5730\u5740\u65E0\u6548\u5219\u8FD4\u56DE<code>0</code>\u3002\u6240\u4EE5\u5728\u4F7F\u7528\u4E4B\u524D\u8981\u68C0\u67E5\u8FD4\u56DE\u503C\uFF0C\u5E76\u4FDD\u8BC1\u8FD4\u56DE\u7ED3\u679C\u662F\u5927\u4E8E 0 \u7684\u3002</p><p>\u73B0\u5728\u6211\u4EEC\u53EF\u4EE5\u5C06\u5B57\u7B26\u4E32\u683C\u5F0F\u7684IP\u5730\u5740\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u5F62\u5F0F\u4E86\u3002\u90A3\u4E48\u53CD\u8FC7\u6765\u9700\u8981\u600E\u4E48\u505A\uFF1F</p><h4 id="_4-4-2-\u4E8C\u8FDB\u5236\u8F6Cip" tabindex="-1"><a class="header-anchor" href="#_4-4-2-\u4E8C\u8FDB\u5236\u8F6Cip" aria-hidden="true">#</a> 4.4.2. \u4E8C\u8FDB\u5236\u8F6CIP</h4><p>\u5982\u679C\u6211\u4EEC\u5DF2\u7ECF\u6709\u4E86<code>struct in_addr</code>\uFF0C\u600E\u4E48\u5C06\u70B9\u5206\u5341\u8FDB\u5236\u7684IP\u6253\u5370\u51FA\u6765\uFF1F\uFF08\u6216\u8005\u6211\u4EEC\u6709<code>struct in6_addr</code>\uFF0C\u600E\u4E48\u6253\u5370\u5B57\u7B26\u4E32\u7C7B\u578B\u7684IPv6\u5730\u5740\u5462\uFF1F\uFF09</p><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>inet_ntop()</code>\u51FD\u6570\uFF0C\u770B\u4EE3\u7801\uFF1A</p><blockquote><p>\u201C<code>ntop</code>\u201D\u7684\u5168\u79F0\u662F\u201Cnetwork to presentation\u201D\uFF0C\u4E5F\u53EF\u4EE5\u662F\u201Cnetwork to printable\u201D\uFF0C\u9009\u4E00\u4E2A\u80FD\u5E2E\u52A9\u4F60\u8BB0\u5FC6\u7684\u5C31\u884C\u3002</p></blockquote><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// IPv4:</span>
<span class="token keyword">char</span> ip4<span class="token punctuation">[</span>INET_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// space to hold the IPv4 string</span>
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> sa<span class="token punctuation">;</span>      <span class="token comment">// \u5047\u8BBEsa\u4E2D\u4FDD\u5B58\u4E86ip\u4FE1\u606F</span>
<span class="token function">inet_ntop</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">,</span> ip4<span class="token punctuation">,</span> INET_ADDRSTRLEN<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;The IPv4 address is: %s\\n&quot;</span><span class="token punctuation">,</span> ip4<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// IPv6:</span>
<span class="token keyword">char</span> ip6<span class="token punctuation">[</span>INET6_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// space to hold the IPv6 string</span>
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> sa6<span class="token punctuation">;</span>    <span class="token comment">// \u5047\u8BBEsa6\u79CD\u4FDD\u5B58\u4E86ip\u4FE1\u606F</span>
<span class="token function">inet_ntop</span><span class="token punctuation">(</span>AF_INET6<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>sa6<span class="token punctuation">.</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">,</span> ip6<span class="token punctuation">,</span> INET6_ADDRSTRLEN<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;The address is: %s\\n&quot;</span><span class="token punctuation">,</span> ip6<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u8C03\u7528<code>inet_ntop()</code>\uFF0C\u4F60\u9700\u8981\u4F20\u9012IP\u5730\u5740\u7C7B\u578B\uFF08IPv4 \u6216\u8005 IPv6\uFF09\uFF0C\u4E00\u4E2A\u6307\u5411\u4FDD\u5B58\u5B57\u7B26\u4E32\u7ED3\u679C\u7684\u6307\u9488\u4EE5\u53CA\u8BE5\u5B57\u7B26\u4E32\u7684\u6700\u5927\u957F\u5EA6\u3002\u6709\u4E24\u4E2A\u5B8F\uFF08\u53EF\u4EE5\u7406\u89E3\u4E3A\u5E38\u91CF\uFF09\u53EF\u4EE5\u5F88\u65B9\u4FBF\u5730\u5E2E\u52A9\u6211\u4EEC\u8868\u793A\u8981\u5B58\u50A8\u7684IPv4\u6216\u8005IPv6\u5730\u5740\u5B57\u7B26\u4E32\u7684\u6700\u5927\u957F\u5EA6\uFF0C\u5206\u522B\u662F<code>INET_ADDRSTRLEN</code> \u548C <code>INET6_ADDRSTRLEN</code>\u3002</p><blockquote><p>\u5C0F\u8BB0\uFF1A\u539F\u672C\u7684\u8001\u65B9\u6CD5\u662F\u4F7F\u7528\u540D\u4E3A<code>inet_ntoa()</code>\u7684\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5DF2\u7ECF\u8FC7\u65F6\u4E86\uFF0C\u800C\u4E14\u4E0D\u9002\u7528\u4E8E IPv6</p></blockquote>`,43),_n=s("\u6700\u540E\uFF0C\u672C\u6587\u8BB2\u5230\u7684\u51FD\u6570\u53EA\u80FD\u7528\u4E8E\u6570\u503C\u578B\u7684IP\u5730\u5740\u4E0A\uFF0C\u5B83\u4EEC\u4E0D\u4F1A\u7528DNS\u505A\u57DF\u540D\u89E3\u6790\uFF0C\u6240\u4EE5\u4F60\u4F20\u5165\u201C"),fn={href:"http://www.chanmufeng.com",target:"_blank",rel:"noopener noreferrer"},gn=s("www.chanmufeng.com"),yn=s("\u201D\u8FD9\u6837\u7684\u57DF\u540D\u662F\u6CA1\u6709\u7528\u7684\u3002"),wn=t('<p>\u5173\u4E8E\u57DF\u540D\u67E5\u8BE2\uFF0C\u6211\u4EEC\u5C06\u4F1A\u4F7F\u7528<code>getaddrinfo()</code>\u51FD\u6570\uFF0C\u4E4B\u524D\u7684\u6587\u7AE0\u63D0\u8FC7\u4E00\u5634\uFF0C\u540E\u6587\u5C06\u4F1A\u8BE6\u7EC6\u8BB2\u8FF0\uFF0C\u656C\u8BF7\u671F\u5F85\u3002</p><h2 id="_5-\u4ECEipv4\u8FC1\u79FB\u5230ipv6" tabindex="-1"><a class="header-anchor" href="#_5-\u4ECEipv4\u8FC1\u79FB\u5230ipv6" aria-hidden="true">#</a> 5. \u4ECEIPv4\u8FC1\u79FB\u5230IPv6</h2><p>\u672A\u6765\u4E00\u5B9A\u5C5E\u4E8EIPv6\uFF0C\u4F46\u53EF\u80FD\u8FD8\u4E0D\u662F\u73B0\u5728\u3002</p><p>\u867D\u7136\u5634\u4E0A\u56B7\u56B7\u7740IPv4\u4E0D\u591F\u7528\u4E86\uFF0C\u4F46\u662F\u4E0D\u7BA1\u56FD\u5185\u8FD8\u662F\u56FD\u5916\uFF0CIPv6\u59CB\u7EC8\u6CA1\u6709\u9884\u60F3\u4E2D\u7684\u90A3\u4E48\u666E\u53CA\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-10-08-101452.png" alt="image-20221008181452021" loading="lazy"></p><p>\u56FE\u4E2D\u989C\u8272\u8D8A\u6DF1\u7684\u5730\u533A\uFF0C\u8868\u793A\u5176 IPv6 \u90E8\u7F72\u7A0B\u5EA6\u8D8A\u9AD8\uFF0C\u76F8\u5E94\u7684 IPv6 \u90E8\u7F72\u7387\u6570\u503C\u8D8A\u5927\u3002\u6240\u8C13\u7684\u90E8\u7F72\u7387\u662F\u6839\u636E\u5404\u4E2A\u56FD\u5BB6\u5730\u533A\u7684\u7F51\u7EDC\uFF08IPv6 Prefix/Transit IPv6 AS\uFF09\uFF0CIPv6 \u7F51\u7AD9\u53CA IPv6 \u7528\u6237\u7B49\u6570\u636E\u6309\u7167\u4E00\u5B9A\u6743\u503C\u5E76\u8BA1\u7B97\u5F97\u51FA\u7684\u3002</p><p>\u770B\u8D77\u6765\u5168\u7403\u5927\u90E8\u5206\u5730\u533A\u90FD\u662F\u7EFF\u7684\uFF0C\u4F46\u662F\u5C31\u5168\u7403\u7684IPv6\u8986\u76D6\u7387\u800C\u8A00\uFF0C\u8FD8\u8FBE\u4E0D\u523040%\u3002</p><p>\u4F46\u662F\u603B\u5F52\u9700\u8981\u5BF9\u672A\u6765\u505A\u51FA\u4E00\u70B9\u51C6\u5907\u561B\uFF0C\u6240\u4EE5\u672C\u6587\u752812\u4E2A\u6B65\u9AA4\u6559\u4F60\u5982\u4F55\u5728socket\u7F16\u7A0B\u4E2D\u4ECEIPv4\u8FC1\u79FB\u5230IPv6\u3002</p>',8),In=s("\u9996\u5148\uFF0C\u5C1D\u8BD5\u4F7F\u7528"),Pn={href:"https://www.chanmufeng.com/posts/network-programming/6%E7%A7%8Dsocket%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html#struct%E2%80%94addrinfo",target:"_blank",rel:"noopener noreferrer"},xn=n("code",null,"getaddrinfo()",-1),Sn=s("\u6765\u83B7\u53D6"),qn=n("code",null,"struct sockaddr",-1),An=s("\u7684\u4FE1\u606F\uFF0C\u4E0D\u8981\u518D\u624B\u52A8\u586B\u5145\u8FD9\u4E2A\u6570\u636E\u7ED3\u6784\u4E86\u3002\u8FD9\u6837\u5C31\u53EF\u4EE5\u5C4F\u853DIP\u7684\u7248\u672C\u5F71\u54CD\uFF0C\u7701\u53BB\u540E\u7EED\u5F88\u591A\u9EBB\u70E6\uFF1B"),En=t(`<li><p>\u627E\u51FA\u6240\u6709\u5BF9IP\u7248\u672C\u786C\u7F16\u7801\u7684\u4EE3\u7801\uFF0C\u8BD5\u7740\u628A\u5B83\u4EEC\u5C01\u88C5\u8D77\u6765\uFF1B</p></li><li><p>\u5C06<code>AF_INET</code> \u4FEE\u6539\u4E3A <code>AF_INET6</code>\uFF1B</p></li><li><p>\u5C06 <code>PF_INET</code> \u4FEE\u6539\u4E3A <code>PF_INET6</code>\uFF1B</p></li><li><p>\u5C06 <code>INADDR_ANY</code> \u4FEE\u6539\u4E3A <code>in6addr_any</code> \uFF0C\u7ED9\u4F60\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> sa<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> sa6<span class="token punctuation">;</span>

sa<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> INADDR_ANY<span class="token punctuation">;</span>  <span class="token comment">// \u4F7F\u7528IPv4</span>
sa6<span class="token punctuation">.</span>sin6_addr <span class="token operator">=</span> in6addr_any<span class="token punctuation">;</span> <span class="token comment">// \u4F7F\u7528IPv6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,4),Tn=s("\u4F7F\u7528 "),Nn=n("code",null,"struct sockaddr_in6",-1),Cn=s("\u4EE3\u66FF "),Dn=n("code",null,"struct sockaddr_in",-1),Rn=s(" \uFF0C\u5343\u4E07\u8981\u6CE8\u610F\uFF0C\u201C6\u201D\u53EF\u4E0D\u8981\u4E71\u52A0\u54E6\uFF0C\u5982\u679C\u4F60\u5FD8\u8BB0\u90A3\u4E9B\u5B57\u6BB5\u6709\u201C6\u201D\u4E86\uFF0C\u53C2\u8003\u4E4B\u524D\u8BB2\u8FC7\u7684"),Ln={href:"https://www.chanmufeng.com/posts/network-programming/6%E7%A7%8Dsocket%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",target:"_blank",rel:"noopener noreferrer"},On=n("code",null,"struct",-1),Un=s("\u3002\u6BD4\u5982\uFF0C\u538B\u6839\u513F\u4E0D\u5B58\u5728"),Fn=n("code",null,"sin6_zero",-1),zn=s("\u8FD9\u4E2A\u5B57\u6BB5\uFF1B"),Mn=t("<li><p>\u4F7F\u7528<code>struct in6_addr</code> \u4EE3\u66FF<code>struct in_addr</code> \uFF0C\u5173\u4E8E\u201C6\u201D\u7684\u7EC6\u8282\uFF0C\u53C2\u8003\u7B2C6\u6761\uFF1B</p></li><li><p>\u4F7F\u7528<code>inet_pton()</code>\u4EE3\u66FF<code>inet_aton()</code> \u4EE5\u53CA <code>inet_addr()</code>\uFF1B</p></li><li><p>\u4F7F\u7528<code>inet_ntop()</code>\uFF0C\u4E0D\u8981\u4F7F\u7528<code>inet_ntoa()</code>\uFF1B</p></li><li><p>\u4F7F\u7528\u66F4\u9AD8\u7EA7\u7684<code>getaddrinfo()</code>\u4EE3\u66FF<code>gethostbyname()</code>\u4E86\uFF1B</p></li><li><p>\u7528\u66F4\u9AD8\u7EA7\u7684<code>getnameinfo()</code>\u4EE3\u66FF<code>gethostbyaddr()</code>\uFF08\u867D\u7136<code>gethostbyaddr</code>\u5728IPv6\u4E2D\u4E5F\u80FD\u6B63\u5E38\u4F7F\u7528\uFF09\uFF1B</p></li><li><p>\u4E0D\u8981\u7528 <code>INADDR_BROADCAST </code>\u4E86\uFF0C\u8BF7\u4F7F\u7528 <code>IPv6 multicast</code> \u4F86\u4EE3\u66FF\u3002</p></li>",6),Bn=t(`<p>\u4EE5\u4E0A\uFF01</p><h2 id="_6-socket\u7F16\u7A0B\u76F8\u5173\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_6-socket\u7F16\u7A0B\u76F8\u5173\u51FD\u6570" aria-hidden="true">#</a> 6. socket\u7F16\u7A0B\u76F8\u5173\u51FD\u6570</h2><p>\u8FD9\u4E00\u7AE0\uFF0C\u6211\u4EEC\u5C06\u8D70\u8FDB<strong>\u7CFB\u7EDF\u8C03\u7528</strong>\uFF08System Call\uFF09\uFF0C\u8FD9\u4E9B\u7CFB\u7EDF\u8C03\u7528\u5141\u8BB8\u6211\u4EEC\u8BBF\u95EELinux\u8BBE\u5907\u6216\u5176\u4ED6\u4EFB\u4F55\u652F\u6301Socket API\u8BBE\u5907\uFF08\u6BD4\u5982BSD\u3001Windows\u3001Linux\u3001Mac\u7B49\uFF09\u7684\u7F51\u7EDC\u529F\u80FD\u3002\u5F53\u4F60\u8C03\u7528\u67D0\u4E2A\u7CFB\u7EDF\u8C03\u7528\u65F6\uFF0C\u5185\u6838\u5C06\u63A5\u7BA1\u4E00\u5207\uFF0C\u81EA\u52A8\u4E3A\u4F60\u5904\u7406\u63A5\u4E0B\u6765\u7684\u4E00\u5207\u4EFB\u52A1\u3002</p><p>\u591A\u6570\u4EBA\u89C9\u5F97\u7F51\u7EDC\u7F16\u7A0B\u5F88\u96BE\u662F\u56E0\u4E3A\u4E0D\u77E5\u9053\u4EC0\u4E48\u65F6\u5019\u8BE5\u8C03\u7528\u4EC0\u4E48\u51FD\u6570\uFF0C\u8FD9\u4E2A\u95EE\u9898\u5728<strong>man</strong>\u624B\u518C\u91CC\u662F\u627E\u4E0D\u5230\u89E3\u51B3\u65B9\u6848\u7684\u3002\u4E3A\u4E86\u5E26\u5927\u5BB6\u8D70\u51FA\u56F0\u5883\uFF0C\u63A5\u4E0B\u6765\u6211\u5C31\u6309\u7167\u4E00\u822C\u7684\u8C03\u7528\u987A\u5E8F\u6765\u7ED9\u5927\u5BB6\u8BB2\u89E3\u6BCF\u4E00\u4E2A\u7CFB\u7EDF\u8C03\u7528\uFF0C\u4F60\u5728\u5199\u7A0B\u5E8F\u7684\u65F6\u5019\u5C31\u6309\u7167\u8FD9\u4E2A\u987A\u5E8F\u8C03\u7528\u5C31\u884C\u4E86\u3002</p><p>\u8981\u60F3\u770B\u61C2\u63A5\u4E0B\u6765\u6563\u843D\u5404\u5904\u7684\u4EE3\u7801\u7247\u6BB5\uFF0C\u4F60\u9700\u8981\u5907\u70B9\u725B\u5976\u548C\u997C\u5E72\u4E86\uFF0C\u8FD8\u591A\u5C11\u9700\u8981\u5907\u70B9\u51B3\u5FC3\u548C\u52C7\u6C14\uFF0C\u7136\u540E\u4F60\u5C31\u80FD\u5C06socket\u7F16\u7A0B\u73A9\u513F\u5F97\u98CE\u751F\u6C34\u8D77\u4E86\uFF0C\u4E0D\u77E5\u9053\u7684\u8FD8\u4EE5\u4E3A\u4F60\u5F97\u4E86Jon Postel\u771F\u4F20\u5462\uFF01</p><blockquote><p>Jon Postel\u662F\u4E92\u8054\u7F51\u7684\u5DE8\u64D8\uFF0C\u4ED6\u7684\u53D1\u660E\u4F5C\u54C1\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E<code>SMTP\u534F\u8BAE</code>\u3001<code>FTP\u534F\u8BAE</code>\u3001<code>UDP\u534F\u8BAE</code>\u3002</p></blockquote><p>\u9700\u8981\u8BF4\u660E\u7684\u662F\uFF0C\u4E3A\u4E86\u7B80\u6D01\uFF0C\u5F88\u591A\u4EE3\u7801\u7247\u6BB5\u5E76\u6CA1\u6709\u5305\u542B\u5FC5\u8981\u7684\u9519\u8BEF\u68C0\u67E5\u3002\u6BD4\u5982\u6587\u7AE0\u4F1A\u59CB\u7EC8\u5047\u8BBE<code>getaddrinfo()</code> \u4F1A\u8C03\u7528\u6210\u529F\u3002\u5728\u7F16\u5199\u751F\u4EA7\u73AF\u5883\u4EE3\u7801\u65F6\u5C24\u5176\u9700\u8981\u6CE8\u610F\u8FD9\u4E00\u70B9\u3002</p><h3 id="_6-1-getaddrinfo-\u2014\u51C6\u5907\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#_6-1-getaddrinfo-\u2014\u51C6\u5907\u5F00\u59CB" aria-hidden="true">#</a> 6.1. getaddrinfo()\u2014\u51C6\u5907\u5F00\u59CB\uFF01</h3><p>\u8FD9\u662Fsocket\u7F16\u7A0B\u4E2D\u975E\u5E38\u91CD\u8981\u7684\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B83\u6709\u975E\u5E38\u591A\u7684\u53C2\u6570\uFF0C\u4F46\u662F\u522B\u5BB3\u6015\uFF0C\u7528\u8D77\u6765\u5176\u5B9E\u975E\u5E38\u7B80\u5355\u3002\u8FD9\u4E2A\u51FD\u6570\u7684\u4F5C\u7528\u662F\u5E2E\u4F60\u8BBE\u7F6E\u4E4B\u540E\u9700\u8981\u7684struct\u3002</p><p>\u7A0D\u5FAE\u63D0\u4E00\u5634\u5B83\u7684\u5386\u53F2\uFF1A\u5B83\u7684\u524D\u8EAB\u662F\u7528\u6765\u505ADNS\u67E5\u8BE2\u7684<code>gethostbyname()</code>\uFF0C\u5F53\u65F6\u8FD8\u9700\u8981\u4F60\u624B\u52A8\u628A\u6570\u636E\u8BBE\u7F6E\u5230<code>struct sockaddr_in</code>\u4E2D\u5462\u3002\u8C22\u5929\u8C22\u5730\uFF0C\u73B0\u5728\u4E0D\u7528\u4E86\u3002</p><p>\u4F7F\u7528<code>getaddrinfo()</code>\u53EF\u4EE5\u5E2E\u52A9\u4F60\u5199\u51FA\u517C\u5BB9IPv4\u548CIPv6\u7684\u4EE3\u7801\uFF0C\u751A\u81F3\u5728\u5E2E\u4F60\u8FDB\u884CDNS\u67E5\u8BE2\u548Cservice name\u67E5\u8BE2\u4E4B\u540E\uFF0C\u8FD8\u4F1A\u81EA\u52A8\u5C06\u4F60\u9700\u8981\u7684\u4FE1\u606F\u586B\u5145\u5230<code>struct</code>\u4E2D\uFF0C\u54B1\u5C31\u8BF4\u591A\u725B\uFF01</p><p>\u770B\u4E00\u773C\u957F\u5565\u6837\u5148\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>node<span class="token punctuation">,</span>     <span class="token comment">// e.g. &quot;www.example.com&quot; or IP</span>
                <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>service<span class="token punctuation">,</span>  <span class="token comment">// e.g. &quot;http&quot; or port number</span>
                <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>hints<span class="token punctuation">,</span>
                <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span><span class="token operator">*</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u4F20\u7ED9\u5B833\u4E2A\u53C2\u6570\uFF08\u5176\u5B9E\u662F4\u4E2A\uFF0C\u4F46\u662F\u7B2C4\u4E2A\u53EA\u662F\u4E2A\u58F0\u660E\u7684\u53D8\u91CF\u800C\u5DF2\uFF09\uFF0C\u5B83\u7ED9\u4F60\u8FD4\u56DE\u4E00\u4E2A\u6307\u5411\u94FE\u8868\u7684\u6307\u9488<code>res</code>\u3002</p><p>\u5176\u4E2D\uFF0C<code>node</code>\u53C2\u6570\u662F\u4F60\u60F3\u8FDB\u884C\u8FDE\u63A5\u7684\u670D\u52A1\u5668\u7684\u57DF\u540D\uFF0C\u6216\u8005IP\u5730\u5740\u3002</p><p><code>service</code>\u53C2\u6570\u53EF\u4EE5\u662F\u4E2A\u7AEF\u53E3\u53F7\uFF0C\u6BD4\u5982\u201C<code>80</code>\u201D\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u7279\u5B9A\u670D\u52A1\u7684\u540D\u79F0\uFF0C\u6BD4\u5982\u201C<code>http</code>\u201D\u3001\u201C<code>ftp</code>\u201D\u3001\u201C<code>telnet</code>\u201D\u3001\u201C<code>smtp</code>\u201D \u7B49\u3002</p><p>\u6700\u540E\uFF0C<code>hints</code>\u53C2\u6570\u6307\u5411\u4E86\u4E00\u4E2A\u9700\u8981\u4F60\u8BBE\u7F6E\u76F8\u5173\u53C2\u6570\u7684<code>struct addrinfo</code>\u3002</p>`,17),Kn=s("\u5E38\u7528\u7AEF\u53E3\u53F7\u4EE5\u53CA\u670D\u52A1\u540D\u53EF\u4EE5\u53C2\u89C1 "),Xn={href:"https://www.iana.org/assignments/port-numbers",target:"_blank",rel:"noopener noreferrer"},jn=s("The IANA Port List"),Gn=s("\u6216\u8005Unix\u8BBE\u5907\u4E0A\u7684"),Hn=n("code",null,"/etc/services",-1),Vn=s("\u6587\u4EF6"),Wn=t(`<p>\u63A5\u4E0B\u6765\u7ED9\u4E00\u4E2A\u670D\u52A1\u7AEF\u7A0B\u5E8F\u76D1\u542C\u672C\u673AIP\u5730\u5740\u548C<code>3490</code>\u7AEF\u53E3\u7684\u4F8B\u5B50\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u4EE3\u7801\u793A\u4F8B\u4E2D\u5E76\u6CA1\u6709\u505A\u76D1\u542C\uFF08listen\uFF09\u548C\u4EFB\u4F55\u7F51\u7EDC\u8BBE\u7F6E\u7684\u5DE5\u4F5C\uFF0C\u53EA\u662F\u7B80\u5355\u8BBE\u7F6E\u4E86\u4E4B\u540E\u4F1A\u7528\u5230\u6570\u636E\u7ED3\u6784\u800C\u5DF2\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> status<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>servinfo<span class="token punctuation">;</span>  <span class="token comment">// will point to the results</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// make sure the struct is empty</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>     <span class="token comment">// don&#39;t care IPv4 or IPv6</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span> <span class="token comment">// TCP stream sockets</span>
hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>     <span class="token comment">// fill in my IP for me</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>status <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo error: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// servinfo \u73B0\u5728\u6307\u5411\u4E86\u5305\u542B1\u4E2A\u6216\u591A\u4E2Aaddrinfo\u7ED3\u6784\u7684\u94FE\u8868</span>

<span class="token comment">// ... do everything until you don&#39;t need servinfo anymore ....</span>

<span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// free the linked-list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u6211\u5C06<code>ai_family</code>\u8BBE\u7F6E\u6210\u4E86<code>AF_UNSPEC</code>\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u6211\u538B\u6839\u4E0D\u5728\u610F\u6211\u4EEC\u7528IPv4\u8FD8\u662FIPv6\u3002\u5982\u679C\u4F60\u60F3\u7CBE\u786E\u6307\u5B9AIPv4\u6216\u8005IPv6\u7684\u8BDD\u8BF7\u4F7F\u7528<code>AF_INET</code>\u6216<code>AF_INET6</code>\u3002</p><p>\u4F60\u53EF\u80FD\u6CE8\u610F\u5230\u4E86\uFF0C\u6211\u628A<code>ai_flags</code>\u8BBE\u7F6E\u4E3A\u4E86<code>AI_PASSIVE</code>\uFF0C\u610F\u601D\u662F\u544A\u8BC9<code>getaddrinfo()</code>\u51FD\u6570\u628A\u6211\u672C\u673A\u7684IP\u8BBE\u7F6E\u5230<code>servinfo</code>\u4E2D\uFF0C\u8FD9\u6837\u6211\u5C31\u4E0D\u7528\u5C06<code>getaddrinfo()</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF08\u5982\u679C\u5FD8\u4E86\u662F\u5565\u610F\u601D\uFF0C\u770B\u770B\u4E0A\u6587\uFF09\u786C\u7F16\u7801\u4E86\uFF0C\u76F4\u63A5\u8BBE\u7F6E\u6210<code>NULL</code>\u5C31\u884C\u4E86\u3002</p><p>\u7136\u540E\u6211\u4EEC\u5C31\u8C03\u7528<code>getaddrinfo()</code>\u4E86\u3002\u5982\u679C\u51FD\u6570\u62A5\u9519\uFF08\u8FD4\u56DE\u503C\u4E0D\u4E3A0\uFF09\uFF0C\u6211\u4EEC\u4F1A\u4F7F\u7528<code>gai_strerror() </code>\u51FD\u6570\u5C06\u9519\u8BEF\u6253\u5370\u51FA\u6765\u3002\u5982\u679C\u7A0B\u5E8F\u6B63\u5E38\u8FD0\u884C\uFF0C\u90A3\u4E48<code>servinfo</code>\u6700\u7EC8\u5C31\u4F1A\u6307\u5411\u4E00\u4E2A\u7531<code>struct addrinfo</code>\u94FE\u63A5\u5F62\u6210\u7684\u94FE\u8868\uFF0C\u94FE\u8868\u4E2D\u6BCF\u4E00\u4E2A\u5143\u7D20\u90FD\u4F1A\u5305\u542B\u4E00\u4E2A\u6211\u4EEC\u4E4B\u540E\u4F1A\u7528\u5230\u7684<code>struct sockaddr</code>\u3002</p><p>\u6700\u540E\uFF0C<code>getaddrinfo()</code>\u4F1A\u5728\u5806\u5185\u5B58\u4E2D\u521B\u5EFA<code>servinfo</code>\u6307\u5411\u7684\u94FE\u8868\uFF0C\u4F7F\u7528\u5B8C\u4E4B\u540E\u4E00\u5B9A\u8981\u4F7F\u7528<code>freeaddrinfo()</code>\u8FDB\u884C\u5185\u5B58\u91CA\u653E\u3002</p>`,6),Yn=s("\u518D\u7ED9\u4E00\u4E2A\u5BA2\u6237\u7AEF\u4EE3\u7801\u7684\u4F8B\u5B50\uFF0C\u6211\u4EEC\u5047\u8BBE\u5BA2\u6237\u7AEF\u60F3\u8FDE\u63A5\u5230\u57DF\u540D\u4E3A\u201C"),Qn={href:"http://www.chanmufeng.com",target:"_blank",rel:"noopener noreferrer"},$n=s("www.chanmufeng.com"),Zn=s("\u201D\uFF0C\u7AEF\u53E3\u4E3A"),Jn=n("code",null,"3490",-1),ns=s("\u7684\u670D\u52A1\u5668\u3002\u518D\u6B21\u5F3A\u8C03\uFF0C\u4EE3\u7801\u7247\u6BB5\u4E2D\u7701\u7565\u4E86\u5B9E\u9645\u8FDB\u884C\u94FE\u63A5\u7684\u90E8\u5206\uFF0C\u53EA\u662F\u7B80\u5355\u8BBE\u7F6E\u4E86\u4E4B\u540E\u4F1A\u7528\u5230\u6570\u636E\u7ED3\u6784\u800C\u5DF2\u3002"),ss=t(`<div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> status<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>servinfo<span class="token punctuation">;</span>  <span class="token comment">// will point to the results</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// make sure the struct is empty</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>     <span class="token comment">// don&#39;t care IPv4 or IPv6</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span> <span class="token comment">// TCP stream sockets</span>

<span class="token comment">// get ready to connect</span>
status <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token string">&quot;www.chanmufeng.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// servinfo now points to a linked list of 1 or more struct addrinfos</span>

<span class="token comment">// etc.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u6BD4server\u7AEF\u7684\u4EE3\u7801\u8FD8\u7B80\u5355\uFF0C\u5C31\u4E0D\u8FC7\u591A\u89E3\u91CA\u4E86\u3002</p><p>\u63A5\u7740\u6211\u4EEC\u7EFC\u5408\u4F7F\u7528\u4E00\u4E0B\u6211\u4EEC\u5B66\u8FC7\u7684\u77E5\u8BC6\uFF0C\u5199\u4E00\u6BB5\u7A0D\u5FAE\u957F\u4E00\u4E22\u4E22\u7684demo\uFF0C\u8FD9\u4E2Ademo\u7684\u4F5C\u7528\u662F\u6253\u5370\u4F60\u5728\u547D\u4EE4\u884C\u4E0A\u6307\u5B9A\u7684\u4EFB\u4F55\u4E3B\u673A\u7684IP\u5730\u5740\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** showip.c -- show IP addresses for a host given on the command line
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
    <span class="token keyword">int</span> status<span class="token punctuation">;</span>
    <span class="token keyword">char</span> ipstr<span class="token punctuation">[</span>INET6_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span><span class="token string">&quot;usage: showip hostname\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span> <span class="token comment">// AF_INET or AF_INET6 to force version</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>status <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;IP addresses for %s:\\n\\n&quot;</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> res<span class="token punctuation">;</span>p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token operator">*</span>addr<span class="token punctuation">;</span>
        <span class="token keyword">char</span> <span class="token operator">*</span>ipver<span class="token punctuation">;</span>

        <span class="token comment">// get the pointer to the address itself,</span>
        <span class="token comment">// different fields in IPv4 and IPv6:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// IPv4</span>
            <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span>ipv4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> <span class="token operator">*</span><span class="token punctuation">)</span>p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">;</span>
            addr <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>ipv4<span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ipver <span class="token operator">=</span> <span class="token string">&quot;IPv4&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// IPv6</span>
            <span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token operator">*</span>ipv6 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span> <span class="token operator">*</span><span class="token punctuation">)</span>p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">;</span>
            addr <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>ipv6<span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ipver <span class="token operator">=</span> <span class="token string">&quot;IPv6&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// convert the IP to a string and print it:</span>
        <span class="token function">inet_ntop</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> addr<span class="token punctuation">,</span> ipstr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> ipstr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;  %s: %s\\n&quot;</span><span class="token punctuation">,</span> ipver<span class="token punctuation">,</span> ipstr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// free the linked list</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7A0B\u5E8F\u4F7F\u7528\u4F60\u5728\u547D\u4EE4\u884C\u4E2D\u8F93\u5165\u7684\u53C2\u6570\u6765\u8C03\u7528<code>getaddrinfo()</code>\uFF0C\u7136\u540E\u6211\u4EEC\u5C31\u5F97\u5230\u4E86<code>res</code>\u6307\u5411\u7684\u94FE\u8868\uFF0C\u904D\u5386\u94FE\u8868\u6BCF\u4E2A\u8282\u70B9\u6211\u4EEC\u5C31\u80FD\u5F97\u5230\u5168\u90E8\u7684IP\u4FE1\u606F\u3002</p><p>\u8FD0\u884C\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ showip www.example.net
IP addresses <span class="token keyword">for</span> www.example.net:

	IPv4: <span class="token number">192.0</span>.2.88

$ showip ipv6.example.com
IP addresses <span class="token keyword">for</span> ipv6.example.com:

	IPv4: <span class="token number">192.0</span>.2.101
	IPv6: <span class="token number">2001</span>:db8:8c00:22::171
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u4E00\u5207\u5C3D\u5728\u6211\u4EEC\u638C\u63E1\u4E4B\u4E2D\u4E86\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06<code>getaddrinfo()</code>\u81EA\u52A8\u4E3A\u6211\u4EEC\u586B\u5145\u597D\u7684\u6570\u636E\u4F20\u9012\u7ED9\u5176\u4ED6\u7684socket\u51FD\u6570\uFF0C\u8FD9\u5C31\u662F\u628A<code>getaddrinfo()</code>\u51FD\u6570\u653E\u5728\u7B2C\u4E00\u4F4D\u8FDB\u884C\u4ECB\u7ECD\u7684\u539F\u56E0\u4E86\u3002</p><p>\u66F4\u591Asocket\u7CFB\u7EDF\u8C03\u7528\uFF0C\u8BF7\u671F\u5F85\u4E0B\u7BC7\u3002</p><h3 id="_6-2-socket-\u2014\u62FF\u5230\u5957\u63A5\u5B57\u63CF\u8FF0\u7B26" tabindex="-1"><a class="header-anchor" href="#_6-2-socket-\u2014\u62FF\u5230\u5957\u63A5\u5B57\u63CF\u8FF0\u7B26" aria-hidden="true">#</a> 6.2. socket()\u2014\u62FF\u5230\u5957\u63A5\u5B57\u63CF\u8FF0\u7B26\uFF01</h3><p>\u73B0\u5728\u6765\u8BE6\u7EC6\u4ECB\u7ECD\u4E00\u4E0B<code>socket()</code>\u8FD9\u4E2A\u7CFB\u7EDF\u8C03\u7528\u3002</p><p>\u5148\u770B\u4E00\u4E9B\u7528\u6CD5\u548C\u53C2\u6570\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token keyword">int</span> domain<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> protocol<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u662F\u8FD9\u4E2A\u51FD\u6570\u7684\u53C2\u6570\u662F\u5E72\u4EC0\u4E48\u7684\u5462\uFF1F\u521A\u5F00\u59CB\u7528\u8FD9\u4E2A\u51FD\u6570\u53EF\u80FD\u4F1A\u4E00\u8138\u61F5\uFF0C\u522B\u6015\uFF0C\u6211\u6162\u6162\u4ECB\u7ECD\u3002</p><p>\u51FD\u6570\u53C2\u6570\u662F\u7528\u6765\u6307\u5B9A\u4F60\u60F3\u8981\u7684socket\u7C7B\u578B\uFF08IPv4\u8FD8\u662FIPv6\uFF0C\u6570\u636E\u6D41\uFF08stream\uFF09\u8FD8\u662F\u6570\u636E\u62A5\uFF08datagram\uFF09\uFF0C<code>TCP</code>\u8FD8\u662F<code>UDP</code>\uFF09\u3002</p><p><code>domain</code>\u53C2\u6570\u6307\u7684\u662F\u534F\u8BAE\u65CF\uFF0C\u4F60\u53EF\u4EE5\u8BBE\u7F6E\u4E3A<code>PF_INET</code>\u6216\u8005<code>PF_INET6</code>\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E0B\u8868\uFF08\u53EA\u5217\u4E3E\u4E86\u4E00\u90E8\u5206\uFF09\u4E2D\u7684\u67D0\u4E2A\u5E38\u503C\u3002</p><table><thead><tr><th style="text-align:center;">family</th><th style="text-align:center;">\u8BF4\u660E</th></tr></thead><tbody><tr><td style="text-align:center;">AF_INET</td><td style="text-align:center;">IPv4\u534F\u8BAE</td></tr><tr><td style="text-align:center;">AF_INET6</td><td style="text-align:center;">IPv6\u534F\u8BAE</td></tr><tr><td style="text-align:center;">AF_LOCAL</td><td style="text-align:center;">Unix\u57DF\u534F\u8BAE</td></tr><tr><td style="text-align:center;">AF_ROUTE</td><td style="text-align:center;">\u8DEF\u7531\u5957\u63A5\u5B57</td></tr><tr><td style="text-align:center;">AF_KEY</td><td style="text-align:center;">\u5BC6\u94A5\u5957\u63A5\u5B57</td></tr></tbody></table><p><code>type</code>\u8868\u793Asocket\u7684\u7C7B\u578B\uFF0C\u53EF\u4EE5\u662F\u4E0B\u8868\u4E2D\u7684\u67D0\u4E2A\u5E38\u503C\u3002</p><table><thead><tr><th style="text-align:center;">type</th><th style="text-align:center;">\u8BF4\u660E</th></tr></thead><tbody><tr><td style="text-align:center;">SOCK_STREAM</td><td style="text-align:center;">\u5B57\u8282\u6D41socket</td></tr><tr><td style="text-align:center;">SOCK_DGRAM</td><td style="text-align:center;">\u6570\u636E\u62A5socket</td></tr><tr><td style="text-align:center;">SOCK_SEQPACKET</td><td style="text-align:center;">\u6709\u5E8F\u5206\u7EC4socket</td></tr><tr><td style="text-align:center;">SOCK_RAW</td><td style="text-align:center;">\u539F\u59CBsocket</td></tr></tbody></table><p>\u81F3\u4E8E<code>protocol</code>\uFF0C\u4F60\u53EF\u4EE5\u7B80\u5355\u5730\u5C06<code>protocol</code>\u8BBE\u7F6E\u4E3A<code>0</code>\uFF0C\u4F1A\u81EA\u52A8\u9009\u62E9<code>domain</code>\u548C<code>type</code>\u5B57\u6BB5\u7EC4\u5408\u7684\u7CFB\u7EDF\u9ED8\u8BA4\u503C\u3002\u5F53\u7136\u55BD\uFF0C\u5982\u679C\u4F60\u60F3\u4EB2\u529B\u4EB2\u4E3A\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u8C03\u7528 <code>getprotobyname()</code> \u6765\u67E5\u627E\u4F60\u60F3\u8981\u7684\u534F\u8BAE\uFF0C\u53C2\u6570\u53EF\u4EE5\u662F\u201C<code>tcp</code>\u201D\u3001\u201C<code>udp</code>\u201D\u7B49\uFF0C\u8FD8\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E0B\u8868\u4E2D\u7684\u5E38\u503C\u3002</p><table><thead><tr><th style="text-align:center;">protocol</th><th style="text-align:center;">\u8BF4\u660E</th></tr></thead><tbody><tr><td style="text-align:center;">IPPROTO_TCP</td><td style="text-align:center;">TCP\u4F20\u8F93\u534F\u8BAE</td></tr><tr><td style="text-align:center;">IPPROTO_UDP</td><td style="text-align:center;">UDP\u4F20\u8F93\u534F\u8BAE</td></tr><tr><td style="text-align:center;">IPPROTO_SCTP</td><td style="text-align:center;">SCTP\u4F20\u8F93\u534F\u8BAE</td></tr></tbody></table><p>\u53EF\u80FD\u4F60\u5DF2\u7ECF\u6CE8\u610F\u5230\u4E86\uFF0C<code>domain</code>\u5B57\u6BB5\u7684\u5019\u9009\u503C\u4E2D\u65E2\u6709<code>AF_INET</code>\u53C8\u6709<code>PF_INET</code>\uFF0C<code>AF_XXX</code> \u548C <code>PF_XXX</code>\u6709\u4EC0\u4E48\u533A\u522B\u5462\uFF1F</p><p><code>AF_</code>\u524D\u7F00\u8868\u793A\u5730\u5740\u65CF\uFF08<code>AF</code>\u8868\u793A<code>Address Family</code>\uFF09\uFF0C<code>PF_</code> \u524D\u7F00\u8868\u793A\u534F\u8BAE\u65CF\uFF08<code>PF</code>\u8868\u793A<code>Protocol Family</code>\uFF09\u3002\u4F60\u53EF\u80FD\u53D1\u73B0\u6709\u4E9B\u8D44\u6599\u7684<code>socket()</code>\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F7F\u7528<code>AF_XXX</code>\uFF0C\u6709\u4E9B\u8D44\u6599\u5374\u4F7F\u7528<code>PF_XXX</code>\uFF0C\u8FD9\u786E\u5B9E\u6709\u70B9\u8BA9\u4EBA\u5934\u75BC\u3002</p><p>\u8FFD\u6839\u6EAF\u6E90\uFF0C\u8FD9\u5176\u5B9E\u662F\u6709\u5386\u53F2\u539F\u56E0\u7684\u3002\u5F88\u4E45\u5F88\u4E45\u4E4B\u524D\uFF0C\u4EBA\u4EEC\u8BBE\u60F3\u5355\u4E2A\u534F\u8BAE\u65CF\u53EF\u4EE5\u652F\u6301\u591A\u4E2A\u5730\u5740\u65CF\uFF0C\u4F46\u662F\u8FD9\u4E2A\u60F3\u6CD5\u5C31\u4ECE\u6765\u6CA1\u6709\u5B9E\u73B0\u8FC7\u3002\u800C\u4E14<code>&lt;sys/socket.h&gt;</code>\u8FD9\u4E2A\u5934\u6587\u4EF6\u4E2D\u4E3A\u67D0\u4E2A\u7ED9\u5B9A\u534F\u8BAE\u5B9A\u4E49\u7684<code>PF_</code>\u503C\u603B\u662F\u548C\u6B64\u534F\u8BAE\u7684<code>AF_</code>\u503C\u76F8\u7B49\uFF0C\u8FD9\u5C31\u76F4\u63A5\u9020\u6210\u4E86<code>AF_</code>\u548C<code>PF_</code>\u6EE5\u7528\u7684\u4E71\u8C61\u3002</p><p>\u76F8\u6BD4<code>PF_XXX</code>\uFF0C\u5F88\u591A\u7A0B\u5E8F\u5458\u66F4\u559C\u6B22\u5C06<code>AF_XXX</code>\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F20\u5165socket\uFF0C\u751A\u81F3\u5305\u62EC\u300AUnix\u7F51\u7EDC\u7F16\u7A0B\u300B\u7684\u4F5C\u8005Stevens\u4E5F\u5728\u4E66\u4E2D\u76F4\u63A5\u7528<code>AF_XXX</code>\u4F5C\u4E3A\u53C2\u6570\uFF08\u8FD9\u5176\u5B9E\u53EA\u662F\u4F5C\u8005\u60F3\u4E0E\u5927\u90E8\u5206\u4EE3\u7801\u4FDD\u6301\u4E00\u81F4\u7F62\u4E86\uFF0C\u7B97\u662F\u4E00\u79CD\u59A5\u534F\uFF09\u3002\u4F46\u5927\u591A\u6570\u4EBA\u505A\u7684\u672A\u5FC5\u5C31\u662F\u5BF9\u7684\u3002</p><p>\u6211\u4EEC\u6700\u63A8\u5D07\u7684\u4E00\u79CD\u505A\u6CD5\u662F\u9075\u5B88POSIX\u89C4\u8303\uFF0C\u5C06<code>socket()</code>\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u8BBE\u7F6E\u4E3A<code>PF_</code>\u503C\uFF0C\u800C\u5728<code>struct sockaddr_in</code>\u7ED3\u6784\u4E2D\u4F7F\u7528<code>AF_</code>\u3002</p><p>\u8BF4\u8FD9\u4E48\u591A\u5DF2\u7ECF\u591F\u7528\u4E86\u3002\u7ED3\u5408\u4E4B\u524D\u8BB2\u8FC7\u7684<code>getaddrinfo()</code>\uFF0C\u6211\u4EEC\u9700\u8981\u505A\u7684\u5C31\u662F\u5C06<code>getaddrinfo()</code>\u8C03\u7528\u5F97\u5230\u7ED3\u679C\u76F4\u63A5\u5582\u7ED9<code>socket()</code>\uFF0C\u50CF\u8FD9\u6837\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> s<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>

<span class="token comment">// do the lookup</span>
<span class="token comment">// [pretend we already filled out the &quot;hints&quot; struct]</span>
<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// again, you should do error-checking on getaddrinfo(), and walk</span>
<span class="token comment">// the &quot;res&quot; linked list looking for valid entries instead of just</span>
<span class="token comment">// assuming the first one is good (like many of these examples do).</span>
<span class="token comment">// See the section on client/server for real examples.</span>

s <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>socket()</code>\u51FD\u6570\u5728\u8FD4\u56DE\u6210\u529F\u65F6\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5957\u63A5\u5B57\u63CF\u8FF0\u7B26\uFF08socket descriptor\uFF09,\u5B83\u662F\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\uFF0C\u5728\u540E\u7EED\u7684\u5176\u4ED6\u51FD\u6570\u8C03\u7528\u4E2D\uFF0C\u6211\u4EEC\u5C06\u4F7F\u7528\u5B83\u6765\u8868\u793A\u8FD9\u4E2Asocket\u3002</p><p>\u5982\u679C\u53D1\u751F\u9519\u8BEF\uFF0C<code>socket()</code>\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u6B64\u65F6<code>errno</code>\u8FD9\u4E2A\u5168\u5C40\u53D8\u91CF\u4F1A\u88AB\u8BBE\u7F6E\u4E3A\u8BE5\u9519\u8BEF\u7684\u503C\u3002</p><blockquote><p>\u53EA\u8981\u4E00\u4E2AUnix\u51FD\u6570\u53D1\u751F\u9519\u8BEF\uFF0CUnix\u7684\u5168\u5C40\u53D8\u91CF<code>errno</code>\u5C31\u4F1A\u88AB\u8BBE\u7F6E\u4E3A\u4E00\u4E2A\u6307\u660E\u8BE5\u9519\u8BEF\u7C7B\u578B\u7684\u67D0\u4E2A\u6B63\u6570\uFF0C\u800C\u51FD\u6570\u672C\u8EAB\u901A\u5E38\u8FD4\u56DE<code>-1</code>\u3002</p><p>\u4E0B\u9762\u5C55\u793A\u4E86<code>&lt;sys/errno.h&gt;</code>\u5934\u6587\u4EF6\u4E2D\u5B9A\u4E49\u7684<code>errno</code>\u7684\u90E8\u5206\u5019\u9009\u503C\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment">/*
 * Error codes
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EPERM</span>           <span class="token expression"><span class="token number">1</span>               </span><span class="token comment">/* Operation not permitted */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ENOENT</span>          <span class="token expression"><span class="token number">2</span>               </span><span class="token comment">/* No such file or directory */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ESRCH</span>           <span class="token expression"><span class="token number">3</span>               </span><span class="token comment">/* No such process */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EINTR</span>           <span class="token expression"><span class="token number">4</span>               </span><span class="token comment">/* Interrupted system call */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EIO</span>             <span class="token expression"><span class="token number">5</span>               </span><span class="token comment">/* Input/output error */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ENXIO</span>           <span class="token expression"><span class="token number">6</span>               </span><span class="token comment">/* Device not configured */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">E2BIG</span>           <span class="token expression"><span class="token number">7</span>               </span><span class="token comment">/* Argument list too long */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ENOEXEC</span>         <span class="token expression"><span class="token number">8</span>               </span><span class="token comment">/* Exec format error */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EBADF</span>           <span class="token expression"><span class="token number">9</span>               </span><span class="token comment">/* Bad file descriptor */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ECHILD</span>          <span class="token expression"><span class="token number">10</span>              </span><span class="token comment">/* No child processes */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EDEADLK</span>         <span class="token expression"><span class="token number">11</span>              </span><span class="token comment">/* Resource deadlock avoided */</span></span>
                                        <span class="token comment">/* 11 was EAGAIN */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ENOMEM</span>          <span class="token expression"><span class="token number">12</span>              </span><span class="token comment">/* Cannot allocate memory */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EACCES</span>          <span class="token expression"><span class="token number">13</span>              </span><span class="token comment">/* Permission denied */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">EFAULT</span>          <span class="token expression"><span class="token number">14</span>              </span><span class="token comment">/* Bad address */</span></span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="_6-3-bind-\u2014\u6211\u5728\u76D1\u542C\u54EA\u4E2A\u7AEF\u53E3" tabindex="-1"><a class="header-anchor" href="#_6-3-bind-\u2014\u6211\u5728\u76D1\u542C\u54EA\u4E2A\u7AEF\u53E3" aria-hidden="true">#</a> 6.3. bind()\u2014\u6211\u5728\u76D1\u542C\u54EA\u4E2A\u7AEF\u53E3?</h3><p>\u5F53\u4F60\u521B\u5EFA\u4E86socket\u4E4B\u540E\uFF0C\u4F60\u4F1A\u60F3\u8981\u628A\u8FD9\u4E2Asocket\u548C\u4F60\u672C\u673A\u4E0A\u7684\u67D0\u4E2A\u7AEF\u53E3\u53F7\uFF08port\uFF09\u8FDB\u884C\u5173\u8054\u3002</p><p>\u7AEF\u53E3\u53F7\u662F\u5185\u6838\u7528\u6765\u786E\u8BA4\u5C06\u6536\u5230\u7684\u6570\u636E\u5305\u4EA4\u7ED9\u54EA\u4E2A\u5177\u4F53\u8FDB\u7A0B\u7684<code>socket descriptor</code>\u7684\u4F9D\u636E\u3002</p><blockquote><p>\u901A\u5E38\u5728\u5199\u670D\u52A1\u7AEF\u7A0B\u5E8F\u7684\u65F6\u5019\u6211\u4EEC\u624D\u9700\u8981\u8FDB\u884C\u5173\u8054\uFF0C\u5BA2\u6237\u7AEF\u7A0B\u5E8F\u4E0D\u9700\u8981\u6211\u4EEC\u624B\u52A8\u7ED1\u5B9A\u7AEF\u53E3\uFF0C\u76F4\u63A5<code>connect()</code>\u5C31\u597D\u4E86\u3002</p></blockquote><p>\u6765\u770B\u770B\u7AEF\u53E3\u53F7\u5177\u4F53\u662F\u600E\u4E48\u7ED1\u5B9A\u7684\u5427\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>my_addr<span class="token punctuation">,</span> <span class="token keyword">int</span> addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sockfd</code>\u662F<code>socket()</code>\u8FD4\u56DE\u7684\u4E00\u4E2A<code>socket file descriptor</code>\uFF1B<code>my_addr</code>\u662F\u4E00\u4E2A\u6307\u5411\u5305\u542B\u4E86\u4F60\u7684\u7AEF\u53E3\u53F7\u548CIP\u5730\u5740\u4FE1\u606F\u7684<code>struct sockaddr</code>\u6307\u9488\uFF1B<code>addrlen</code>\u662F\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\u7684\u5730\u5740\u957F\u5EA6\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u7ED9\u51FA\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u5B83\u5C06socket\u548C\u6211\u672C\u673A\u7684<code>3490</code>\u7AEF\u53E3\u8FDB\u884C\u7ED1\u5B9A\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>

<span class="token comment">// first, load up address structs with getaddrinfo():</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>  <span class="token comment">// use IPv4 or IPv6, whichever</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>     <span class="token comment">// fill in my IP for me</span>

<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// make a socket:</span>

sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bind it to the port we passed in to getaddrinfo():</span>

<span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4F7F\u7528<code>AI_PASSIVE</code>\u6807\u8BC6\uFF0C\u7A0B\u5E8F\u4F1A\u81EA\u52A8\u7ED1\u5B9A\u5B83\u6240\u5728\u7684\u7A0B\u5E8F\u7684IP\u3002\u5982\u679C\u4F60\u60F3\u7CBE\u786E\u7ED1\u5B9A\u5230\u672C\u673A\u7684\u67D0\u4E00\u4E2AIP\u5730\u5740\uFF0C\u4F60\u5C31\u4E0D\u80FD\u7528<code>AI_PASSIVE</code>\u4E86\uFF0C\u800C\u4E14\u4F60\u8FD8\u5F97\u628A<code>getaddrinfo()</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4ECE<code>NULL</code>\u6539\u4E3A\u4F60\u60F3\u7ED1\u5B9A\u7684\u90A3\u4E2AIP\u5730\u5740\u3002</p><p><code>bind()</code>\u548C\u5176\u4ED6\u7CFB\u7EDF\u8C03\u7528\u4E00\u6837\uFF0C\u53D1\u751F\u9519\u8BEF\u7684\u65F6\u5019\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u4F1A\u8BBE\u7F6E\u5168\u5C40\u53D8\u91CF<code>errno</code>\u7684\u503C\u3002</p><p>\u5F88\u591A\u8001\u4EE3\u7801\u90FD\u4F1A\u5728\u8C03\u7528<code>bind()</code>\u4E4B\u524D\u624B\u52A8\u5C01\u88C5 <code>struct sockaddr_in</code> \u3002\u5F53\u7136\uFF0C\u8FD9\u91CC\u7ED1\u5B9A\u7684\u80AF\u5B9A\u662FIPv4\u7684\u5730\u5740\uFF0C\u5982\u679C\u4F60\u60F3\u4F7F\u7528IPv6\uFF0C\u4F60\u7167\u6837\u53EF\u4EE5\u624B\u52A8\u5C01\u88C5<code>struct sockaddr_in6</code> \uFF0C\u4F46\u662F\u6781\u529B\u4E0D\u63A8\u8350\u4F60\u8FD9\u4E48\u505A\u3002\u4F60\u8FD8\u662F\u5E94\u8BE5\u8001\u8001\u5B9E\u5B9E\u7528 <code>getaddrinfo()</code> \uFF0C\u8FD9\u6837\u66F4\u4F18\u96C5\u3001\u66F4\u7B80\u5355\u3002</p><p>\u7ED9\u4F60\u770B\u770B\u8001\u4EE3\u7801\u957F\u4EC0\u4E48\u6837\u5B50\u5427\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// !!! THIS IS THE OLD WAY !!!</span>

<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> my_addr<span class="token punctuation">;</span>

sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>PF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

my_addr<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
my_addr<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>MYPORT<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// short, network byte order</span>
my_addr<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> <span class="token function">inet_addr</span><span class="token punctuation">(</span><span class="token string">&quot;10.12.110.57&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">memset</span><span class="token punctuation">(</span>my_addr<span class="token punctuation">.</span>sin_zero<span class="token punctuation">,</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> my_addr<span class="token punctuation">.</span>sin_zero<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>my_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> my_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u4E2A\u4EE3\u7801\u4E2D\uFF0C\u4F60\u4F9D\u7136\u53EF\u4EE5\u628A<code>my_addr.sin_addr.s_addr</code>\u8BBE\u7F6E\u4E3A <code>INADDR_ANY</code> \uFF0C\u5B83\u7684\u4F5C\u7528\u4E0A\u6587\u63D0\u5230\u7684<code>AI_PASSIVE</code>\u4E00\u6837\uFF0C\u90FD\u4F1A\u8BA9\u4EE3\u7801\u81EA\u52A8\u7ED1\u5B9A\u5230\u672C\u673AIP\u3002 <code>INADDR_ANY</code> \u7684IPv6\u7248\u672C\u662F\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\uFF0C\u53EB<code>in6addr_any</code>\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u4F1A\u88AB\u6307\u5B9A\u7ED9\u4F60\u7684 <code>struct sockaddr_in6</code> \u7684<code>sin6_addr</code>\u5B57\u6BB5\u3002</p><blockquote><p>\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528<code>IN6ADDR_ANY_INIT</code>\u8FD9\u4E2A\u5B8F\u6765\u521D\u59CB\u5316\u53D8\u91CF</p></blockquote><p>\u8C03\u7528<code>bind()</code>\u65F6\u6709\u4E00\u4EF6\u4E8B\u9700\u8981\u4F60\u7279\u522B\u6CE8\u610F\uFF1A\u4E0D\u8981\u4F7F\u7528<code>1024</code>\u4EE5\u4E0B\u7684\u7AEF\u53E3\u53F7\uFF0C\u56E0\u4E3A\u8FD9\u4E9B\u7AEF\u53E3\u53F7\u662F\u88AB\u4FDD\u7559\u4F7F\u7528\u7684\uFF0C\u9664\u975E\u4F60\u662F\u8D85\u7EA7\u7BA1\u7406\u5458\u3002\u9664\u4E86<code>1024</code>\u4EE5\u4E0B\u7684\uFF0C<code>1025\uFF5E65535</code>\u4E4B\u95F4\u7684\u968F\u4FBF\u7528\uFF08\u5176\u4ED6\u7A0B\u5E8F\u5360\u7528\u7684\u9664\u5916\uFF09\u3002</p><p>\u6709\u65F6\u5019\uFF0C\u4F60\u660E\u660E\u91CD\u65B0\u8FD0\u884C\u4E86\u4F60\u7684\u670D\u52A1\u7AEF\u7A0B\u5E8F\uFF0C\u4F46\u662F<code>bind()</code>\u62A5\u9519\u4E86\uFF0C\u63D0\u793A\u4F60\u201CAddress already in use\u201D\u3002\u8FD9\u662F\u4E3A\u4EC0\u4E48\uFF1F\u7406\u8BBA\u4E0A\u91CD\u542F\u4E4B\u540E\u7AEF\u53E3\u5C31\u4F1A\u88AB\u91CA\u653E\u554A\uFF01\u597D\u5427\uFF0C\u8FD9\u662F\u56E0\u4E3A\u6709\u4E00\u4E9B\u8FDE\u63A5\u5230socket\u7684\u8FDE\u63A5\u8FD8\u60AC\u5728\u5185\u6838\u4E2D\uFF0C\u5C31\u662F\u5B83\u4EEC\u5360\u7528\u4E86\u8FD9\u4E2A\u7AEF\u53E3\u53F7\u3002\u4F60\u53EF\u4EE5\u7B49\u4E00\u5206\u949F\u5DE6\u53F3\u8BA9\u5B83\u4EEC\u81EA\u884C\u6D88\u5931\uFF0C\u6216\u8005\u5728\u4F60\u7684\u4EE3\u7801\u52A0\u8FD9\u4E48\u51E0\u884C\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> yes<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//char yes=&#39;1&#39;; // Solaris people use this</span>

<span class="token comment">// lose the pesky &quot;Address already in use&quot; error message</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">setsockopt</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span>SOL_SOCKET<span class="token punctuation">,</span>SO_REUSEADDR<span class="token punctuation">,</span><span class="token operator">&amp;</span>yes<span class="token punctuation">,</span><span class="token keyword">sizeof</span> yes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;setsockopt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5C31\u4E0D\u4F1A\u518D\u51FA\u73B0\u7AEF\u53E3\u88AB\u5360\u7528\u7684\u95EE\u9898\u4E86\u3002</p><h3 id="_6-4-connect-\u2014\u563F-\u4F60\u597D\u554A" tabindex="-1"><a class="header-anchor" href="#_6-4-connect-\u2014\u563F-\u4F60\u597D\u554A" aria-hidden="true">#</a> 6.4. connect()\u2014\u563F\uFF0C\u4F60\u597D\u554A\uFF01</h3><p>\u5BA2\u6237\u7AEF\u5C31\u662F\u7528<code>connect()</code>\u51FD\u6570\u6765\u5EFA\u7ACB\u4E0E\u670D\u52A1\u5668\u4E4B\u95F4\u7684\u8FDE\u63A5\u7684\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>serv_addr<span class="token punctuation">,</span> <span class="token keyword">int</span> addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sockfd</code>\u662F\u6211\u4EEC\u7684\u8001\u670B\u53CB\u4E86\uFF0C\u662F\u7531<code>socket()</code>\u51FD\u6570\u8FD4\u56DE\u7684\u5957\u63A5\u5B57\u63CF\u8FF0\u7B26\uFF0C<code>serv_addr</code>\u662F\u4E00\u4E2A\u6267\u884C\u5957\u63A5\u5B57\u5730\u5740\u7ED3\u6784 <code>struct sockaddr</code> \u7684\u6307\u9488\uFF0C <code>struct sockaddr</code> \u4E2D\u5B58\u50A8\u4E86\u76EE\u6807IP\u5730\u5740\u548C\u7AEF\u53E3\u53F7\u4FE1\u606F\uFF0C<code>addrlen</code>\u662F<code>serv_addr</code>\u6307\u5411\u7684<code>struct sockaddr</code> \u5927\u5C0F\u3002</p><p>\u518D\u6B21\u5F3A\u8C03\u4E00\u4E0B <code>getaddrinfo()</code> \u7684\u5999\u5904\uFF0C\u6240\u6709\u4F60\u9700\u8981\u7684\u8FDE\u63A5\u4FE1\u606F\u90FD\u53EF\u4EE5\u4ECE\u8FD9\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u7ED3\u679C\u4E2D\u83B7\u53D6\u3002</p><p>\u5BA2\u6237\u7AEF\u5728\u8C03\u7528<code>connect()</code>\u4E4B\u524D\u4E0D\u5FC5\u975E\u5F97\u8C03\u7528<code>bind()</code>\u51FD\u6570\uFF0C\u56E0\u4E3A\u5982\u679C\u6709\u5FC5\u8981\uFF0C\u5185\u6838\u4F1A\u786E\u5B9A\u6E90IP\u5730\u5740\uFF0C\u5E76\u9009\u62E9\u4E00\u4E2A\u4E34\u65F6\u7AEF\u53E3\u53F7\u4F5C\u4E3A\u6E90\u7AEF\u53E3\u3002</p>`,57),as=s("\u4E3E\u4E00\u4E2A\u4F7F\u7528"),es=n("code",null,"connect()",-1),ts=s('\u8FDE\u63A5\u5230"'),os={href:"http://www.chanmufeng.com",target:"_blank",rel:"noopener noreferrer"},ps=s("www.chanmufeng.com"),cs=s('" \u7684'),is=n("code",null,"3490",-1),ls=s("\u7AEF\u53E3\u7684\u4F8B\u5B50\uFF1A"),ds=t(`<div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>

<span class="token comment">// first, load up address structs with getaddrinfo():</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>

<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// make a socket:</span>

sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// connect!</span>

<span class="token function">connect</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u548C\u4E0A\u4E00\u8282\u8BB2\u7684<code>bind()</code>\u4E00\u6837\uFF0C\u6709\u4E9B\u8001\u4EE3\u7801\u5728\u8C03\u7528<code>connect()</code>\u4E4B\u524D\u4F1A\u624B\u52A8\u5C01\u88C5 <code>struct sockaddr_in</code>\uFF0C\u7136\u540E\u4F20\u7ED9<code>connect()</code>\u4F5C\u4E3A\u53C2\u6570\u3002\u4F60\u73B0\u5728\u4ECD\u7136\u53EF\u4EE5\u8FD9\u4E48\u505A\uFF0C\u4F46\u662F\u6CA1\u5FC5\u8981\uFF01</p><p>\u5982\u679C\u4F60\u4F7F\u7528\u7684\u662FTCP\u5957\u63A5\u5B57\uFF0C\u8C03\u7528<code>connect</code>\u51FD\u6570\u4F1A\u89E6\u53D1TCP\u7684\u4E09\u6B21\u63E1\u624B\u8FC7\u7A0B\uFF0C\u800C\u4E14\u4EC5\u5728\u8FDE\u63A5\u6210\u529F\u6216\u8005\u5931\u8D25\u65F6\u624D\u4F1A\u8FD4\u56DE\uFF0C\u5931\u8D25\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u4F1A\u8BBE\u7F6E\u5168\u5C40\u53D8\u91CF<code>errno</code>\u7684\u503C\u3002</p><h3 id="_6-5-listen-\u2014\u4F1A\u6709\u4EBA\u8054\u7CFB\u6211\u5417" tabindex="-1"><a class="header-anchor" href="#_6-5-listen-\u2014\u4F1A\u6709\u4EBA\u8054\u7CFB\u6211\u5417" aria-hidden="true">#</a> 6.5. listen()\u2014\u4F1A\u6709\u4EBA\u8054\u7CFB\u6211\u5417?</h3><p>\u4E4B\u524D\u8BB2\u7684\u51FD\u6570\u670D\u52A1\u7AEF\u548C\u5BA2\u6237\u7AEF\u90FD\u53EF\u4EE5\u4F7F\u7528\uFF0C\u8BA9\u6211\u4EEC\u6362\u6362\u53E3\u5473\uFF0C\u8FD9\u6B21\u8BB2\u4E00\u4E2A\u4EC5\u7528\u4E8E\u670D\u52A1\u7AEF\u7684\u51FD\u6570\uFF0C\u4E0D\u4EC5\u5982\u6B64\uFF0C\u5B83\u8FD8\u53EA\u80FD\u7528\u4E8ETCP\u670D\u52A1\u7AEF\u3002</p><p>\u8EAB\u4E3A\u670D\u52A1\u7AEF\uFF0C\u80AF\u5B9A\u662F\u9700\u8981\u7B49\u5F85\u968F\u65F6\u53EF\u80FD\u5230\u6765\u7684\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u5E76\u91C7\u7528\u67D0\u79CD\u65B9\u5F0F\u5904\u7406\u8FDE\u63A5\u3002\u6574\u4E2A\u8FC7\u7A0B\u53EF\u4EE5\u5206\u4E3A\u4E24\u6B65\uFF1A\u5148\u8C03\u7528<code>listen()</code>\uFF0C\u7136\u540E\u8C03\u7528<code>accept()</code>\uFF08\u8FD9\u662F\u4E0B\u4E00\u5C0F\u8282\u7684\u5185\u5BB9\uFF09\u3002</p><p><code>listen</code>\u7684\u8C03\u7528\u975E\u5E38\u7B80\u5355\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/sock.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">int</span> backlog<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u53EA\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u4F46\u662F\u5176\u4E2D\u6709\u4E00\u4E9B\u7EC6\u8282\u503C\u5F97\u73A9\u5473\u3002</p><p><code>sockfd</code>\u5C31\u662F\u901A\u8FC7<code>socket()</code>\u8FD4\u56DE\u7684\u4E00\u4E2A<strong>\u666E\u901A</strong><code>socket file descriptor</code>\u800C\u5DF2\uFF0C\u7CFB\u7EDF\u9ED8\u8BA4\u8FD9\u4E2Asocket\u53EA\u662F\u4E00\u4E2A\u7B49\u5F85\u8FDB\u884C\u4E3B\u52A8\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEFsocket\u3002\u800C<code>listen</code>\u51FD\u6570\u4F1A\u628A\u8FD9\u4E2A\u5BA2\u6237\u7AEFsocket\u8F6C\u6362\u4E3A\u670D\u52A1\u7AEFsocket\uFF0C\u544A\u8BC9\u5185\u6838\u9700\u8981\u63A5\u53D7\u6307\u5411\u8BE5socket\u7684\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5E76\u4E14\u8BE5socket\u7684TCP\u72B6\u6001\u4ECE<code>CLOSED</code>\u8F6C\u6362\u4E3A<code>LISTEN</code>\u3002</p><p><code>backlog</code>\u53C2\u6570\u8868\u793A\u5185\u6838\u5E94\u8BE5\u4E3A\u8BE5\u5957\u63A5\u5B57\u6392\u961F\u7684\u6700\u5927\u8FDE\u63A5\u4E2A\u6570\u3002\u8FD9\u662F\u5565\u610F\u601D\uFF1F\u6240\u6709\u5BA2\u6237\u7AEF\u4E0E\u8BE5socket\u5EFA\u7ACB\u7684\u8FDE\u63A5\u90FD\u4F1A\u5728\u4E00\u4E2A\u961F\u5217\u4E2D\u6392\u961F\u7B49\u5F85\uFF0C\u76F4\u5230\u4F60<code>accept()</code>\uFF08\u89C1\u4E0B\u8282\uFF09\u5B83\u4EEC\uFF0C\u8FD9\u4E2A\u53C2\u6570\u5C31\u8868\u793A\u6700\u591A\u6709\u591A\u5C11\u4E2A\u8FDE\u63A5\u6709\u8D44\u683C\u6392\u961F\u3002\u5927\u591A\u6570\u7CFB\u7EDF\u5C06\u8FD9\u4E2A\u503C\u9884\u8BBE\u4E3A20\uFF0C\u4F60\u53EF\u4EE5\u521D\u59CB\u5316\u4E3A5\u6216\u800510\u3002</p><p>\u8FD8\u6709\u8001\u751F\u5E38\u8C08\u7684\uFF0C<code>listen() </code>\u5728\u9519\u8BEF\u7684\u65F6\u5019\u4F1A\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u8BBE\u7F6E <code>errno</code>\u3002</p><p>\u8054\u7CFB\u4E4B\u524D\u8BB2\u8FC7\u76843\u4E2A\u7CFB\u7EDF\u8C03\u7528\uFF0C\u521B\u5EFA\u670D\u52A1\u7AEF\u4EE3\u7801\u9700\u8981\u8C03\u7528\u7684\u51FD\u6570\u4F9D\u6B21\u4E3A\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* accept() \u5C06\u88AB\u5199\u5728\u8FD9\u91CC */</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u53EA\u662F\u5217\u51FA\u4E86\u51FD\u6570\u7684\u8C03\u7528\u987A\u5E8F\u800C\u5DF2\uFF0C\u8FD9\u51E0\u4E2A\u6B65\u9AA4\u90FD\u6BD4\u8F83\u7B80\u5355\uFF0C\u7A0D\u5FAE\u9700\u8981\u70B9\u5904\u7406\u6280\u5DE7\u7684\u662F\u4E0B\u4E00\u8282\u7684<code>accept()</code>\u3002</p><h3 id="_6-6-accept-\u2014\u611F\u8C22\u547C\u53EB3490\u7AEF\u53E3" tabindex="-1"><a class="header-anchor" href="#_6-6-accept-\u2014\u611F\u8C22\u547C\u53EB3490\u7AEF\u53E3" aria-hidden="true">#</a> 6.6. accept()\u2014\u611F\u8C22\u547C\u53EB3490\u7AEF\u53E3</h3><p>\u7CFB\u597D\u5B89\u5168\u5E26\uFF0C<code>accept()</code>\u4E4B\u65C5\u5F00\u59CB\u4E86\u3002</p><p>\u4E00\u4E2A\u8FDC\u7A0B\u7528\u6237\u8BD5\u56FE\u8C03\u7528<code>connect()</code>\u6765\u8FDE\u63A5\u5230\u4F60\u4F7F\u7528<code>listen()</code>\u8FDB\u884C\u76D1\u542C\u7684\u7AEF\u53E3\u4E0A\uFF0C\u8FD9\u4E2A\u8FDE\u63A5\u4F1A\u88AB\u653E\u5230\u961F\u5217\u4E2D\u7B49\u7740\u88AB\u4F60<code>accept()</code>\u3002\u8FD9\u53E5\u8BDD\u8981\u662F\u4F60\u770B\u4E0D\u61C2\u4F60\u9700\u8981\u56DE\u53BB\u770B\u770B\u524D\u6587\u54E6\u3002</p><p>\u7136\u540E\u4F60\u8C03\u7528<code>accept()</code>\uFF0C\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u4E00\u4E2A\u7B49\u5019\u5DF2\u4E45\u7684\u8FDE\u63A5\uFF0C<code>accept()</code>\u4F1A\u8FD4\u56DE\u7ED9\u4F60\u4E00\u4E2A\u4E13\u5C5E\u4E8E\u8FD9\u4E2A\u8FDE\u63A5\u7684\u4E00\u4E2A<strong>\u5168\u65B0\u7684</strong><code>socket file descriptor</code>\uFF01</p><p>\u6CA1\u9519\uFF0C\u4F60\u73B0\u5728\u6709<strong>2\u4E2A</strong><code>socket file descriptor</code>\u4E86\uFF01\u539F\u6765\u7684<code>socket file descriptor</code>\u4ECD\u5728\u5904\u4E8E\u88AB<code>listen()</code>\u7684\u72B6\u6001\u7B49\u5F85\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\uFF0C\u800C\u4F60\u521A\u521A\u5F97\u5230\u7684<code>socket file descriptor</code>\u5219\u662F\u51C6\u5907\u7ED9<code>send()</code>\u548C<code>recv()</code>\u4F7F\u7528\u7684\uFF0C\u901A\u8FC7\u8FD9\u4FE9\u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u5B9E\u73B0\u548C\u5BA2\u6237\u7AEF\u4E4B\u95F4\u7684\u901A\u4FE1\u4E86\u3002</p><p><code>accept()</code>\u4F7F\u7528\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> <span class="token operator">*</span>addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sockfd</code>\u5C31\u662F\u6B63\u5728\u88AB<code>listen()</code>\u7684\u90A3\u4E2A<code>socket descriptor</code>\uFF0C\u8FD9\u4E2A\u6CA1\u5565\u96BE\u5EA6\u3002</p><p><code>addr</code>\u5C31\u662F\u4E00\u4E2A\u6307\u5411 <code>struct sockaddr_storage</code>\u7684\u6307\u9488\uFF0C\u8FD9\u91CC\u8FB9\u4F1A\u81EA\u52A8\u4FDD\u5B58\u5BA2\u6237\u7AEF\u7684\u4E00\u4E9B\u4FE1\u606F\uFF0C\u4F60\u80FD\u4ECE\u4E2D\u5F97\u77E5\u5BA2\u6237\u7AEF\u662F\u4ECE\u54EA\u4E2AIP\u3001\u54EA\u4E2A\u7AEF\u53E3\u5BF9\u4F60\u53D1\u8D77\u7684\u8FDE\u63A5\u3002</p><p><code>addrlen</code>\u662F\u4E00\u4E2A\u6574\u6570\u53D8\u91CF\uFF0C\u4F60\u5E94\u8BE5\u5728\u5C06\u5B83\u7684\u5730\u5740\u4F20\u7ED9<code>accept()</code>\u4E4B\u524D\uFF0C\u628A\u5B83\u8BBE\u7F6E\u4E3A <code>sizeof(struct sockaddr_storage)</code> \u3002<code>accept()</code>\u4FDD\u5B58\u5728<code>addr</code>\u6307\u5411\u7684\u5BF9\u8C61\u4E2D\u7684\u6570\u636E\u5927\u5C0F\u53EA\u4F1A\u5C0F\u4E8E\u7B49\u4E8E<code>addrlen</code>\uFF0C\u5982\u679C\u5C0F\u4E8E\u7684\u8BDD\uFF0C<code>accept()</code>\u4F1A\u901A\u8FC7\u6539\u53D8<code>addrlen</code>\u7684\u503C\u6765\u544A\u8BC9\u4F60\uFF0C\u6240\u4EE5\u4F60\u5E94\u8BE5\u77E5\u9053\u4E3A\u4EC0\u4E48\u8FD9\u4E2A\u5B57\u6BB5\u662F\u4E2A\u6307\u9488\u53D8\u91CF\u4E86\u5427\u3002</p><p>\u731C\u731C\u6211\u8981\u8BF4\u5565\uFF0C\u4E00\u53E5\u6211\u5FEB\u8BF4\u5410\u4E86\u7684\u8BDD\u3002<code>accept() </code>\u5728\u9519\u8BEF\u7684\u65F6\u5019\u4F1A\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u8BBE\u7F6E <code>errno</code>\u3002</p><p>\u548C\u4E4B\u524D\u4E00\u6837\uFF0Cshow you the code\u53EF\u80FD\u4F1A\u66F4\u597D\u5438\u6536\uFF0C\u770B\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MYPORT</span> <span class="token string">&quot;3490&quot;</span>  <span class="token comment">// the port users will be connecting to</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BACKLOG</span> <span class="token expression"><span class="token number">10</span>     </span><span class="token comment">// how many pending connections queue will hold</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> their_addr<span class="token punctuation">;</span>
    <span class="token class-name">socklen_t</span> addr_size<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> new_fd<span class="token punctuation">;</span>

    <span class="token comment">// !! don&#39;t forget your error checking for these calls !!</span>

    <span class="token comment">// first, load up address structs with getaddrinfo():</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>  <span class="token comment">// use IPv4 or IPv6, whichever</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>     <span class="token comment">// fill in my IP for me</span>

    <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> MYPORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// make a socket, bind it, and listen on it:</span>

    sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> BACKLOG<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// now accept an incoming connection:</span>

    addr_size <span class="token operator">=</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">;</span>
    new_fd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>addr_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ready to communicate on socket descriptor new_fd!</span>
    <span class="token punctuation">.</span>
    <span class="token punctuation">.</span>
    <span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u4F1A\u7528\u5F97\u5230\u7684<code>new_fd</code>\u8FD9\u4E2A<code>socket descriptor</code>\u8FDB\u884C<code>send()</code>\u548C<code>recv()</code>\u3002</p><p>\u5982\u679C\u4F60\u53EA\u662F\u60F3\u83B7\u53D6\u8FD9\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>close()</code>\u6765\u5173\u95ED\u5904\u4E8E<code>LISTEN</code>\u72B6\u6001\u7684<code>sockfd</code>\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u907F\u514D\u6709\u66F4\u591A\u7684\u5BA2\u6237\u7AEF\u8FDE\u63A5\u5230<code>3490</code>\u8FD9\u4E2A\u7AEF\u53E3\u4E0A\u4E86\u3002</p><h3 id="_6-7-send-and-recv-\u2014\u8DDF\u6211\u5520\u5520\u5427-\u5B9D\u513F" tabindex="-1"><a class="header-anchor" href="#_6-7-send-and-recv-\u2014\u8DDF\u6211\u5520\u5520\u5427-\u5B9D\u513F" aria-hidden="true">#</a> 6.7. send() and recv()\u2014\u8DDF\u6211\u5520\u5520\u5427\uFF0C\u5B9D\u513F!</h3><p><code>send()</code>\u548C<code>recv()</code>\u4E24\u4E2A\u51FD\u6570\u662F\u670D\u52A1\u7AEF\u548C\u5BA2\u6237\u7AEF\u901A\u8FC7<code>stream socket</code>\u6216\u8005\u662F<code>connected datagram socket</code>\u7528\u6765\u901A\u4FE1\u7684\u3002\u5982\u679C\u4F60\u60F3\u4F7F\u7528\u5E38\u89C4\u7684<code>unconnected datagram socket</code>\uFF0C\u4F60\u9700\u8981\u53C2\u8003\u4E0B\u6587\u7684<code>sendto()</code>\u548C<code>recvfrom()</code>\u4E00\u8282\u4E86\u3002</p><p><code>send()</code>\u7684\u58F0\u660E\u957F\u8FD9\u6837\u513F\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>msg<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>sockfd</code>\u662F\u4E00\u4E2A\u4F60\u60F3\u53D1\u9001\u6570\u636E\u8FC7\u53BB\u7684<code>socket descriptor</code>\uFF0C\u8FD9\u4E2A<code>socket descriptor</code>\u53EF\u80FD\u662F<code>socket()</code>\u8FD4\u56DE\u7684\uFF0C\u4E5F\u53EF\u80FD\u662F\u901A\u8FC7<code>accept()</code>\u5F97\u5230\u7684\u3002</p><p><code>msg</code>\u662F\u6307\u5411\u53D1\u60F3\u53D1\u9001\u7684\u6570\u636E\u7684\u6307\u9488\uFF0C<code>len</code>\u662F\u6570\u636E\u7684\u5B57\u8282\u957F\u5EA6\u3002\u81F3\u4E8E<code>flags</code>\uFF0C\u4F60\u5C31\u76F4\u63A5\u8BBE\u7F6E\u6210<code>0</code>\u5C31\u5B8C\u4E86\uFF08\u66F4\u591A\u7684\u7EC6\u8282\u53C2\u89C1\u540E\u6587\u7684<code>send()</code>\u624B\u518C\uFF0CPS\uFF1A\u8FD8\u6CA1\u7FFB\u8BD1\u5230\u90A3\u91CC\uFF09\u3002</p><p>\u4E0A\u4F8B\u5B50\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> <span class="token operator">*</span>msg <span class="token operator">=</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> len<span class="token punctuation">,</span> bytes_sent<span class="token punctuation">;</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
bytes_sent <span class="token operator">=</span> <span class="token function">send</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> len<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>send()</code>\u7684\u8FD4\u56DE\u503C\u8868\u793A\u5B9E\u9645\u53D1\u9001\u6570\u636E\u7684\u5B57\u8282\u6570\uFF0C\u8FD9\u4E2A\u6570\u53EF\u80FD\u6BD4\u4F60\u8BBE\u7F6E\u7684\u60F3\u53D1\u9001\u7684\u6570\u636E\u957F\u5EA6<code>len</code>\u8981\u5C0F\u3002\u4E8B\u60C5\u5C31\u662F\u8FD9\u4E48\u5947\u602A\uFF0C\u660E\u660E\u4F60\u60F3\u8BA9\u51FD\u6570\u53D1\u9001\u6240\u6709\u7684\u6570\u636E\uFF0C\u5B83\u5374\u505A\u4E0D\u5230\uFF0C\u5B83\u53EA\u80FD\u5C3D\u529B\u628A\u80FD\u53D1\u9001\u7684\u6570\u636E\u90FD\u53D1\u9001\u51FA\u53BB\uFF0C\u4F46\u662F\u5B83\u4E0D\u4F1A\u81EA\u52A8\u53D1\u9001\u5269\u4E0B\u7684\u6570\u636E\u3002</p><p>\u56E0\u6B64\uFF0C\u5982\u679C<code>send()</code>\u8FD4\u56DE\u7684\u503C\u5C0F\u4E8E<code>len</code>\u7684\u8BDD\uFF0C\u5C31\u9700\u8981\u7531\u4F60\u6765\u51B3\u5B9A\u662F\u4E0D\u662F\u8981\u53D1\u9001\u5269\u4E0B\u7684\u6570\u636E\u4E86\u3002\u4E5F\u5E76\u975E\u6BCF\u6B21\u90FD\u8FD9\u6837\uFF0C\u5982\u679C\u6570\u636E\u5305\u5F88\u5C0F\uFF08\u5C0F\u4E8E<code>1K</code>\u6216\u66F4\u5C0F\uFF09\uFF0C<code>send()</code><strong>\u53EF\u80FD</strong>\u4F1A\u4E00\u4E0B\u5B50\u628A\u6240\u6709\u6570\u636E\u90FD\u53D1\u51FA\u53BB\u3002</p><p>\u518D\u5F3A\u8C03\u4E00\u904D\uFF0C<code>send()</code>\u5F02\u5E38\u7684\u8BDD\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u4FEE\u6539<code>errno</code>\u8FD9\u4E2A\u5168\u5C40\u53D8\u91CF\u3002</p><p><code>recv()</code>\u8FD9\u4E2A\u51FD\u6570\u5728\u5F88\u591A\u65B9\u9762\u548C<code>send()</code>\u7C7B\u4F3C\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">recv</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>sockfd</code>\u662F\u4F60\u60F3\u4ECE\u4E2D\u8BFB\u53D6\u6570\u636E\u7684<code>socket descriptor</code>\uFF0C<code>buf</code>\u662F\u5B58\u50A8\u4F60\u8BFB\u53D6\u7684\u6570\u636E\u7684\u7F13\u51B2\u533A\uFF0C<code>len</code>\u662F\u7F13\u51B2\u533A\u7684\u6700\u5927\u957F\u5EA6\uFF0C<code>flags</code>\u8FD8\u662F\u76F4\u63A5\u8BBE\u7F6E\u6210<code>0</code>\u5C31\u884C\uFF08\u66F4\u591A\u7684\u7EC6\u8282\u53C2\u89C1\u4E4B\u540E\u7684<code>recv()</code>\u624B\u518C\uFF0CPS\uFF1A\u8FD8\u6CA1\u7FFB\u8BD1\u5230\u90A3\u91CC\uFF09\u3002</p><p><code>recv()</code>\u7684\u8FD4\u56DE\u503C\u8868\u793A\u5B9E\u9645\u8BFB\u5230\u7F13\u51B2\u533A\u7684\u5B57\u8282\u6570\uFF0C\u5F02\u5E38\u7684\u8BDD\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u4FEE\u6539<code>errno</code>\u8FD9\u4E2A\u5168\u5C40\u53D8\u91CF\u3002</p><p>\u6CE8\u610F\uFF01<code>recv()</code>\u7684\u8FD4\u56DE\u503C\u53EF\u4EE5\u662F<code>0</code>\uFF0C\u662F<code>0</code>\u610F\u5473\u7740\u5BF9\u9762\u5173\u95ED\u4E86\u4E0E\u4F60\u7684\u8FDE\u63A5\uFF0C\u8FD4\u56DE<code>0</code>\u662F\u4E3A\u4E86\u8BA9\u4F60\u77E5\u9053\u8FD9\u56DE\u4E8B\u513F\u3002</p><p>\u5230\u8FD9\u5C31\u7ED3\u675F\u4E86\uFF0C\u5F88\u7B80\u5355\u5BF9\u5427\u3002\u4F60\u73B0\u5728\u53EF\u4EE5\u901A\u8FC7<code>stream socket</code>\u8FDB\u884C\u5F80\u8FD4\u6570\u636E\u5904\u7406\u4E86\u3002</p><p>\u606D\u559C\u4F60\uFF0C\u6B63\u5F0F\u6210\u4E3A\u4E00\u540DUNIX\u7F51\u7EDC\u7F16\u7A0B\u8BBE\u8BA1\u5E08\uFF01</p><h3 id="_6-8-sendto-and-recvfrom-\u2014\u7528dgram\u98CE\u683C\u8DDF\u6211\u8BF4\u8BDD" tabindex="-1"><a class="header-anchor" href="#_6-8-sendto-and-recvfrom-\u2014\u7528dgram\u98CE\u683C\u8DDF\u6211\u8BF4\u8BDD" aria-hidden="true">#</a> 6.8. sendto() and recvfrom()\u2014\u7528DGRAM\u98CE\u683C\u8DDF\u6211\u8BF4\u8BDD</h3><p><code>datagram socket</code>\u5728\u53D1\u9001\u6570\u636E\u6570\u636E\u4E4B\u524D\u4E0D\u9700\u8981\u5EFA\u7ACB\u548C\u5BF9\u65B9\u7684\u8FDE\u63A5\uFF0C\u4F46\u662F\u5728\u53D1\u9001\u6570\u636E\u4E4B\u524D\u6211\u4EEC\u8D77\u7801\u5F97\u628A\u76EE\u7684\u5730\u5740\u7ED9\u51C6\u5907\u597D\u3002</p><p>\u770B\u4E00\u4E0B<code>sendto()</code>\u8FD9\u4E2A\u51FD\u6570\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">sendto</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>msg<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span>
           <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>to<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> tolen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u540E\u8FB9\u4E24\u4E2A\u53C2\u6570\uFF0C\u5269\u4E0B\u7684\u53C2\u6570\u548C<code>send()</code>\u51FD\u6570\u57FA\u672C\u4FDD\u6301\u4E00\u81F4\uFF0C\u5C31\u4E0D\u518D\u4ECB\u7ECD\u4E86\u3002</p><p><code>to</code>\u662F\u4E00\u4E2A\u6307\u5411 <code>struct sockaddr</code>\uFF08\u4E5F\u53EF\u80FD\u662F\u88AB\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u6210\u7684 <code>struct sockaddr_in</code> \u3001 <code>struct sockaddr_in6</code> \u6216\u8005 <code>struct sockaddr_storage</code>\u7ED3\u6784 \uFF09\u7684\u6307\u9488\uFF0C\u8FD9\u4E2Astruct\u4E2D\u5305\u542B\u4E86\u76EE\u7684IP\u5730\u5740\u548C\u7AEF\u53E3\u53F7\u3002<code>tolen</code>\u662F\u4E00\u4E2A<code>int</code>\u53D8\u91CF\uFF0C\u53EF\u4EE5\u7B80\u5355\u5730\u8BBE\u7F6E\u4E3A<code>sizeof *to</code>\u6216<code>sizeof(struct sockaddr_storage)</code>\u3002</p><p>\u60F3\u5F97\u5230\u5305\u542B\u76EE\u7684\u5730\u5740\u7684\u8FD9\u4E2A\u6570\u636E\u7ED3\u6784\uFF0C\u4F60\u9700\u8981\u901A\u8FC7\u8C03\u7528 <code>getaddrinfo()</code>\u6216\u8005\u4E0B\u6587\u7684 <code>recvfrom()</code>\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u624B\u52A8\u5C01\u88C5\u3002</p><p>\u7C7B\u4F3C<code>send()</code>\uFF0C<code>sendto()</code>\u7684\u8FD4\u56DE\u503C\u8868\u793A\u7684\u4E5F\u662F\u5B9E\u9645\u53D1\u9001\u5B57\u8282\u6570\uFF0C\u800C\u4E14\u8FD9\u4E2A\u6570\u53EF\u80FD\u6BD4\u4F60\u60F3\u53D1\u9001\u7684\u5927\u5C0F\u8981\u5C0F\u3002\u6267\u884C\u5F02\u5E38\u5C31\u8FD4\u56DE<code>-1</code>\u3002</p><p><code>recvfrom()</code>\u548C<code>recv()</code>\u5DEE\u4E0D\u591A\uFF0C<code>recvfrom()</code>\u8BED\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">recvfrom</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span>
             <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>from<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>fromlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u770B\uFF0C\u662F\u4E0D\u662F\u9664\u4E86\u6700\u540E\u4E24\u4E2A\u53C2\u6570\u4E4B\u5916\u5176\u4ED6\u5DEE\u4E0D\u591A\u554A\u3002<code>from</code>\u662F\u4E00\u4E2A\u6307\u5411\u672C\u5730\u7684<code>struct sockaddr_storage</code>\u7ED3\u6784\u7684\u6307\u9488\uFF0C\u5176\u4E2D\u4FDD\u5B58\u4E86\u6570\u636E\u5305\u6765\u6E90\u4E3B\u673A\u7684IP\u5730\u5740\u548C\u7AEF\u53E3\u3002<code>fromlen</code>\u662F\u4E00\u4E2A\u6574\u6570\u7C7B\u578B\u6307\u9488\uFF0C\u8FD9\u4E2A\u6574\u6570\u5E94\u8BE5\u88AB\u521D\u59CB\u5316\u4E3A <code>sizeof *from</code> \u6216\u8005 <code>sizeof(struct sockaddr_storage)</code>\u3002<code>recvfrom()</code>\u51FD\u6570\u8C03\u7528\u5B8C\u6210\u4E4B\u540E\uFF0C<code>fromlen</code>\u4FDD\u5B58\u7684\u662F\u5B9E\u9645\u5B58\u50A8\u5728<code>from</code>\u7ED3\u6784\u4E2D\u7684\u5730\u5740\u957F\u5EA6\u3002</p><p><code>recvfrom()</code>\u7684\u8FD4\u56DE\u503C\u8868\u793A\u5B9E\u9645\u8BFB\u53D6\u5230\u7684\u6570\u636E\u5B57\u8282\u6570\uFF0C\u5F02\u5E38\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u8BBE\u7F6E<code>errno</code>\u503C\u3002</p><p>\u6709\u4E2A\u95EE\u9898\u554A\uFF0C\u4E3A\u4EC0\u4E48\u6211\u4E0A\u6587\u8BF4<code>from</code>\u662F\u4E00\u4E2A\u6307\u5411<code>struct sockaddr_storage</code>\u7684\u7ED3\u6784\u554A\uFF0C\u4E3A\u4EC0\u4E48\u4E0D\u662F <code>struct sockaddr_in</code>\uFF1F\u56E0\u4E3A\u6211\u4EEC\u4E0D\u60F3\u5728IPv4\u6216\u8005IPv6\u4E00\u68F5\u6811\u4E0A\u540A\u6B7B\uFF0C\u800C<code>sockaddr_storage</code>\u6709\u8DB3\u591F\u7684\u5B58\u50A8\u7A7A\u95F4\u8BA9\u6211\u4EEC\u6765\u81EA\u7531\u9009\u62E9IPv4\u8FD8\u662FIPv6\u5730\u5740\u3002</p><p>\u4F60\u53EF\u80FD\u53C8\u4F1A\u63D0\u51FA\u4E00\u4E2A\u95EE\u9898\uFF0C\u4E3A\u4EC0\u4E48\u4E0D\u628A <code>struct sockaddr</code> \u8BBE\u8BA1\u7684\u8DB3\u591F\u5BB9\u7EB3\u4EFB\u4F55\u5730\u5740\u5462\uFF0C\u8FD9\u6837\u4E0D\u5C31\u4E0D\u7528\u6765\u56DE\u5F3A\u8F6C\u4E86\u561B\u3002\u8FD9\u90FD\u662F\u5386\u53F2\u539F\u56E0\u4E86\uFF0C\u5F53\u65F6\u4E5F\u6CA1\u60F3\u5230IPv4\u7684\u5730\u5740\u4E0D\u591F\u7528\uFF0C\u6240\u4EE5\u53EA\u80FD\u65B0\u8BBE\u8BA1\u4E00\u4E2A<code>struct sockaddr_storage</code> \u4E86\u3002</p><p>\u8C28\u8BB0\uFF0C\u5982\u679C\u4F60\u5BF9<code>datagram socket</code>\u4F7F\u7528<code>connect()</code>\uFF0C\u4F60\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528<code>send()</code>\u548C<code>recv()</code>\u3002<code>socket</code>\u672C\u8EAB\u4ECD\u7136\u662F<code>datagram socket</code>\uFF0C\u5E76\u4E14\u534F\u8BAE\u7528\u7684\u4E5F\u662F<code>UDP</code>\uFF0C\u53EA\u4E0D\u8FC7<code>socket</code>\u63A5\u53E3\u4F1A\u81EA\u52A8\u5E2E\u4F60\u6DFB\u52A0\u76EE\u7684\u548C\u6765\u6E90\u4FE1\u606F\u3002</p><h3 id="_6-9-close-and-shutdown-\u2014\u6EDA\u728A\u5B50" tabindex="-1"><a class="header-anchor" href="#_6-9-close-and-shutdown-\u2014\u6EDA\u728A\u5B50" aria-hidden="true">#</a> 6.9. close() and shutdown()\u2014\u6EDA\u728A\u5B50\uFF01</h3><p>\u5F53\u4F60\u73A9\u513F\u591F\u4E86<code>send()</code>\u548C<code>recv()</code>\uFF0C\u4F60\u53EF\u80FD\u60F3\u5173\u95ED\u4F60\u7684<code>socket descriptor</code>\u8FDE\u63A5\u4E86\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u5F88\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u8C03\u7528<code>close()</code>\u51FD\u6570\u5C31\u53EF\u4EE5\u4E86\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u5C06\u907F\u514D<code>sockfd</code>\u8FDB\u884C\u66F4\u591A\u7684\u8BFB\u5199\u64CD\u4F5C\uFF0C\u4EFB\u4F55\u60F3\u8981\u5BF9\u8FD9\u4E2A<code>socket</code>\u8FDB\u884C\u8BFB\u5199\u7684\u64CD\u4F5C\u90FD\u4F1A\u62A5\u9519\u3002</p><p>\u5982\u679C\u4F60\u60F3\u5BF9<code>socket</code>\u5173\u95ED\u7684\u59FF\u52BF\u591A\u4E00\u70B9\u63A7\u5236\uFF0C\u90A3\u4F60\u5E94\u8BE5\u4F7F\u7528\u7684\u662F<code>shutdown()</code>\u51FD\u6570\uFF0C\u5B83\u5141\u8BB8\u9009\u62E9\u6027\u5730\u5207\u65AD\u5355\u5411\u8FDE\u63A5\u6216\u8005\u53CC\u5411\u8FDE\u63A5\uFF08\u8FD9\u4E00\u70B9\u548C<code>close()</code>\u4E00\u6837\uFF09\u3002\u8BED\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">int</span> how<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>sockfd</code>\u8868\u793A\u4F60\u60F3\u5173\u95ED\u7684<code>socket file descriptor</code>\uFF0C<code>how</code>\u7684\u53C2\u6570\u4EE5\u53CA\u542B\u4E49\u89C1\u4E0B\u8868\uFF1A</p><table><thead><tr><th style="text-align:center;">how\u7684\u503C</th><th style="text-align:center;">\u542B\u4E49</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">\u7981\u6B62\u63A5\u6536\u6570\u636E</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">\u7981\u6B62\u53D1\u9001\u6570\u636E</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">\u7981\u6B62\u63A5\u6536\u3001\u53D1\u9001\u6570\u636E\uFF08\u548C<code>close()</code>\u76F8\u540C\uFF09</td></tr></tbody></table><p><code>shutdown()</code>\u6210\u529F\u65F6\u8FD4\u56DE<code>0</code>\uFF0C\u5931\u8D25\u65F6\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u8BBE\u7F6E\u5168\u5C40\u53D8\u91CF<code>errno</code>\u3002</p><p>\u5982\u679C\u4F60\u5728<code>unconnected datagram socket</code>\u4E0A\u4F7F\u7528<code>shutdown()</code>\uFF0C\u5B83\u53EA\u4F1A\u5355\u7EAF\u5730\u8BA9<code>socket</code>\u65E0\u6CD5\u7EE7\u7EED\u8FDB\u884C<code>send()</code>\u548C<code>recv()</code>\u8C03\u7528\u3002\u5982\u679C\u4F60\u60F3\u8BA9<code>shutdown()</code>\u53D1\u6325\u539F\u672C\u7684\u4F5C\u7528\uFF0C\u90A3\u4E48\u4F60\u5E94\u8BE5\u628A\u5B83\u7528\u5728\u4F7F\u7528\u4E86<code>connect()</code>\u51FD\u6570\u7684<code>datagram socket</code>\u8EAB\u4E0A\u3002</p><p>\u9700\u8981\u5F3A\u8C03\u7684\u662F\uFF0C<code>shutdown()</code>\u5E76\u4E0D\u4F1A\u5B9E\u9645\u5173\u95ED<code>file descriptor</code>\uFF0C\u53EA\u662F\u6539\u53D8\u4E86\u53EF\u7528\u72B6\u6001\u800C\u5DF2\u3002\u60F3\u8981\u771F\u6B63\u91CA\u653E<code>file descriptor</code>\uFF0C\u4F60\u8FD8\u662F\u5F97\u8C03\u7528<code>close()</code>\u3002</p><p>\u6CA1\u4E86\u3002</p><p>\u300C\u5BF9\u4E86\uFF0C\u5982\u679C\u4F60\u7528\u7684\u662F<code>Windows</code>\u548C<code>Winsock</code>\uFF0C\u4F60\u9700\u8981\u7528\u7684\u662F<code>closesocket()</code>\uFF0C\u800C\u4E0D\u662F<code>close()</code>\uFF0C\u8C28\u8BB0\uFF01\u300D</p><h3 id="_6-10-getpeername-\u2014\u4F60\u54EA\u4F4D" tabindex="-1"><a class="header-anchor" href="#_6-10-getpeername-\u2014\u4F60\u54EA\u4F4D" aria-hidden="true">#</a> 6.10. getpeername()\u2014\u4F60\u54EA\u4F4D?</h3><p>\u8FD9\u4E2A\u51FD\u6570\u6709\u70B9\u7B80\u5355\u3002</p><p>\u7B80\u5355\u5230\u6211\u90FD\u4E0D\u60F3\u5355\u72EC\u628A\u5B83\u5217\u51FA\u6765\uFF0C\u4F46\u662F\u6211\u8FD8\u662F\u5217\u51FA\u6765\u4E86\u3002</p><p><code>getpeername()</code>\u4F1A\u544A\u8BC9\u4F60\u53E6\u4E00\u7AEF\u8FDE\u63A5\u7684<code>stream socket</code>\u662F\u8C01\u3002\u8BED\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
    
<span class="token keyword">int</span> <span class="token function">getpeername</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sockfd</code>\u662F\u4E00\u4E2A\u5DF2\u8FDE\u63A5\u7684<code>stream socket</code>\uFF1B<code>addr</code>\u662F\u4E00\u4E2A\u6307\u5411<code>struct sockaddr</code> (\u6216\u8005 <code>struct sockaddr_in</code>) \u7ED3\u6784\u7684\u6307\u9488\uFF0C\u7ED3\u6784\u4E2D\u5B58\u50A8\u4E86\u8FDE\u63A5\u7684\u53E6\u4E00\u5934\u513F\u7684\u4FE1\u606F\uFF1B<code>addrlen</code>\u662F\u4E00\u4E2A<code>int</code>\u578B\u6307\u9488\uFF0C\u8FD9\u4E2Aint\u53D8\u91CF\u5E94\u8BE5\u88AB\u521D\u59CB\u5316\u4E3A <code>sizeof *addr</code> \u6216\u8005 <code>sizeof(struct sockaddr)</code>\u3002</p><p>\u51FD\u6570\u5F02\u5E38\u65F6\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u8BBE\u7F6E\u5168\u5C40\u53D8\u91CF<code>errno</code>\u3002</p><p>\u4E00\u65E6\u4F60\u83B7\u53D6\u4E86\u5BF9\u9762\u7684\u5730\u5740\uFF0C\u4F60\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>inet_ntop()</code>, <code>getnameinfo()</code>, \u6216\u8005 <code>gethostbyaddr()</code> \u6253\u5370\u51FA\u6765\u6216\u8005\u83B7\u53D6\u66F4\u591A\u4FE1\u606F\uFF08\u4F46\u662F\u522B\u5984\u60F3\u80FD\u83B7\u53D6\u5230\u522B\u4EBA\u7684\u767B\u5F55\u540D\u54E6\uFF5E\uFF09\u3002</p><h3 id="_6-11-gethostname-\u2014\u6211\u662F\u8C01" tabindex="-1"><a class="header-anchor" href="#_6-11-gethostname-\u2014\u6211\u662F\u8C01" aria-hidden="true">#</a> 6.11. gethostname()\u2014\u6211\u662F\u8C01?</h3><p>\u8FD9\u8D27\u6BD4 <code>getpeername()</code> \u8FD8\u7B80\u5355\u3002</p><p><code>gethostname()</code>\u4F1A\u8FD4\u56DE\u7A0B\u5E8F\u6240\u6709\u7684\u4E3B\u673A\u540D\u79F0\uFF0C\u8FD9\u4E2A\u4E3B\u673A\u540D\u79F0\u53EF\u4EE5\u7EE7\u7EED\u7528\u5728 <code>gethostbyname()</code>\u4E2D\u6765\u786E\u5B9A\u4E3B\u673A\u7684IP\u5730\u5740\u3002</p><p>\u8FD8\u80FD\u73A9\u5F97\u66F4\u82B1\u4E00\u70B9\u513F\u5417\uFF1F</p><p>\u5F53\u7136\u6709\uFF0C\u4E0D\u8FC7\u8FD9\u5C31\u548Csocket\u7F16\u7A0B\u5173\u7CFB\u4E0D\u5927\u4E86\uFF0C\u8FD8\u662F\u7B80\u5355\u4ECB\u7ECD\u4E00\u4E0B\u4F7F\u7528\u65B9\u6CD5\u5427\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">gethostname</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>hostname<span class="token punctuation">,</span> <span class="token class-name">size_t</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53C2\u6570\u5F88\u7B80\u5355\uFF1A<code>hostname</code>\u662F\u4E00\u4E2A\u5B57\u7B26\u6307\u9488\uFF0C\u5C06\u5B58\u50A8\u8FD4\u56DE\u7684\u4E3B\u673A\u540D\u79F0\uFF08hostname\uFF09\uFF1B<code>size</code>\u662F\u8FD4\u56DE\u7684\u4E3B\u673A\u540D\u79F0\u7684\u5B57\u8282\u957F\u5EA6\u3002</p><p>\u51FD\u6570\u5728\u6267\u884C\u6210\u529F\u662F\u8FD4\u56DE<code>0</code>\uFF0C\u9519\u8BEF\u65F6\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E00\u6837\u4F1A\u8BBE\u7F6E<code>errno</code>\u3002</p><h2 id="_7-client-server\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_7-client-server\u57FA\u7840" aria-hidden="true">#</a> 7. Client-Server\u57FA\u7840</h2><p>\u5B9D\u513F\uFF0C\u4F60\u5F97\u627F\u8BA4\uFF0C\u8FD9\u662F\u4E2A<code>Client-Server</code>\u7684\u4E16\u754C\u3002</p><p>\u7F51\u7EDC\u4E0A\u51E0\u4E4E\u6240\u6709\u7684\u5185\u5BB9\u672C\u8D28\u4E0A\u90FD\u662FClient\u8FDB\u7A0B\u4E0E\`erver\u8FDB\u7A0B\u4E4B\u95F4\u7684\u4F1A\u8BDD\uFF0C\u53CD\u4E4B\u4EA6\u7136\u3002</p><p>\u62FFtelnet\u4E3E\u4E2A\u4F8B\u5B50\u3002\u5F53\u4F60\u4F7F\u7528<code>telnet</code>\uFF08Client\u7AEF\uFF09\u8FDE\u63A5\u4E0A\u8FDC\u7A0B\u4E3B\u673A\u7684<code>23</code>\u7AEF\u53E3\uFF0C\u8FDC\u7A0B\u4E3B\u673A\u4E0A\u76D1\u542C\u8BE5\u7AEF\u53E3\u7684\u7A0B\u5E8F\uFF08\u53EB<code>telnetd</code>\uFF0C\u5C31\u662F<code>telnet</code>\u7684Server\u7AEF\uFF09\u5C31\u52A8\u4E86\u8D77\u6765\u3002\u5B83\u4F1A\u5904\u7406\u5230\u6765\u7684<code>telnet</code>\u8FDE\u63A5\uFF0C\u5E76\u4E3A\u4F60\u8BBE\u7F6E\u597D\u767B\u9646\u63D0\u793A\u4FE1\u606F\u7B49\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-10-15-130214.png" alt="Client-Server\u4EA4\u4E92" loading="lazy"></p><p>\u4E0A\u56FE\u5F88\u5F62\u8C61\u5730\u8868\u8FBE\u4E86Client\u548CServer\u4E4B\u95F4\u7684\u4FE1\u606F\u4EA4\u4E92\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<code>Client-Server</code>\u8FD9\u4E00\u7EC4\u642D\u6863\u53EF\u4EE5\u4F7F\u7528 <code>SOCK_STREAM</code>\u3001 <code>SOCK_DGRAM</code>\u6216\u5176\u4ED6\u4EFB\u4F55\u534F\u8BAE\uFF08\u53EA\u8981\u53CC\u65B9\u4F7F\u7528\u7684\u534F\u8BAE\u4E00\u81F4\u5373\u53EF\uFF09\u3002</p><p><code>telnet</code>/<code>telnetd</code>, <code>ftp</code>/<code>ftpd</code>, \u4EE5\u53CA <code>Firefox</code>/<code>Apache</code>\u7B49\u90FD\u662F<code>Client-Server</code>\u6A21\u5F0F\u975E\u5E38\u597D\u7684\u8303\u4F8B\u3002\u6BD4\u5982\uFF0C\u6BCF\u6B21\u4F60\u4F7F\u7528<code>ftp</code>\u7684\u65F6\u5019\uFF0C\u5728\u8FDC\u7A0B\u90FD\u4F1A\u4E00\u4E2A<code>ftpd</code>\u7A0B\u5E8F\u4E3A\u4F60\u670D\u52A1\u3002</p><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4E00\u53F0\u4E3B\u673A\u53EA\u4F1A\u6709\u4E00\u4E2AServer\u7A0B\u5E8F\uFF08\u8FD9\u91CC\u6307\u7684\u662F\u5904\u7406\u540C\u4E00\u529F\u80FD\u7684\u670D\u52A1\u7AEF\uFF09\uFF0C\u8BE5\u7A0B\u5E8F\u4F1A\u4F7F\u7528<code>fork()</code>\u6765\u5904\u7406\u591A\u4E2AClient\u3002\u57FA\u672C\u7684\u6D41\u7A0B\u662F\u8FD9\u6837\u7684\uFF1AServer\u4F1A\u7B49\u5F85\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u7136\u540E<code>accept()</code>\u8BE5\u8FDE\u63A5\uFF0C\u518D<code>fork()</code>\u51FA\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u6765\u5904\u7406\u8BE5\u8FDE\u63A5\u3002</p><p>\u8FD9\u5C31\u662F\u6211\u4EEC\u4E0B\u4E00\u8282\u7684Server\u7AEF\u7A0B\u5E8F\u505A\u7684\u4E8B\u60C5\u3002</p><h3 id="_7-1-\u4E00\u4E2A\u7B80\u5355\u7684stream-server" tabindex="-1"><a class="header-anchor" href="#_7-1-\u4E00\u4E2A\u7B80\u5355\u7684stream-server" aria-hidden="true">#</a> 7.1. \u4E00\u4E2A\u7B80\u5355\u7684stream server</h3><p>\u8FD9\u4E2AServer\u7AEF\u7A0B\u5E8F\u505A\u7684\u5DE5\u4F5C\u5C31\u662F\u628A \u201C<code>Hello, world!</code>\u201D\u5B57\u7B26\u4E32\u901A\u8FC7<code>stream connection</code> \u53D1\u9001\u7ED9Client\u3002</p><p>\u4F60\u5982\u679C\u8981\u6D4B\u8BD5\u8FD9\u4E2AServer\u7A0B\u5E8F\uFF0C\u4F60\u9700\u8981\u5728\u4E00\u8D77\u547D\u4EE4\u884C\u7A97\u53E3\u4E2D\u8FD0\u884C\u8FD9\u4E2AServer\u7A0B\u5E8F\uFF0C\u7136\u540E\u5728\u53E6\u4E00\u4E2A\u547D\u4EE4\u884C\u7A97\u53E3\u4E2D\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ telnet remotehostname <span class="token number">3490</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>remotehostname</code>\u6307\u7684\u662F\u8FD0\u884C\u7A0B\u5E8F\u7684\u4E3B\u673A\u540D\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2AIP\u5730\u5740\u3002</p><p>Server\u7AEF\u7A0B\u5E8F\u6765\u55BD\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** server.c -- a stream socket server demo
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;signal.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PORT</span> <span class="token string">&quot;3490&quot;</span>  <span class="token comment">// the port users will be connecting to</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BACKLOG</span> <span class="token expression"><span class="token number">10</span>   </span><span class="token comment">// how many pending connections queue will hold</span></span>

<span class="token keyword">void</span> <span class="token function">sigchld_handler</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// waitpid() might overwrite errno, so we save and restore it:</span>
    <span class="token keyword">int</span> saved_errno <span class="token operator">=</span> errno<span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">waitpid</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> WNOHANG<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    errno <span class="token operator">=</span> saved_errno<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// get sockaddr, IPv4 or IPv6:</span>
<span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>sa<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sa<span class="token operator">-&gt;</span>sa_family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> new_fd<span class="token punctuation">;</span>  <span class="token comment">// listen on sock_fd, new connection on new_fd</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>servinfo<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> their_addr<span class="token punctuation">;</span> <span class="token comment">// connector&#39;s address information</span>
    <span class="token class-name">socklen_t</span> sin_size<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sigaction</span> sa<span class="token punctuation">;</span>
    <span class="token keyword">int</span> yes<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> s<span class="token punctuation">[</span>INET6_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> rv<span class="token punctuation">;</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span> <span class="token comment">// use my IP</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> PORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// loop through all the results and bind to the first we can</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> servinfo<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span>
                p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;server: socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">setsockopt</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> SOL_SOCKET<span class="token punctuation">,</span> SO_REUSEADDR<span class="token punctuation">,</span> <span class="token operator">&amp;</span>yes<span class="token punctuation">,</span>
                <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;setsockopt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;server: bind&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// all done with this structure</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;server: failed to bind\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> BACKLOG<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;listen&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    sa<span class="token punctuation">.</span>sa_handler <span class="token operator">=</span> sigchld_handler<span class="token punctuation">;</span> <span class="token comment">// reap all dead processes</span>
    <span class="token function">sigemptyset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sa<span class="token punctuation">.</span>sa_mask<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sa<span class="token punctuation">.</span>sa_flags <span class="token operator">=</span> SA_RESTART<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sigaction</span><span class="token punctuation">(</span>SIGCHLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sa<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;sigaction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;server: waiting for connections...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// main accept() loop</span>
        sin_size <span class="token operator">=</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">;</span>
        new_fd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sin_size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>new_fd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">inet_ntop</span><span class="token punctuation">(</span>their_addr<span class="token punctuation">.</span>ss_family<span class="token punctuation">,</span>
            <span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">)</span><span class="token punctuation">,</span>
            s<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;server: got connection from %s\\n&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// this is the child process</span>
            <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// child doesn&#39;t need the listener</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">send</span><span class="token punctuation">(</span>new_fd<span class="token punctuation">,</span> <span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;send&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">close</span><span class="token punctuation">(</span>new_fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">close</span><span class="token punctuation">(</span>new_fd<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// parent doesn&#39;t need this</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u8BA9\u4EE3\u7801\u770B\u6765\u8D77\u66F4\u6E05\u6670\uFF08\u8D77\u7801\u6211\u662F\u8FD9\u4E48\u8BA4\u4E3A\u7684\uFF09\uFF0C\u6211\u628A\u6240\u6709\u4EE3\u7801\u90FD\u653E\u5728\u4E86\u4E00\u4E2A<code>main()</code>\u51FD\u6570\u4E2D\u3002\u5982\u679C\u4F60\u60F3\u628A\u5B83\u5206\u6210\u591A\u4E2A\u66F4\u5C0F\u7684\u51FD\u6570\uFF0C\u5C3D\u7BA1\u5206\u5C31\u597D\u4E86\u3002</p><p>\u53E6\u5916\uFF0C\u4F60\u53EF\u80FD\u5BF9 <code>sigaction()</code> \u8FD9\u4E2A\u51FD\u6570\u6709\u70B9\u964C\u751F\uFF0C\u8FD9\u4E2A\u51FD\u6570\u662F\u7528\u6765\u5904\u7406\u50F5\u5C38\u8FDB\u7A0B\uFF08zombie processes\uFF09\u7684\u3002</p><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E0B\u8282\u8BB2\u5230\u7684Client\u7AEF\u4EE3\u7801\u6765\u83B7\u53D6\u8FD9\u4E2A\u7A0B\u5E8F\u53D1\u9001\u7684\u6D88\u606F\u3002</p><h3 id="_7-2-\u4E00\u4E2A\u7B80\u5355\u7684stream-client" tabindex="-1"><a class="header-anchor" href="#_7-2-\u4E00\u4E2A\u7B80\u5355\u7684stream-client" aria-hidden="true">#</a> 7.2. \u4E00\u4E2A\u7B80\u5355\u7684stream client</h3><p>Client\u4EE3\u7801\u6BD4Server\u4EE3\u7801\u8FD8\u8981\u7B80\u5355\u3002</p><p>\u8FD9\u6BB5\u4EE3\u7801\u7684\u529F\u80FD\u5C31\u662F\u8FDE\u63A5\u4F60\u5728\u547D\u4EE4\u884C\u4E2D\u6307\u5B9A\u7684\u4E3B\u673A\u4E0A\u7684<code>3490</code>\u7AEF\u53E3\uFF0C\u83B7\u53D6Server\u7AEF\u53D1\u9001\u7684\u6570\u636E\u3002</p><p>\u4E0A\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** client.c -- a stream socket client demo
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PORT</span> <span class="token string">&quot;3490&quot;</span> <span class="token comment">// the port client will be connecting to </span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXDATASIZE</span> <span class="token expression"><span class="token number">100</span> </span><span class="token comment">// max number of bytes we can get at once </span></span>

<span class="token comment">// get sockaddr, IPv4 or IPv6:</span>
<span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>sa<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sa<span class="token operator">-&gt;</span>sa_family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> numbytes<span class="token punctuation">;</span>  
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span>MAXDATASIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>servinfo<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
    <span class="token keyword">int</span> rv<span class="token punctuation">;</span>
    <span class="token keyword">char</span> s<span class="token punctuation">[</span>INET6_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span><span class="token string">&quot;usage: client hostname\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> PORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// loop through all the results and connect to the first we can</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> servinfo<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span>
                p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;client: socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">connect</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;client: connect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;client: failed to connect\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">inet_ntop</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> <span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span>p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">)</span><span class="token punctuation">,</span>
            s<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;client: connecting to %s\\n&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// all done with this structure</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>numbytes <span class="token operator">=</span> <span class="token function">recv</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> MAXDATASIZE<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;recv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    buf<span class="token punctuation">[</span>numbytes<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;client: received &#39;%s&#39;\\n&quot;</span><span class="token punctuation">,</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884CClient\u7A0B\u5E8F\u4E4B\u524D\uFF0C\u4F60\u9700\u8981\u5148\u8FD0\u884CServer\u7A0B\u5E8F\uFF0C\u5426\u5219\u7684\u8BDD\u4F60\u53EF\u80FD\u4F1A\u6536\u5230 \u201CConnection refused\u201D \u7684\u9519\u8BEF\u63D0\u793A\u3002</p><h3 id="_7-3-datagram-sockets" tabindex="-1"><a class="header-anchor" href="#_7-3-datagram-sockets" aria-hidden="true">#</a> 7.3. Datagram Sockets</h3><p><code>UDP datagram socket</code> \u7684\u57FA\u7840\u6211\u4EEC\u5728<code>sendto()</code>\u548C<code>recvfrom()</code>\u90A3\u4E00\u8282\u7684\u5DF2\u7ECF\u8BB2\u8FC7\u4E86\u3002\u672C\u8282\uFF0C\u6211\u5C06\u7ED9\u51FA\u4E24\u6BB5\u7A0B\u5E8F\uFF1A <code>talker.c</code> \u548C <code>listener.c</code>\u3002</p><p><code>listener.c</code>\u8FD0\u884C\u5728\u4E3B\u673A\u4E0A\u4E00\u76F4\u7B49\u5F85\u7740\u53BB\u5F80<code>4950</code>\u7AEF\u53E3\u7684\u6570\u636E\u5305\u3002<code>talker</code>\u5C06\u7528\u6237\u5728\u547D\u4EE4\u884C\u8F93\u5165\u7684\u6570\u636E\u4ECE\u6307\u5B9A\u7684\u4E3B\u673A\u53D1\u5F80<code>4950</code>\u7AEF\u53E3\u3002</p><p>\u56E0\u4E3A<code>datagram sockets</code>\u662F\u65E0\u8FDE\u63A5\u7684\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u628A\u6570\u636E\u5305\u901A\u8FC7\u4EE5\u592A\u7F51\u53D1\u9001\u51FA\u53BB\u5C31\u884C\uFF0C\u752D\u7BA1\u6210\u529F\u5931\u8D25\u3002</p><p>\u6B64\u5916\uFF0C\u7A0B\u5E8F\u4E2D\u6211\u4EEC\u4EE4Client\u548CServer\u90FD\u4F7F\u7528IPv6\u3002\u8FD9\u6837\u4EE5\u6765\u5C31\u907F\u514D\u4E86Server\u6BB5\u4F7F\u7528IPv6\uFF0C\u800CClient\u4F7F\u7528IPv4\u5BFC\u81F4\u6570\u636E\u4E0D\u4F1A\u88AB\u63A5\u6536\u7684\u8FD9\u79CD\u60C5\u51B5\u3002</p><blockquote><p>\u5B9E\u9645\u4E0A\uFF0C\u5728\u4F7F\u7528<code>TCP stream sockets</code>\u7684\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F9D\u7136\u53EF\u80FD\u4F1A\u78B0\u5230\u5730\u5740\u65CF\u4E0D\u5339\u914D\u7684\u60C5\u51B5\uFF0C\u4F46\u662F\u7531\u4E8E\u6211\u4EEC\u4F1A\u4F7F\u7528<code>connect()</code>\u51FD\u6570\uFF0C\u5982\u679C\u56E0\u4E3A\u5730\u5740\u65CF\u7684\u95EE\u9898\u5BFC\u81F4<code>connect()</code>\u62A5\u9519\uFF0C\u5C31\u7B49\u4E8E\u663E\u5F0F\u63D0\u9192\u6211\u4EEC\u9700\u8981\u6362\u53E6\u4E00\u4E2A\u5730\u5740\u65CF\u4E86\u3002</p></blockquote><p>\u4E0B\u9762\u7ED9\u51FA <code>listener.c</code>\u7684\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** listener.c -- a datagram sockets &quot;server&quot; demo
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MYPORT</span> <span class="token string">&quot;4950&quot;</span>    <span class="token comment">// the port users will be connecting to</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXBUFLEN</span> <span class="token expression"><span class="token number">100</span></span></span>

<span class="token comment">// get sockaddr, IPv4 or IPv6:</span>
<span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>sa<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sa<span class="token operator">-&gt;</span>sa_family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>servinfo<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
    <span class="token keyword">int</span> rv<span class="token punctuation">;</span>
    <span class="token keyword">int</span> numbytes<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> their_addr<span class="token punctuation">;</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span>MAXBUFLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">socklen_t</span> addr_len<span class="token punctuation">;</span>
    <span class="token keyword">char</span> s<span class="token punctuation">[</span>INET6_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_INET6<span class="token punctuation">;</span> <span class="token comment">// set to AF_INET to use IPv4</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_DGRAM<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span> <span class="token comment">// use my IP</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> MYPORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// loop through all the results and bind to the first we can</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> servinfo<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span>
                p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;listener: socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;listener: bind&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;listener: failed to bind socket\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;listener: waiting to recvfrom...\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    addr_len <span class="token operator">=</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>numbytes <span class="token operator">=</span> <span class="token function">recvfrom</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> MAXBUFLEN<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>addr_len<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;recvfrom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;listener: got packet from %s\\n&quot;</span><span class="token punctuation">,</span>
        <span class="token function">inet_ntop</span><span class="token punctuation">(</span>their_addr<span class="token punctuation">.</span>ss_family<span class="token punctuation">,</span>
            <span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">)</span><span class="token punctuation">,</span>
            s<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;listener: packet is %d bytes long\\n&quot;</span><span class="token punctuation">,</span> numbytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    buf<span class="token punctuation">[</span>numbytes<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;listener: packet contains \\&quot;%s\\&quot;\\n&quot;</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u6211\u4EEC\u5728 <code>getaddrinfo()</code> \u65F6\uFF0C\u4F7F\u7528\u4E86 <code>SOCK_DGRAM</code>\u3002\u800C\u4E14\u6211\u4EEC\u6CA1\u6709\u4F7F\u7528 <code>listen()</code> \u6216\u8005 <code>accept()</code>\u51FD\u6570\uFF0C\u8FD9\u662F\u4F7F\u7528<code>unconnected datagram sockets</code>\u7684\u597D\u5904\u4E4B\u4E00\u3002</p><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B<code>talker</code>\u7684\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** talker.c -- a datagram &quot;client&quot; demo
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SERVERPORT</span> <span class="token string">&quot;4950&quot;</span>    <span class="token comment">// the port users will be connecting to</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>servinfo<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
    <span class="token keyword">int</span> rv<span class="token punctuation">;</span>
    <span class="token keyword">int</span> numbytes<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span><span class="token string">&quot;usage: talker hostname message\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_INET6<span class="token punctuation">;</span> <span class="token comment">// set to AF_INET to use IPv4</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_DGRAM<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> SERVERPORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// loop through all the results and make a socket</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> servinfo<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span>
                p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;talker: socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;talker: failed to create socket\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>numbytes <span class="token operator">=</span> <span class="token function">sendto</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
             p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;talker: sendto&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;talker: sent %d bytes to %s\\n&quot;</span><span class="token punctuation">,</span> numbytes<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E9B\u5C31\u662F\u5168\u90E8\u4E86\u3002\u4F60\u5728\u67D0\u53F0\u4E3B\u673A\u4E0A\u6267\u884C<code>listener</code>\uFF0C\u7136\u540E\u5728\u53E6\u4E00\u53F0\u4E3B\u673A\u4E0A\u6267\u884C<code>talker</code>\uFF0C\u89C2\u5BDF\u5B83\u4EEC\u4E4B\u95F4\u7684\u901A\u4FE1\uFF0C\u4F60\u4F1A\u53D1\u73B0\u8FD9\u5F88\u6709\u8DA3\u3002</p><p>\u4F60\u751A\u81F3\u90FD\u53EF\u4EE5\u4E0D\u5148\u6267\u884CServer\uFF01\u53EF\u4EE5\u53EA\u6267\u884C<code>talker</code>\uFF0C<code>talker</code>\u4F1A\u5F88\u5F00\u5FC3\u5730\u5C06\u6570\u636E\u5305\u6254\u5230\u7F51\u7EDC\u4E0A\uFF0C\u5982\u679C\u53E6\u4E00\u6BB5\u6CA1\u6709\u4EBA\u8D1F\u8D23\u7528<code>recvfrom()</code>\u63A5\u6536\uFF0C\u5927\u4E0D\u4E86\u5C31\u662F\u6570\u636E\u5305\u4E22\u4E86\u800C\u5DF2\u3002</p><blockquote><p>\u8C28\u8BB0\uFF1A<code>UDP</code>\u53D1\u9001\u6570\u636E\u5E76\u4E0D\u4F1A\u4FDD\u8BC1\u6570\u636E\u4E00\u5B9A\u4F1A\u9001\u8FBE\u5BF9\u65B9\u3002</p></blockquote><p>\u8FD9\u91CC\u63D0\u4E00\u4E0B\u4E4B\u524D\u63D0\u8FC7\u5F88\u591A\u6B21\u7684\u4E00\u4E2A\u5C0F\u7EC6\u8282\uFF1A<code>connected datagram sockets</code>\uFF0C\u6BD5\u7ADF\u6211\u4EEC\u8FD9\u8282\u8BB2\u7684\u5C31\u662F<code>datagram socket</code>\u561B\u3002</p><p>\u5982\u679C<code>talker</code>\u8C03\u7528\u4E86<code>connect()</code>\u5E76\u4E14\u6307\u5B9A\u4E86<code>listener</code>\u7684\u5730\u5740\uFF0C\u8FD9\u6837\u4E00\u6765\uFF0C<code>talker</code>\u53EA\u80FD\u548C<code>connect()</code>\u6307\u5B9A\u7684\u5730\u5740\u8FDB\u884C\u6570\u636E\u53D1\u9001\u4E0E\u63A5\u6536\u3002\u8FD9\u5C31\u662F<code>connected datagram socket</code>\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u4E0D\u5FC5\u5C40\u9650\u4E8E<code>sendto()</code>\u548C<code>recvfrom()</code>\uFF0C\u76F4\u63A5\u4F7F\u7528<code>send()</code>\u548C<code>recv()</code>\u5C31\u53EF\u4EE5\u4E86\u3002</p><h2 id="_8-\u6280\u672F\u8FDB\u9636" tabindex="-1"><a class="header-anchor" href="#_8-\u6280\u672F\u8FDB\u9636" aria-hidden="true">#</a> 8. \u6280\u672F\u8FDB\u9636</h2><p>\u8FD9\u5E76\u4E0D\u662F\u7279\u522B\u9AD8\u9636\u7684\u77E5\u8BC6\uFF0C\u4F46\u662F\u53EF\u4EE5\u8BA9\u4F60\u8DF3\u8131\u51FA\u4F60\u5DF2\u7ECF\u638C\u63E1\u7684\u57FA\u7840\u77E5\u8BC6\u4E86\u3002\u5982\u679C\u4F60\u4E00\u6B65\u4E00\u6B65\u5B66\u4E60\u5230\u8FD9\u91CC\u4E86\uFF0C\u4F60\u53EF\u4EE5\u8BA4\u4E3A\u4F60\u5DF2\u7ECF\u76F8\u5F53\u7CBE\u901AUnix\u7F51\u7EDC\u7F16\u7A0B\u7684<strong>\u57FA\u7840\u77E5\u8BC6</strong>\u4E86\uFF0C\u606D\u559C\u4F60\u3002</p><p>\u73B0\u5728\u6211\u4EEC\u5C06\u8FDB\u5165\u4E00\u4E2A\u65B0\u7684\u4E16\u754C\uFF0C\u5B66\u4E60\u4E00\u4E0B\u5173\u4E8Esocket\u66F4\u6DF1\u5965\u7684\u77E5\u8BC6\u3002</p><h3 id="_8-1-blocking\u2014\u4F55\u8C13\u963B\u585E" tabindex="-1"><a class="header-anchor" href="#_8-1-blocking\u2014\u4F55\u8C13\u963B\u585E" aria-hidden="true">#</a> 8.1. Blocking\u2014\u4F55\u8C13\u963B\u585E\uFF1F</h3><p>\u4F60\u53EF\u80FD\u542C\u8BF4\u8FC7<strong>\u963B\u585E</strong>\uFF08Blocking\uFF09\u8FD9\u4E2A\u8BCD\uFF0C\u90A3\u4E48\u5B83\u5230\u5E95\u662F\u4E2A\u4EC0\u4E48\u9B3C\u4E1C\u897F\uFF1F\u7B80\u800C\u8A00\u4E4B\uFF0C\u201Cblock\u201D\u662F\u201Csleep\u201D\u7684\u4E00\u79CD\u66F4\u5177\u6709\u79D1\u6280\u611F\u7684\u53EB\u6CD5\u3002</p><blockquote><p>\u4E0B\u6587\u4E2D\uFF0C\u300Cblocking\u300D\u3001\u300Cblock\u300D\u548C\u300C\u963B\u585E\u300D\u4F1A\u6DF7\u7528\uFF0C\u90FD\u662F\u4E00\u4E2A\u610F\u601D\uFF0C\u6089\u77E5</p></blockquote><p>\u5F53\u4F60\u8FD0\u884C\u524D\u6587\u7684<code>listener</code>\u7A0B\u5E8F\u65F6\uFF0C\u4F60\u53EF\u80FD\u53D1\u73B0\u5B83\u4E00\u76F4\u5728\u201Cblock\u201D\uFF0C\u76F4\u5230\u6570\u636E\u5305\u5230\u8FBE\u624D\u4F1A\u52A8\u8D77\u6765\u3002\u4EA7\u751F\u8FD9\u4E2A\u73B0\u8C61\u7684\u539F\u56E0\u662F\u5B83\u8C03\u7528\u4E86<code>recvfrom()</code>\uFF0C\u5982\u679C\u6CA1\u6709\u6570\u636E\uFF0C<code>recvfrom()</code>\u5C31\u4F1A\u88AB\u201Cblock\u201D\uFF08\u4F60\u53EF\u4EE5\u7406\u89E3\u4E3A\u201Csleep\u201D\uFF09\uFF0C\u76F4\u5230\u6709\u6570\u636E\u5230\u8FBE\u3002</p><p>\u5F88\u591A\u51FD\u6570\u90FD\u4F1Ablock\u3002<code>accept()</code>\u4F1Ablock\uFF0C\u6240\u6709\u7684<code>recv()</code>\u4F1Ablock\uFF0C\u5B83\u4EEC\u4E4B\u6240\u4EE5\u53EF\u4EE5block\uFF0C\u662F\u56E0\u4E3A\u5B83\u4EEC\u88AB\u5185\u6838\u8D4B\u4E88\u4E86\u8FD9\u4E2A\u80FD\u529B\u3002\u5F53\u4F60\u4F7F\u7528<code>socket()</code>\u51FD\u6570\u521B\u5EFA\u51FA\u4E00\u4E2A<code>socket descriptor</code>\u65F6\uFF0C\u5185\u6838\u5C31\u4F1A\u5C06\u5176\u8BBE\u7F6E\u4E3A<code>blocking</code>\u3002\u5982\u679C\u4F60\u4E0D\u60F3\u8981blocking socket\uFF0C\u4F60\u9700\u8981\u8C03\u7528<code>fcntl()</code>\u8FDB\u884C\u8BBE\u7F6E\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>PF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fcntl</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> F_SETFL<span class="token punctuation">,</span> O_NONBLOCK<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06socket\u8BBE\u7F6E\u4E3Anon-blocking\uFF08\u975E\u963B\u585E\uFF09\uFF0C\u4F60\u5C31\u53EF\u4EE5<code>poll</code>\uFF08\u8F6E\u8BE2\uFF09socket\u6765\u83B7\u53D6\u6570\u636E\u4E86\u3002\u5982\u679C\u4F60\u5BF9\u4E00\u4E2Anon-blocking socket\u8FDB\u884C\u8BFB\u53D6\uFF0C\u800Csocket\u6CA1\u6709\u6570\u636E\u7684\u65F6\u5019\uFF0C\u5B83\u5E76\u4E0D\u4F1A\u963B\u585E\uFF0C\u800C\u662F\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u5C06<code>errno</code>\u8BBE\u7F6E\u4E3A <code>EAGAIN</code> \u6216 <code>EWOULDBLOCK</code>\u3002</p><p>\u5565\uFF1F <code>EAGAIN</code> <strong>\u6216</strong> <code>EWOULDBLOCK</code>\u5417\uFF1F\u90A3\u6211\u5230\u5E95\u5E94\u8BE5\u68C0\u67E5\u54EA\u4E00\u4E2A\uFF1F\u5B9E\u9645\u4E0A\uFF0C\u4E0D\u540C\u64CD\u4F5C\u7CFB\u7EDF\u8FD4\u56DE\u54EA\u4E2A\u503C\u662F\u4E0D\u786E\u5B9A\u7684\uFF0C\u56E0\u6B64\u4E3A\u4E86\u517C\u5BB9\u6027\uFF0C\u4F60\u6700\u597D\u628A\u8FD9\u4E24\u4E2A\u503C\u90FD\u68C0\u67E5\u4E00\u4E0B\u3002</p><p>\u4F46\u662F\u8001\u5B9E\u8BF4\uFF0C\u4F60\u8981\u662F\u65F6\u65F6\u523B\u523B\u8FDB\u884C\u6570\u636E\u8F6E\u8BE2\u5E76\u4E0D\u662F\u4E2A\u597D\u4E3B\u610F\uFF0C\u56E0\u4E3A\u4F1A\u7A7A\u8017CPU\u65F6\u95F4\u7247\uFF0C\u505A\u7684\u5927\u90E8\u5206\u90FD\u662F\u65E0\u7528\u529F\u3002\u534F\u4E0B\u4E00\u8282\u7684<code>poll()</code>\u63D0\u4F9B\u4E86\u4E00\u4E2A\u66F4\u4F18\u96C5\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u7528\u4E8E\u68C0\u67E5\u662F\u5426\u6709\u7B49\u5F85\u8BFB\u53D6\u7684\u6570\u636E\u3002</p><h3 id="_8-2-poll-\u2014\u540C\u6B65\u7684i-o\u591A\u8DEF\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#_8-2-poll-\u2014\u540C\u6B65\u7684i-o\u591A\u8DEF\u590D\u7528" aria-hidden="true">#</a> 8.2. poll()\u2014\u540C\u6B65\u7684I/O\u591A\u8DEF\u590D\u7528</h3><p>\u4F60\u53EF\u80FD\u5728\u60F3\uFF0C\u6709\u6CA1\u6709\u4E00\u79CD\u529E\u6CD5\uFF0C\u53EF\u4EE5\u540C\u65F6\u76D1\u542C\u591A\u4E2Asocket\uFF0C\u7136\u540E\u53EA\u5904\u7406\u5176\u4E2D\u5DF2\u7ECF\u6709\u6570\u636E\u7684socket\u5462\uFF1F\u8FD9\u6837\u7684\u8BDD\u6211\u4EEC\u5C31\u4E0D\u7528\u50BB\u4E4E\u4E4E\u5730\u4E0D\u505C\u8F6E\u8BE2\uFF0C\u6765\u68C0\u67E5\u54EA\u4E9Bsocket\u5DF2\u7ECF\u6709\u6570\u636E\u4E86\u3002</p><p>\u90A3\u600E\u4E48\u907F\u514Dpoll\uFF08\u8F6E\u8BE2\uFF09\u5462\uFF1F\u8BF4\u8D77\u6765\u6709\u70B9\u641E\u7B11\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>poll()</code>\u8FD9\u4E2A\u7CFB\u7EDF\u8C03\u7528\u6765\u907F\u514Dpoll\uFF08\u8F6E\u8BE2\uFF09\u3002\u672C\u8D28\u4E0A\uFF0C\u6211\u4EEC\u90FD\u662F\u8BA9\u5185\u6838\u6765\u66FF\u6211\u4EEC\u505A\u5404\u79CD\u810F\u6D3B\u7D2F\u6D3B\uFF0C\u7136\u540E\u544A\u8BC9\u6211\u4EEC\u54EA\u4E9Bsocket\u6709\u6570\u636E\u53EF\u8BFB\u4E86\u3002\u6CA1\u6709\u6570\u636E\u53EF\u8BFB\u7684\u65F6\u5019\u6211\u4EEC\u7684\u8FDB\u7A0B\u53EF\u4EE5\u5904\u4E8E\u4F11\u7720\u72B6\u6001\uFF0C\u4E0D\u4F1A\u5360\u7528CPU\u3002</p>`,149),rs=s("\u8B66\u544A\uFF1A\u968F\u7740\u8FDE\u63A5\u6570\u53D8\u5F97\u5DE8\u5927\uFF0Cpoll()\u51FD\u6570\u4F1A\u53D8\u5F97\u5DE8\u6162\uFF01\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u63A8\u8350\u4F60\u4F7F\u7528"),us={href:"https://libevent.org/",target:"_blank",rel:"noopener noreferrer"},ks=s("libevent"),vs=s("\u8FD9\u6837\u7684\u4E8B\u4EF6\u5E93\u3002\u5B83\u4F1A\u5C1D\u8BD5\u4F7F\u7528\u4F60\u7CFB\u7EDF\u4E0A\u53EF\u7528\u7684\u6700\u5FEB\u65B9\u6CD5\uFF0C\u83B7\u5F97\u66F4\u597D\u7684\u6027\u80FD\u3002"),ms=t(`<p>\u4E00\u822C\u7684\u505A\u6CD5\u662F\u7EF4\u62A4\u4E00\u4E2A <code>struct pollfd</code>\u7684\u6570\u7EC4\uFF0C\u5176\u4E2D\u5305\u542B\u6211\u4EEC\u60F3\u8981\u76D1\u542C\u7684<code>socket descriptor</code>\u4EE5\u53CA\u6211\u4EEC\u60F3\u8981\u76D1\u542C\u7684\u4E8B\u4EF6\u7C7B\u578B\u7684\u4FE1\u606F\u3002\u5185\u6838\u4F1A\u963B\u585E\u5728<code>poll()</code>\u8FD9\u4E2A\u8C03\u7528\u4E0A\uFF0C\u76F4\u5230\u4F60\u5173\u6CE8\u7684\u5176\u4E2D\u4E00\u4E2A\u4E8B\u4EF6\u53D1\u751F\uFF08\u6BD4\u5982\u201Csocket ready to read\uFF01\u201D\uFF09\u6216\u76F4\u5230\u53D1\u751F\u7528\u6237\u6307\u5B9A\u8D85\u65F6\u3002</p><p>\u62FFTCP Server\u7AEF\u7A0B\u5E8F\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u5176\u5B9E\u8FD8\u662F<code>blocking</code>\u7684\u4EE3\u7801\uFF0C\u5199\u51FA\u6765\u5C31\u662F\u4E3A\u4E86\u65B9\u4FBF\u6211\u7FFB\u8BD1\u539F\u6587\u7684\u4E00\u53E5\u8BDD\uFF08\u5982\u679C\u786C\u7FFB\u8BD1\u5B9E\u5728\u662F\u4E0D\u597D\u7406\u89E3\uFF09\u3002\u6839\u636E\u5957\u8DEF\u7F16\u5199\u4E864\u6B65\u6D41\u7A0B\uFF1A<code>socket()</code>\u3001<code>bind()</code>\u3001<code>listen()</code>\u4EE5\u53CA<code>accept()</code>\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> new_fd<span class="token punctuation">;</span>  

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>XXX<span class="token punctuation">,</span>XXX<span class="token punctuation">,</span>XXX<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> XXX<span class="token punctuation">,</span> XXX<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>


<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> BACKLOG<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
 
  new_fd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> XXX<span class="token punctuation">,</span> XXX<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>blocking</code>\u4EE3\u7801\u4E2D\uFF0C\u7A0B\u5E8F\u4F1A\u963B\u585E\u5728<code>accept()</code>\uFF0C\u76F4\u5230\u6709\u4E00\u4E2AClient\u8FDE\u63A5\u4E0A\u6765\u3002\u4F46\u662F\u5728<code>non-blocking</code>\u7A0B\u5E8F\u4E2D\uFF0C\u6709Client\u8FDE\u63A5\u4E0A\u6765\u51C6\u5907\u88AB<code>accept()</code>\u8C03\u7528\u4E4B\u524D\uFF0C<code>sockfd</code>\u5C31\u4F1A\u76F4\u63A5\u544A\u8BC9\u6211\u4EEC\u6709\u4E00\u4E2A\u65B0\u7684\u8FDE\u63A5\u6765\u4E86\uFF0C\u6211\u4EEC\u63A5\u7740\u627E\u5230\u4ED6\uFF0C\u7136\u540E<code>accept()</code>\u5904\u7406\u5373\u53EF\u3002\u5927\u5BB6\u53EF\u4EE5\u5BF9\u6BD4\u4E00\u4E0B\u8FD9\u4E24\u8005\u4E4B\u95F4\u7684\u533A\u522B\u3002</p><p>\u8BF4\u5F97\u4E0D\u5C11\u4E86\uFF0C\u770B\u4E00\u4E0B<code>poll()</code>\u7684\u7528\u6CD5\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;poll.h&gt;</span></span>

<span class="token comment">//\u8FD4\u56DE\uFF1A \u5982\u679C\u6709\u5C31\u7EEA\u7684\u63CF\u8FF0\u7B26\u5219\u4E3A\u5176\u6570\u76EE\uFF0C\u82E5\u8D85\u65F6\u8FD4\u56DE0\uFF0C\u82E5\u51FA\u9519\u8FD4\u56DE-1</span>
<span class="token keyword">int</span> <span class="token function">poll</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pollfd</span> fds<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">nfds_t</span> nfds<span class="token punctuation">,</span> <span class="token keyword">int</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>fds</code>\u662F\u4E00\u4E2A\u7ED3\u6784\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\u90FD\u662F\u4E00\u4E2A<code>pollfd</code>\u7ED3\u6784\uFF0C\u4FDD\u5B58\u4E86\u300C\u76D1\u542C\u54EA\u4E2Asocket\u7684\u4EC0\u4E48\u4E8B\u4EF6\u300D\u7684\u4FE1\u606F\uFF1B<code>nfds</code>\u662F\u6570\u7EC4\u7684\u6570\u91CF\uFF1B<code>timeout</code>\u662F\u8BBE\u7F6E\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\u3002<code>poll()</code>\u8FD4\u56DE\u5C31\u7EEA\uFF08\u6709\u65F6\u95F4\u53D1\u751F\uFF09\u7684\u63CF\u8FF0\u7B26\u6570\u91CF\uFF0C\u82E5\u8D85\u65F6\u8FD4\u56DE<code>0</code>\uFF0C\u82E5\u51FA\u9519\u8FD4\u56DE<code>-1</code>\u3002</p><p>\u6211\u4EEC\u770B\u4E00\u4E0B<code>pollfd</code>\u7ED3\u6784\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">pollfd</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> fd<span class="token punctuation">;</span>         <span class="token comment">// the socket descriptor</span>
  <span class="token keyword">short</span> events<span class="token punctuation">;</span>   <span class="token comment">// \u6211\u4EEC\u611F\u5174\u8DA3\u7684\u4E8B\u4EF6\u7EC4\u6210\u7684 bitmap</span>
  <span class="token keyword">short</span> revents<span class="token punctuation">;</span>  <span class="token comment">// poll() \u8FD4\u56DE\u65F6\uFF0C\u5DF2\u53D1\u751F\u4E8B\u4EF6\u7EC4\u6210\u7684 bitmap</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>fd</code>\u8868\u793A\u7684\u5C31\u662F\u4F60\u60F3\u76D1\u542C\u7684<code>socket descriptor</code>\uFF0C\u901A\u8FC7\u8BBE\u7F6E<code>events</code>\u5B57\u6BB5\u6765\u6307\u5B9A\u6211\u4EEC\u611F\u5174\u8DA3\u7684\u4E8B\u4EF6\u7C7B\u578B\u3002</p><p>events\u5B57\u6BB5\u65F6\u4E0B\u8868\u4E2D\u503C\u7684\u6309\u4F4D\u6216\uFF1A</p><table><thead><tr><th style="text-align:center;">\u5E38\u503C</th><th style="text-align:center;">\u8BF4\u660E</th></tr></thead><tbody><tr><td style="text-align:center;">POLLIN</td><td style="text-align:center;">\u5F53\u6570\u636E\u53EF\u8BFB\u65F6\uFF08recv()\u53EF\u8BFB\uFF09\uFF0C\u63D0\u9192\u6211</td></tr><tr><td style="text-align:center;">POLLOUT</td><td style="text-align:center;">\u5F53\u6570\u636E\u53EF\u5199\u65F6\uFF08send()\u53EF\u5199\uFF09\uFF0C\u63D0\u9192\u6211</td></tr></tbody></table><p>\u5F97\u5230<code>struct pollfd</code>\u6570\u7EC4\u4E4B\u540E\uFF0C\u4F60\u5C31\u53EF\u4EE5\u5C06\u5176\u4F20\u7ED9<code>poll()</code>\u51FD\u6570\u4E86\uFF0C\u540C\u65F6\u4F20\u9012\u7684\u8FD8\u6709\u6570\u7EC4\u7684\u957F\u5EA6\u4EE5\u53CA\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\u7684\u8D85\u65F6\u65F6\u95F4\uFF08\u4F60\u4E5F\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u8D1F\u6570\uFF0C\u8868\u793A\u6C38\u4E45\u7B49\u5F85\uFF09\u3002</p><p><code>poll()</code>\u8FD4\u56DE\u4E4B\u540E\uFF0C\u4F60\u53EF\u4EE5\u68C0\u67E5<code>revents</code>\u5B57\u6BB5\uFF0C\u67E5\u770B\u662F\u5426\u8BBE\u7F6E\u4E86<code>POLLIN</code>\u6216<code>POLLOUT</code>\uFF0C\u6765\u5224\u65AD\u662F\u5426\u6709\u4E8B\u4EF6\u53D1\u751F\u3002</p><blockquote><p>\u5B9E\u9645\u4E0A\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>poll()</code>\u8FDB\u884C\u66F4\u591A\u64CD\u4F5C\uFF0C\u66F4\u591A\u7EC6\u8282\uFF0C\u53C2\u89C1\u540E\u6587\u7684<code>poll()</code>\u4F7F\u7528\u624B\u518C\u3002</p></blockquote><p>\u4E0B\u9762\u7ED9\u51FA\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u5F53\u4F60\u5728\u547D\u4EE4\u884C\u6572\u51FB\u4E00\u4E0B\u56DE\u8F66\u6216\u8005\u7B492.5\u79D2\u949F\uFF0C\u4F60\u4F1A\u770B\u5230<code>poll()</code>\u8FD4\u56DE\u7684\u4E0D\u540C\u72B6\u6001\uFF0C\u8FD0\u884C\u4E00\u4E0B\u8BD5\u8BD5\u5427\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;poll.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">pollfd</span> pfds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u4F60\u9700\u8981\u76D1\u542C\u66F4\u591A\u7684socket\uFF0C\u5C31\u8BBE\u7F6E\u5F97\u66F4\u5927\u4E00\u70B9</span>

    pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment">// 0 \u8868\u793A\u6807\u51C6\u8F93\u5165</span>
    pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">=</span> POLLIN<span class="token punctuation">;</span> <span class="token comment">// Tell me when ready to read</span>

    <span class="token comment">// If you needed to monitor other things, as well:</span>
    <span class="token comment">//pfds[1].fd = some_socket; // Some socket descriptor</span>
    <span class="token comment">//pfds[1].events = POLLIN;  // Tell me when ready to read</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hit RETURN or wait 2.5 seconds for timeout\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> num_events <span class="token operator">=</span> <span class="token function">poll</span><span class="token punctuation">(</span>pfds<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2.5 second timeout</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>num_events <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Poll timed out!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> pollin_happened <span class="token operator">=</span> pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revents <span class="token operator">&amp;</span> POLLIN<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>pollin_happened<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;File descriptor %d is ready to read\\n&quot;</span><span class="token punctuation">,</span> pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected event occurred: %d\\n&quot;</span><span class="token punctuation">,</span> pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>revents<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F3A\u8C03\u4E00\u4E0B\uFF0C<code>poll()</code>\u8FD4\u56DE\u7684\u662F<code>pfds</code>\u6570\u7EC4\u4E2D\u6709\u4E8B\u4EF6\u53D1\u751F\u7684\u5143\u7D20\u6570\u91CF\uFF0C\u4F46\u662F\u5E76\u4E0D\u4F1A\u544A\u8BC9\u4F60\u6570\u7EC4\u4E2D\u6709\u54EA\u4E9B\u5143\u7D20\uFF08\u4F60\u9700\u8981\u5FAA\u73AF\u5224\u65AD\uFF09\u6709\u4E8B\u4EF6\u53D1\u751F\u3002</p><p>\u968F\u4E4B\u800C\u6765\u4F1A\u51FA\u73B0\u51E0\u4E2A\u95EE\u9898\u3002</p><p>\u5982\u4F55\u5411\u4F20\u9012\u7ED9<code>poll()</code>\u7684\u6570\u7EC4\u4E2D\u6DFB\u52A0\u65B0\u7684<code>file descriptor</code>\uFF1F\u4F60\u53EA\u8981\u786E\u4FDD\u6570\u7EC4\u4E2D\u6709\u8DB3\u591F\u7684\u7A7A\u95F4\u6765\u6EE1\u8DB3\u4F60\u7684\u9700\u6C42\u5373\u53EF\uFF0C\u6216\u8005\u6839\u636E\u4F60\u7684\u9700\u6C42\u8C03\u7528 <code>realloc()</code> \u91CD\u65B0\u5206\u914D\u5185\u5B58\u3002</p><p>\u600E\u4E48\u5220\u9664<code>pfds</code>\u4E2D\u7684\u5143\u7D20\u5462\uFF1F\u4F60\u53EF\u4EE5\u5C06<code>pfds</code>\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u6570\u636E\uFF08\u5B9E\u9645\u6709\u7528\u7684\u6570\u636E\uFF09\u590D\u5236\u5230\u4F60\u60F3\u5220\u9664\u7684\u4F4D\u7F6E\u4E0A\uFF0C\u7136\u540E\u5C06\u4F20\u7ED9<code>poll()</code>\u7684\u6570\u7EC4\u957F\u5EA6\u53C2\u6570 - 1\u3002\u6216\u8005\u4F60\u4E5F\u53EF\u4EE5\u5C06\u4F60\u60F3\u5220\u9664\u7684\u5143\u7D20\u8BBE\u7F6E\u4E3A\u8D1F\u6570\uFF0C<code>poll()</code>\u4F1A\u5FFD\u7565\u5B83\u7684\u3002</p><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E2A\u7A0D\u5FAE\u9EBB\u70E6\u70B9\u513F\u7684\u4F8B\u5B50\uFF0C\u7528<code>poll()</code>\u7F16\u5199\u4E00\u4E2A\u804A\u5929\u5BA4\u3002</p><p>\u6211\u4EEC\u9700\u8981\u542F\u52A8\u4E00\u4E2A<code>listener socket</code>\uFF0C\u5E76\u5C06\u5176\u6DFB\u52A0\u5230<code>poll()</code>\u7684<code>file descriptors</code>\u96C6\u5408\u4E2D\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u80FD\u901A\u8FC7\u5B83\u5224\u65AD\u662F\u4E0D\u662F\u6709Client\u8FDE\u63A5\u4E0A\u6765\u4E86\u3002</p><p>\u7136\u540E\u6211\u4EEC\u628A\u65B0\u8FDE\u63A5\u6DFB\u52A0\u5230<code>struct pollfd</code>\u6570\u7EC4\u4E2D\uFF0C\u6839\u636E\u6211\u4EEC\u5B9E\u9645\u9700\u8981\u52A8\u6001\u8C03\u6574\u5B83\u7684\u5BB9\u91CF\u3002\u5F53\u8FDE\u63A5\u65AD\u5F00\u65F6\uFF0C\u6211\u4EEC\u518D\u5C06\u5176\u4ECE\u6570\u7EC4\u4E2D\u6E05\u9664\u3002</p><p>\u5F53\u8FDE\u63A5\u4E2D\u6709\u6570\u636E\u53EF\u8BFB\u65F6\uFF0C\u6211\u4EEC\u4ECE\u4E2D\u5C06\u6570\u636E\u53D6\u51FA\u5E76\u5C06\u5176\u8F6C\u53D1\u5230\u5176\u4ED6\u8FDE\u63A5\u4E2D\uFF0C\u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86\u804A\u5929\u5BA4\u7684\u529F\u80FD\u3002</p><p>\u4E0B\u9762\u7ED9\u51FA<code>pollserver.c</code>\u7684\u4EE3\u7801\u3002\u4F60\u53EF\u4EE5\u5728\u4E00\u4E2A\u7A97\u53E3\u4E2D\u8FD0\u884C\u5B83\uFF0C\u7136\u540E\u5728\u5176\u4ED6\u547D\u4EE4\u884C\u7A97\u53E3\u4E2D\u6267\u884C<code>telnet localhost 9034</code>\u3002\u4E4B\u540E\u4F60\u5728\u5404\u4E2A\u7A97\u53E3\u547D\u4EE4\u884C\u4E2D\u8F93\u5165\u7684\u4FE1\u606F\uFF08\u8BB0\u5F97\u6572\u56DE\u8F66\uFF09\uFF0C\u5C31\u53EF\u4EE5\u5728\u5176\u4ED6\u7A97\u53E3\u4E2D\u770B\u5230\u4E86\u3002</p><p>\u4E0D\u4EC5\u5982\u6B64\uFF0C\u5F53\u4F60\u8F93\u5165<code>quit</code>\u63A8\u51FA<code>telnet</code>\u65F6\uFF0C\u670D\u52A1\u7AEF\u4F1A\u68C0\u6D4B\u5230\u8FDE\u63A5\u65AD\u5F00\uFF0C\u5E76\u4E14\u4ECE<code>file descriptor</code>\u6570\u7EC4\u4E2D\u5C06\u5176\u79FB\u51FA\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** pollserver.c -- a cheezy multiperson chat server
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;poll.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PORT</span> <span class="token string">&quot;9034&quot;</span>   <span class="token comment">// Port we&#39;re listening on</span></span>

<span class="token comment">// Get sockaddr, IPv4 or IPv6:</span>
<span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>sa<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sa<span class="token operator">-&gt;</span>sa_family <span class="token operator">==</span> AF_INET<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr_in6</span><span class="token operator">*</span><span class="token punctuation">)</span>sa<span class="token punctuation">)</span><span class="token operator">-&gt;</span>sin6_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Return a listening socket</span>
<span class="token keyword">int</span> <span class="token function">get_listener_socket</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> listener<span class="token punctuation">;</span>     <span class="token comment">// Listening socket descriptor</span>
    <span class="token keyword">int</span> yes<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment">// For setsockopt() SO_REUSEADDR, below</span>
    <span class="token keyword">int</span> rv<span class="token punctuation">;</span>

    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>ai<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>

    <span class="token comment">// Get us a socket and bind it</span>
    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> PORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ai<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;selectserver: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> ai<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        listener <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>listener <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// Lose the pesky &quot;address already in use&quot; error message</span>
        <span class="token function">setsockopt</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> SOL_SOCKET<span class="token punctuation">,</span> SO_REUSEADDR<span class="token punctuation">,</span> <span class="token operator">&amp;</span>yes<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">close</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>ai<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// All done with this</span>

    <span class="token comment">// If we got here, it means we didn&#39;t get bound</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Listen</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">listen</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> listener<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Add a new file descriptor to the set</span>
<span class="token keyword">void</span> <span class="token function">add_to_pfds</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pollfd</span> <span class="token operator">*</span>pfds<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> newfd<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>fd_count<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>fd_size<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// If we don&#39;t have room, add more space in the pfds array</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>fd_count <span class="token operator">==</span> <span class="token operator">*</span>fd_size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">*</span>fd_size <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// Double it</span>

        <span class="token operator">*</span>pfds <span class="token operator">=</span> <span class="token function">realloc</span><span class="token punctuation">(</span><span class="token operator">*</span>pfds<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span>pfds<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">*</span>fd_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">(</span><span class="token operator">*</span>pfds<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">*</span>fd_count<span class="token punctuation">]</span><span class="token punctuation">.</span>fd <span class="token operator">=</span> newfd<span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>pfds<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">*</span>fd_count<span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">=</span> POLLIN<span class="token punctuation">;</span> <span class="token comment">// Check ready-to-read</span>

    <span class="token punctuation">(</span><span class="token operator">*</span>fd_count<span class="token punctuation">)</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Remove an index from the set</span>
<span class="token keyword">void</span> <span class="token function">del_from_pfds</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">pollfd</span> pfds<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>fd_count<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// Copy the one from the end over this one</span>
    pfds<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pfds<span class="token punctuation">[</span><span class="token operator">*</span>fd_count<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token punctuation">(</span><span class="token operator">*</span>fd_count<span class="token punctuation">)</span><span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Main</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> listener<span class="token punctuation">;</span>     <span class="token comment">// Listening socket descriptor</span>

    <span class="token keyword">int</span> newfd<span class="token punctuation">;</span>        <span class="token comment">// Newly accept()ed socket descriptor</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> remoteaddr<span class="token punctuation">;</span> <span class="token comment">// Client address</span>
    <span class="token class-name">socklen_t</span> addrlen<span class="token punctuation">;</span>

    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// Buffer for client data</span>

    <span class="token keyword">char</span> remoteIP<span class="token punctuation">[</span>INET6_ADDRSTRLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// Start off with room for 5 connections</span>
    <span class="token comment">// (We&#39;ll realloc as necessary)</span>
    <span class="token keyword">int</span> fd_count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> fd_size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">pollfd</span> <span class="token operator">*</span>pfds <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span> <span class="token operator">*</span>pfds <span class="token operator">*</span> fd_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Set up and get a listening socket</span>
    listener <span class="token operator">=</span> <span class="token function">get_listener_socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>listener <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;error getting listening socket\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Add the listener to set</span>
    pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fd <span class="token operator">=</span> listener<span class="token punctuation">;</span>
    pfds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>events <span class="token operator">=</span> POLLIN<span class="token punctuation">;</span> <span class="token comment">// Report ready to read on incoming connection</span>

    fd_count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// For the listener</span>

    <span class="token comment">// Main loop</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> poll_count <span class="token operator">=</span> <span class="token function">poll</span><span class="token punctuation">(</span>pfds<span class="token punctuation">,</span> fd_count<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>poll_count <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;poll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Run through the existing connections looking for data to read</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fd_count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment">// Check if someone&#39;s ready to read</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pfds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>revents <span class="token operator">&amp;</span> POLLIN<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// We got one!!</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>pfds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fd <span class="token operator">==</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If listener is ready to read, handle new connection</span>

                    addrlen <span class="token operator">=</span> <span class="token keyword">sizeof</span> remoteaddr<span class="token punctuation">;</span>
                    newfd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span>
                        <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>remoteaddr<span class="token punctuation">,</span>
                        <span class="token operator">&amp;</span>addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>newfd <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token function">add_to_pfds</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pfds<span class="token punctuation">,</span> newfd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_count<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pollserver: new connection from %s on &quot;</span>
                            <span class="token string">&quot;socket %d\\n&quot;</span><span class="token punctuation">,</span>
                            <span class="token function">inet_ntop</span><span class="token punctuation">(</span>remoteaddr<span class="token punctuation">.</span>ss_family<span class="token punctuation">,</span>
                                <span class="token function">get_in_addr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>remoteaddr<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                remoteIP<span class="token punctuation">,</span> INET6_ADDRSTRLEN<span class="token punctuation">)</span><span class="token punctuation">,</span>
                            newfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If not the listener, we&#39;re just a regular client</span>
                    <span class="token keyword">int</span> nbytes <span class="token operator">=</span> <span class="token function">recv</span><span class="token punctuation">(</span>pfds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">int</span> sender_fd <span class="token operator">=</span> pfds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fd<span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>nbytes <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// Got error or connection closed by client</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>nbytes <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// Connection closed</span>
                            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;pollserver: socket %d hung up\\n&quot;</span><span class="token punctuation">,</span> sender_fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;recv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token function">close</span><span class="token punctuation">(</span>pfds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bye!</span>

                        <span class="token function">del_from_pfds</span><span class="token punctuation">(</span>pfds<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd_count<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token comment">// We got some good data from a client</span>

                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> fd_count<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// Send to everyone!</span>
                            <span class="token keyword">int</span> dest_fd <span class="token operator">=</span> pfds<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>fd<span class="token punctuation">;</span>

                            <span class="token comment">// Except the listener and ourselves</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>dest_fd <span class="token operator">!=</span> listener <span class="token operator">&amp;&amp;</span> dest_fd <span class="token operator">!=</span> sender_fd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">send</span><span class="token punctuation">(</span>dest_fd<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> nbytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;send&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token comment">// END handle data from client</span>
            <span class="token punctuation">}</span> <span class="token comment">// END got ready-to-read from poll()</span>
        <span class="token punctuation">}</span> <span class="token comment">// END looping through file descriptors</span>
    <span class="token punctuation">}</span> <span class="token comment">// END for(;;)--and you thought it would never end!</span>
    
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0B\u4E00\u8282\uFF0C\u6211\u4EEC\u4F1A\u770B\u5B66\u5230\u4E00\u4E2A\u529F\u80FD\u7C7B\u4F3C\uFF0C\u4F46\u662F\u66F4\u8001\u7684\u4E00\u4E2A\u51FD\u6570<code>select()</code>\u3002<code>poll()</code>\u548C<code>select()</code>\u4E24\u8005\u529F\u80FD\u7C7B\u4F3C\uFF0C\u6027\u80FD\u4E5F\u5DEE\u4E0D\u592A\u591A\uFF0C\u533A\u522B\u4E3B\u8981\u5728\u4E8E\u5B83\u4EEC\u7684\u7528\u6CD5\u3002</p><p>\u76F8\u6BD4\u4E4B\u4E0B\uFF0C<code>select()</code>\u7684\u53EF\u79FB\u690D\u6027\u7A0D\u5FAE\u5F3A\u4E00\u70B9\uFF0C\u4F46\u662F\u4F7F\u7528\u8D77\u6765\u7A0D\u663E\u7B28\u62D9\u3002\u5B66\u5B8C\u4E0B\u4E00\u8282\u4E4B\u540E\uFF0C\u6839\u636E\u4F60\u7684\u7CFB\u7EDF\u652F\u6301\u60C5\u51B5\uFF0C\u9009\u62E9\u4E00\u4E2A\u4F60\u6700\u559C\u6B22\u7684\u5373\u53EF\u3002</p><h3 id="_8-3-select-\u2014\u8001\u53E4\u8463\u7684\u540C\u6B65i-o\u591A\u8DEF\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#_8-3-select-\u2014\u8001\u53E4\u8463\u7684\u540C\u6B65i-o\u591A\u8DEF\u590D\u7528" aria-hidden="true">#</a> 8.3. select()\u2014\u8001\u53E4\u8463\u7684\u540C\u6B65I/O\u591A\u8DEF\u590D\u7528</h3><p>\u6211\u5047\u8BBE\u4F60\u5DF2\u7ECF\u8BFB\u8FC7<code>poll()</code>\u7684\u7528\u6CD5\u4E86\uFF0C\u56E0\u6B64\u76F4\u63A5\u8FDB\u5165\u4E3B\u9898\u3002</p><p><code>select()</code>\u53EF\u4EE5\u540C\u65F6\u76D1\u542C\u591A\u4E2Asocket\uFF0C\u5F53\u6709\u4F60\u611F\u5174\u8DA3\u7684\uFF08\u591A\u4E2A\uFF09\u4E8B\u4EF6\u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\u53D1\u751F\uFF0C\u5185\u6838\u624D\u4F1A\u5524\u9192<code>select()</code>\u3002\u5982\u679C\u4F60\u771F\u7684\u60F3\u77E5\u9053\u7684\u8BDD\uFF0C<code>select()</code>\u4F1A\u544A\u8BC9\u4F60\u54EA\u4E9Bsocket\u662F\u53EF\u4EE5\u8BFB\u53D6\u7684\uFF0C\u54EA\u4E9B\u662F\u53EF\u4EE5\u5199\u5165\u7684\uFF0C\u54EA\u4E9B\u5F15\u53D1\u4E86\u5F02\u5E38\u3002</p>`,33),bs=s("\u8B66\u544A\uFF1A\u968F\u7740\u8FDE\u63A5\u6570\u8D8A\u6765\u8D8A\u591A\uFF0C"),hs=n("code",null,"select()",-1),_s=s("\u51FD\u6570\u4F1A\u53D8\u5F97\u5DE8\u6162\uFF01\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u63A8\u8350\u4F60\u4F7F\u7528"),fs={href:"https://libevent.org/",target:"_blank",rel:"noopener noreferrer"},gs=s("libevent"),ys=s("\u8FD9\u6837\u7684\u4E8B\u4EF6\u5E93\u3002\u5B83\u4F1A\u5C1D\u8BD5\u4F7F\u7528\u4F60\u7CFB\u7EDF\u4E0A\u53EF\u7528\u7684\u6700\u5FEB\u65B9\u6CD5\uFF0C\u83B7\u5F97\u66F4\u597D\u7684\u6027\u80FD\u3002"),ws=t(`<p>\u770B\u4E00\u4E0B<code>select()</code>\u7684\u8BED\u6CD5\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/time.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">int</span> numfds<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>readfds<span class="token punctuation">,</span> fd_set <span class="token operator">*</span>writefds<span class="token punctuation">,</span>
           fd_set <span class="token operator">*</span>exceptfds<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">timeval</span> <span class="token operator">*</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>select()</code>\u51FD\u6570\u76D1\u542C\u591A\u79CD\u7C7B\u578B\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u96C6\u5408\uFF0C\u5C24\u5176\u662F<code>readfd</code>\u3001<code>writefd</code>\u548C<code>exceptfd</code>\u3002\u5982\u679C\u4F60\u60F3\u8981\u77E5\u9053\u4F60\u662F\u5426\u80FD\u4ECE\u6807\u51C6\u8F93\u5165\uFF08standard input\uFF09\u53CA\u67D0\u4E2Asocket descriptor\uFF08\u7528 <code>sockfd</code> \u8868\u793A\uFF09\u4E2D\u8FDB\u884C\u8BFB\u53D6\uFF0C\u53EA\u8981\u5C06\u6807\u51C6\u8F93\u5165\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u8868\u2014\u2014<code>0</code> \u4E0E <code>sockfd</code> \u65B0\u589E\u5230 <code>readfds</code> \u4E2D\u3002\u53C2\u6570<code>numfds</code>\u5E94\u8BBE\u7F6E\u4E3A\u6700\u9AD8\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u503C\u52A01\u3002\u5728\u672C\u4F8B\u4E2D\uFF0C\u5B83\u5E94\u8BE5\u8BBE\u7F6E\u4E3A<code>sockfd+1</code>\uFF0C\u56E0\u4E3A\u5B83\u80AF\u5B9A\u9AD8\u4E8E\u6807\u51C6\u8F93\u5165\u2014\u2014<code>0</code>\u3002</p><p>\u5F53<code>select()</code>\u8FD4\u56DE\u65F6\uFF0C<code>readfds</code>\u5C06\u88AB\u4FEE\u6539\uFF0C\u6765\u53CD\u6620\u4F60\u9009\u62E9\u7684\u54EA\u4E9Bfile descriptor\u53EF\u4EE5\u8BFB\u53D6\u3002\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u5B8F<code>FD_ISSET()</code>\u6D4B\u8BD5\u5B83\u4EEC\u3002</p><p>\u5728\u8FDB\u4E00\u6B65\u8BA8\u8BBA\u4E4B\u524D\uFF0C\u6211\u5148\u8BF4\u4E00\u4E0B\u5982\u4F55\u64CD\u4F5C\u8FD9\u4E9Bfile descriptor\u96C6\u5408\uFF0C\u6BCF\u4E2A\u96C6\u5408\u90FD\u662F<code>fd_set</code>\u7C7B\u578B\uFF0C\u4E0B\u9762\u7684\u5B8F\u5728\u6B64\u7C7B\u578B\u4E0A\u8FD0\u884C\uFF1A</p><table><thead><tr><th style="text-align:center;">\u51FD\u6570</th><th style="text-align:center;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;">FD_SET(int fd, fd_set *set);</td><td style="text-align:center;">\u5C06fd\u52A0\u5165\u5230set</td></tr><tr><td style="text-align:center;">FD_CLR(int fd, fd_set *set);</td><td style="text-align:center;">\u4ECEset\u79CD\u79FB\u9664fd</td></tr><tr><td style="text-align:center;">FD_ISSET(int fd, fd_set *set);</td><td style="text-align:center;">\u82E5fd\u5728set\u4E2D\uFF0C\u8FD4\u56DEtrue</td></tr><tr><td style="text-align:center;">FD_ZERO(fd_set *set);</td><td style="text-align:center;">\u6E05\u7A7Aset</td></tr></tbody></table><p>\u6700\u540E\uFF0C\u8FD9\u4E2A\u5947\u602A\u7684<code>struct timeval</code>\u662F\u4EC0\u4E48\uFF1F</p><p>\u6709\u65F6\u5019\uFF0C\u4F60\u4E0D\u60F3\u6C38\u8FDC\u4E00\u76F4\u7B49\u7740\u522B\u4EBA\u7ED9\u4F60\u53D1\u9001\u6570\u636E\u3002\u4E5F\u8BB8\u6BCF\u9694\u4E00\u6BB5\u65F6\u95F4\u4F60\u5C31\u60F3\u5728\u7EC8\u7AEF\u4E0A\u6253\u5370\u201CStill Going\u2026\u201D\uFF0C\u5373\u4F7F\u4EC0\u4E48\u90FD\u6CA1\u6709\u53D1\u751F\u3002\u8FD9\u4E2Astruct\u5141\u8BB8\u4F60\u6307\u5B9A\u8D85\u65F6\u65F6\u95F4\u6BB5\u3002\u5982\u679C\u8D85\u8FC7\u4E86\u65F6\u95F4\uFF0C<code>select()</code>\u4ECD\u7136\u6CA1\u6709\u627E\u5230\u4EFB\u4F55\u5C31\u7EEA\u7684file descriptor\uFF0C\u5B83\u5C06\u8FD4\u56DE\u4EE5\u4FBF\u4F60\u53EF\u4EE5\u7EE7\u7EED\u8FDB\u884C\u5904\u7406\u3002</p><p><code>struct timeval</code> \u957F\u8FD9\u6837\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">timeval</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> tv_sec<span class="token punctuation">;</span>     <span class="token comment">// seconds</span>
  <span class="token keyword">int</span> tv_usec<span class="token punctuation">;</span>    <span class="token comment">// microseconds</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u9700\u5C06<code>tv_sec</code>\u8BBE\u7F6E\u4E3A\u7B49\u5F85\u7684\u79D2\u6570\uFF0C\u5C06<code>tv_usec</code>\u8BBE\u7F6E\u6210\u7B49\u5F85\u7684\u5FAE\u79D2\u6570\u3002\u4F60\u6CA1\u770B\u9519\uFF0C\u8FD9\u662F_micro_seconds\uFF0C\u800C\u4E0D\u662F\u6BEB\u79D2\u3002\u4E00\u6BEB\u79D2\u67091000\u5FAE\u79D2\uFF0C\u4E00\u79D2\u949F\u67091000\u6BEB\u79D2\u3002\u56E0\u6B64\uFF0C\u6BCF\u79D2\u67091000000\u5FAE\u79D2\u3002\u4E3A\u4EC0\u4E48\u662F\u201Cusec\u201D\uFF1F\u201Cu\u201D\u5E94\u8BE5\u770B\u8D77\u6765\u50CF\u6211\u4EEC\u7528\u6765\u8868\u793A\u201Cmicro\u201D\u7684\u5E0C\u814A\u5B57\u6BCD\u03BC\uFF08Mu\uFF09\u3002</p><p>\u6B64\u5916\uFF0C\u5F53\u51FD\u6570\u8FD4\u56DE\u65F6\uFF0C\u53EF\u80FD\u4F1A\u66F4\u65B0<code>timeout</code>\u4EE5\u663E\u793A\u5269\u4F59\u65F6\u95F4\u3002\u8FD9\u53D6\u51B3\u4E8E\u4F60\u6B63\u5728\u8FD0\u884C\u7684Unix\u7C7B\u578B\u3002</p><p>\u54C7\uFF01\u6211\u4EEC\u6709\u4E00\u4E2A\u5FAE\u79D2\u7EA7\u522B\u7684\u8BA1\u65F6\u5668\uFF01\u597D\u5427\uFF0C\u522B\u6307\u671B\u5B83\u3002\u65E0\u8BBA\u4F60\u5C06<code>struct timeval</code>\u8BBE\u7F6E\u5F97\u591A\u4E48\u5C0F\uFF0C\u4F60\u53EF\u80FD\u8FD8\u662F\u8981\u7B49\u5F85\u4E00\u5C0F\u6BB5\u7684 standard Unix timeslice\uFF08\u6807\u51C6 Unix \u65F6\u95F4\u7247\u6BB5\uFF09\u3002</p><p>\u53E6\u4E00\u4EF6\u6709\u610F\u601D\u7684\u4E8B\u60C5\u662F\uFF1A\u5982\u679C\u5C06<code>struct timeval</code>\u4E2D\u7684\u5B57\u6BB5\u8BBE\u7F6E\u4E3A0\uFF0C<code>select()</code>\u4F1A\u5728\u8F6E\u8BE2\u8FC7 sets \u4E2D\u7684\u6BCF\u4E2A file descriptor \u4E4B\u540E\u7ACB\u5373timeout\u3002\u5982\u679C\u5C06\u53C2\u6570<code>timeout</code>\u8BBE\u7F6E\u4E3A<code>NULL</code>\uFF0C\u5B83\u5C06\u6C38\u8FDC\u4E0D\u4F1Atimeout\uFF0C\u800C\u662F\u9677\u5165\u7B49\u5F85\u72B6\u6001\uFF0C\u76F4\u5230\u81F3\u5C11\u4E00\u4E2Afile descriptor\u5DF2\u7ECF\u5C31\u7EEA\u3002\u5982\u679C\u4F60\u4E0D\u5728\u4E4E\u7B49\u5F85\u65F6\u95F4\uFF0C\u53EF\u4EE5\u5728<code>select()</code>\u4E2D\u5C06\u5176\u8BBE\u7F6E\u4E3A<code>NULL</code>\u3002</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u6BB5\u7B49\u5F852.5\u79D2\uFF0C\u7B49\u5F85\u6807\u51C6\u8F93\u5165\u4E2D\u51FA\u73B0\u67D0\u4E9B\u5185\u5BB9\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** select.c -- a select() demo
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/time.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">STDIN</span> <span class="token expression"><span class="token number">0</span>  </span><span class="token comment">// file descriptor for standard input</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">timeval</span> tv<span class="token punctuation">;</span>
    fd_set readfds<span class="token punctuation">;</span>

    tv<span class="token punctuation">.</span>tv_sec <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    tv<span class="token punctuation">.</span>tv_usec <span class="token operator">=</span> <span class="token number">500000</span><span class="token punctuation">;</span>

    <span class="token function">FD_ZERO</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>readfds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">FD_SET</span><span class="token punctuation">(</span>STDIN<span class="token punctuation">,</span> <span class="token operator">&amp;</span>readfds<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// don&#39;t care about writefds and exceptfds:</span>
    <span class="token function">select</span><span class="token punctuation">(</span>STDIN<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>readfds<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>tv<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">FD_ISSET</span><span class="token punctuation">(</span>STDIN<span class="token punctuation">,</span> <span class="token operator">&amp;</span>readfds<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;A key was pressed!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Timed out.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F60\u7528\u7684\u662F\u884C\u7F13\u51B2\uFF08line buffered\uFF09\u7684\u7EC8\u7AEF\uFF0C\u90A3\u4E48\u4F60\u4ECE\u952E\u76D8\u8F93\u5165\u6570\u636E\u540E\u5E94\u8BE5\u8981\u5C3D\u5FEB\u6309\u4E0B Enter\uFF0C\u5426\u5219\u7A0B\u5E8F\u5C31\u4F1A\u53D1\u751F timeout\u3002</p><blockquote><p>\u884C\u7F13\u5B58\uFF1A\u6807\u51C6\u8F93\u51FA\u6D41\u9047\u5230\u6362\u884C\u7B26\\n\u65F6\u51B2\u5237\u7F13\u5B58\u3002</p></blockquote><p>\u4F60\u73B0\u5728\u53EF\u80FD\u5728\u60F3\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u7528\u5728\u9700\u8981\u7B49\u5F85\u6570\u636E\u7684 datagram socket \u4E0A\u5E94\u8BE5\u4F1A\u5F88\u68D2\uFF0C\u4F60\u662F\u5BF9\u7684\uFF1A\u8FD9\u53EF\u80FD\u786E\u5B9E\u662F\u4E2A\u4E0D\u9519\u7684\u65B9\u6CD5\u3002\u6709\u4E9BUnix\u53EF\u4EE5\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u4F7F\u7528<code>select()</code>\uFF0C\u6709\u4E9B\u5219\u4E0D\u80FD\u3002\u5982\u679C\u4F60\u60F3\u5C1D\u8BD5\u7684\u8BDD\uFF0C\u4F60\u5E94\u8BE5\u53C2\u8003\u4E00\u4E0B\u4F60\u7CFB\u7EDF\u4E0A\u7684man\u624B\u518C\u4E0A\u662F\u600E\u4E48\u5199\u7684\u3002</p><p>\u6709\u4E9BUnix\u7CFB\u7EDF\u4F1A\u66F4\u65B0 <code>struct timeval</code> \u7684\u65F6\u95F4\uFF0C\u7528\u6765\u53CD\u6620 <code>select()</code> \u8FD8\u5269\u4E0B\u591A\u5C11\u65F6\u95F4\u624D\u4F1A timeout\uFF1B\u4F46\u662F\u6709\u4E9B\u5E76\u4E0D\u4F1A\u8FD9\u6837\u3002\u5982\u679C\u4F60\u60F3\u8981\u7A0B\u5E8F\u5177\u5907\u53EF\u79FB\u690D\u6027\uFF0C\u90A3\u5C31\u4E0D\u8981\u4F9D\u8D56\u8FD9\u4E2A\u7279\u6027\u3002\uFF08\u5982\u679C\u4F60\u786E\u5B9E\u9700\u8981\u8FFD\u8E2A\u5269\u4E0B\u7684\u65F6\u95F4\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>gettimeofday()</code>\uFF0C\u6211\u77E5\u9053\u8FD9\u8BA9\u4F60\u6709\u70B9\u4E0D\u723D\uFF0C\u8FD9\u4E5F\u662F\u6CA1\u6709\u529E\u6CD5\u7684\u4E8B\u60C5\u3002\uFF09</p><p>\u5982\u679C\u5728 read set \u4E2D\u7684 socket \u5173\u95ED\u8FDE\u63A5\u4E86\uFF0C\u4F1A\u600E\u6837\uFF1F</p><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C<code>select()</code>\u8FD4\u56DE\u65F6\uFF0Csocket descriptor\u4F1A\u88AB\u8BBE\u7F6E\u4E3A\u201Cready to read\u201D\u3002\u5F53\u4F60\u5BF9\u5176\u6267\u884C<code>recv()</code>\u65F6\uFF0C<code>recv()</code>\u5C06\u8FD4\u56DE<code>0</code>\u3002\u8FD9\u6837\u4F60\u5C31\u77E5\u9053\u5BA2\u6237\u7AEF\u5DF2\u7ECF\u65AD\u5F00\u8FDE\u63A5\u4E86\u3002</p><h3 id="_8-4-\u6570\u636E\u53EA\u4F20\u4E86\u4E00\u90E8\u5206\u600E\u4E48\u529E" tabindex="-1"><a class="header-anchor" href="#_8-4-\u6570\u636E\u53EA\u4F20\u4E86\u4E00\u90E8\u5206\u600E\u4E48\u529E" aria-hidden="true">#</a> 8.4. \u6570\u636E\u53EA\u4F20\u4E86\u4E00\u90E8\u5206\u600E\u4E48\u529E\uFF1F</h3>`,23),Is=s("\u56DE\u60F3\u4E00\u4E0B\u4E4B\u524D\u6211\u8BB2\u8FC7\u7684"),Ps={href:"https://www.chanmufeng.com/posts/network-programming/send-recv.html",target:"_blank",rel:"noopener noreferrer"},xs=n("code",null,"send()",-1),Ss=s("\u51FD\u6570\uFF0C\u6211\u5F53\u65F6\u8BF4\u8FC7\uFF0C"),qs=n("code",null,"send()",-1),As=s("\u53EF\u80FD\u4E0D\u4F1A\u4E00\u4E0B\u5B50\u628A\u4F60\u6240\u6709\u7684\u6570\u636E\u90FD\u53D1\u9001\u51FA\u53BB\uFF0C\u6BD4\u5982\u4F60\u60F3\u653E\u4E00\u4E2A\u957F\u5EA6\u4E3A"),Es=n("code",null,"512",-1),Ts=s("\u5B57\u8282\u7684\u5B57\u7B26\u4E32\uFF0C"),Ns=n("code",null,"send()",-1),Cs=s("\u7684\u8FD4\u56DE\u503C\u5374\u662F"),Ds=n("code",null,"412",-1),Rs=s("\u3002\u4F60\u53EF\u80FD\u4E0D\u7981\u4F1A\u95EE\u5230\uFF0C\u5269\u4E0B\u7684"),Ls=n("code",null,"100",-1),Os=s("\u5B57\u8282\u600E\u4E48\u529E\uFF1F"),Us=t(`<p>\u5176\u5B9E\u8FD9<code>100</code>\u5B57\u8282\u4ECD\u7136\u5728\u4F60\u5C0F\u5F97\u53EF\u601C\u7684\u7F13\u51B2\u533A\uFF08buffer\uFF09\u4E2D\uFF0C\u7B49\u7740\u4F60\u628A\u4ED6\u4EEC\u53D1\u9001\u51FA\u53BB\u5462\uFF01\u6BD5\u7ADF\u4E8B\u4E8B\u65E0\u6CD5\u5982\u4F60\u6240\u613F\uFF0C\u5185\u6838\u4E5F\u4F1A\u6709\u81EA\u5DF1\u7684\u5C0F\u813E\u6C14\uFF0C\u6709\u65F6\u5C31\u662F\u4E0D\u60F3\u628A\u4F60\u7684\u6570\u636E\u4E00\u4E0B\u5B50\u53D1\u9001\u51FA\u53BB\uFF0C\u4F60\u8FD8\u5F97\u81EA\u5DF1\u52A8\u624B\u628A\u5269\u4E0B\u7684\u6570\u636E\u53D1\u9001\u51FA\u53BB\u3002</p><p>\u4F60\u53EF\u4EE5\u8FD9\u4E48\u5199\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">sendall</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">// how many bytes we&#39;ve sent</span>
    <span class="token keyword">int</span> bytesleft <span class="token operator">=</span> <span class="token operator">*</span>len<span class="token punctuation">;</span> <span class="token comment">// how many we have left to send</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>total <span class="token operator">&lt;</span> <span class="token operator">*</span>len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        n <span class="token operator">=</span> <span class="token function">send</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> buf<span class="token operator">+</span>total<span class="token punctuation">,</span> bytesleft<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        total <span class="token operator">+=</span> n<span class="token punctuation">;</span>
        bytesleft <span class="token operator">-=</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token operator">*</span>len <span class="token operator">=</span> total<span class="token punctuation">;</span> <span class="token comment">// return number actually sent here</span>

    <span class="token keyword">return</span> n<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">?</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// return -1 on failure, 0 on success</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C<code>s</code>\u662F\u4F60\u60F3\u53D1\u9001\u6570\u636E\u7684<code>socket</code>\uFF0C<code>buf</code>\u662F\u4FDD\u5B58\u6570\u636E\u7684\u7F13\u51B2\u533A\uFF08buffer\uFF09\uFF0C<code>len</code>\u6307\u5411\u4E00\u4E2A<code>int</code>\u7C7B\u578B\u7684\u53D8\u91CF\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u8BB0\u5F55\u4E86\u7F13\u51B2\u533A\u5269\u4F59\u6570\u636E\u7684\u5927\u5C0F\u3002</p><p><code>send()</code>\u5F02\u5E38\u65F6\u4F1A\u8FD4\u56DE<code>-1</code>\uFF0C\u5E76\u4E14\u6700\u7EC8\u5B9E\u9645\u53D1\u9001\u7684\u5B57\u8282\u6570\u91CF\u4FDD\u5B58\u5728\u4E86<code>len</code>\u53D8\u91CF\u4E2D\u3002<code>sendall()</code>\u4F1A\u7AED\u5C3D\u5168\u529B\u53D1\u9001\u4F60\u6240\u6709\u7684\u6570\u636E\uFF0C\u9664\u975E\u53D1\u751F\u4E86\u9519\u8BEF\u4F1A\u5BFC\u81F4\u7ACB\u5373\u8FD4\u56DE\uFF0C\u5426\u5219<code>len</code>\u7684\u503C\u4E00\u5B9A\u5C31\u662F\u4F60\u60F3\u53D1\u9001\u7684\u6570\u636E\u7684\u957F\u5EA6\u3002</p><p>\u4E3A\u4E86\u5B8C\u6574\u6027\uFF0C\u7ED9\u4E00\u4E2A\u4F7F\u7528<code>sendall()</code>\u51FD\u6570\u7684\u4F8B\u5B50\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Beej!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> len<span class="token punctuation">;</span>

len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sendall</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token operator">&amp;</span>len<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;sendall&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;We only sent %d bytes because of the error!\\n&quot;</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u90E8\u5206\u6570\u636E\u5305\u5230\u8FBE\u65F6\uFF0C\u63A5\u6536\u5668\u7AEF\u4F1A\u53D1\u751F\u4EC0\u4E48\uFF1F</p><p>\u5982\u679C\u6570\u636E\u5305\u662F\u53EF\u53D8\u957F\u5EA6\u7684\uFF0C\u63A5\u6536\u65B9\u5982\u4F55\u77E5\u9053\u4E00\u4E2A\u6570\u636E\u5305\u4F55\u65F6\u7ED3\u675F\uFF0C\u53E6\u4E00\u4E2A\u4F55\u65F6\u5F00\u59CB\uFF1F</p>`,9),Fs=s("\u73B0\u5B9E\u4E16\u754C\u7684\u60C5\u666F\u767E\u51FA\u5F80\u5F80\u6700\u8BA9\u6211\u4EEC\u5934\u75BC\u3002\u4F60\u5FC5\u987B\u5F97\u4F7F\u7528\u5C01\u88C5\uFF08\u5FD8\u8BB0\u8FD9\u4E2A\u6982\u5FF5\u7684\u8BDD"),zs={href:"https://www.chanmufeng.com/posts/network-programming/%E6%BC%AB%E8%B0%88%E7%BD%91%E7%BB%9C.html",target:"_blank",rel:"noopener noreferrer"},Ms=s("\u70B9\u6211"),Bs=s("\uFF09\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u55BD\u3002"),Ks=t('<p>\u4E0B\u6587\u89C1\uFF01</p><h3 id="_8-5-serialization-\u5982\u4F55\u5C01\u88C5\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_8-5-serialization-\u5982\u4F55\u5C01\u88C5\u6570\u636E" aria-hidden="true">#</a> 8.5. Serialization-\u5982\u4F55\u5C01\u88C5\u6570\u636E\uFF1F</h3><p>\u4F60\u53EF\u80FD\u5DF2\u7ECF\u53D1\u73B0\u4E86\uFF0C\u5728\u7F51\u7EDC\u4E2D\u4F20\u9012\u5B57\u7B26\u4E32\u4FE1\u606F\u662F\u6BD4\u8F83\u5BB9\u6613\u7684\uFF0C\u4F46\u662F\u5982\u679C\u4F60\u60F3\u4F20\u9012\u50CFint\u6216\u8005float\u7C7B\u578B\u7684\u4E8C\u8FDB\u5236\u6570\u636E\u600E\u4E48\u529E\u5462\uFF1F\u4F60\u6709\u51E0\u4E2A\u9009\u62E9\uFF1A</p><ol><li>\u4F7F\u7528\u8BF8\u5982 <code>sprintf()</code>\u4E4B\u7C7B\u7684\u51FD\u6570\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u6587\u672C\u7C7B\u578B\uFF0C\u7136\u540E\u628A\u6587\u672C\u53D1\u9001\u51FA\u53BB\u3002\u63A5\u6536\u65B9\u53EF\u4EE5\u4F7F\u7528strtol()\u7B49\u51FD\u6570\u5C06\u6587\u672C\u8F6C\u6362\u56DE\u6570\u5B57\u3002</li><li>\u76F4\u63A5\u4EE5\u539F\u59CB\u6570\u636E\u8FDB\u884C\u4F20\u9001\uFF0C\u5C06\u6307\u5411\u6570\u636E\u7684\u6307\u9488\u4F20\u7ED9send()\u3002</li><li>\u5C06\u6570\u5B57\u7F16\u7801\uFF08encode\uFF09\u4E3A\u53EF\u79FB\u690D\u7684\u4E8C\u8FDB\u5236\u683C\u5F0F\uFF0C\u63A5\u53D7\u8005\u5C06\u5176\u89E3\u7801\uFF08decode\uFF09\u3002</li></ol><p>\u770B\u4E86\u672C\u6587\u7684\u6807\u9898\u4F60\u5C31\u77E5\u9053\u4E86\uFF0C\u6211\u4EEC\u5C06\u9009\u62E9\u7B2C3\u79CD\u3002</p><blockquote><p>\u5728\u5F00\u59CB\u6211\u4EEC\u6FC0\u60C5\u6F8E\u6E43\u7684\u65C5\u7A0B\u4E4B\u524D\uFF0C\u6211\u5E94\u8BE5\u544A\u8BC9\u4F60\u5176\u5B9E\u6709\u73B0\u6210\u7684\u51FD\u6570\u5E93\u53EF\u4EE5\u5E2E\u52A9\u4F60\u505A\u8FD9\u4EF6\u4E8B\u60C5\uFF0C\u5982\u679C\u4F60\u8981\u4ECE\u5934\u5B9E\u73B0\u4E00\u4E2A\u5177\u6709\u53EF\u79FB\u690D\u6027\u5E76\u4E14\u6CA1\u6709bug\u7684\u8FD9\u79CD\u5E93\u53EF\u5C31\u592A\u96BE\u4E86\u3002</p></blockquote><p>\u5B9E\u9645\u4E0A\uFF0C\u4E0A\u97623\u79CD\u65B9\u6CD5\u5404\u6709\u5229\u5F0A\uFF0C\u4F46\u662F\u6211\u66F4\u503E\u5411\u4E8E\u7B2C3\u79CD\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u5148\u804A\u4E00\u804A\u4E24\u5916\u4E24\u79CD\u65B9\u6CD5\u7684\u4F18\u7F3A\u70B9\u3002</p>',7),Xs=s("\u7B2C\u4E00\u79CD\uFF0C\u53D1\u9001\u4E4B\u524D\u5148\u5C06\u6570\u5B57\u8F6C\u6362\u4E3A\u6587\u672C\uFF0C\u4F18\u70B9\u662F\u5F88\u5BB9\u6613\u6253\u5370\u548C\u8BFB\u53D6\u6765\u81EA\u7F51\u7EDC\u7684\u6570\u636E\u3002\u6709\u65F6\u5019\u9002\u5408\u4EBA\u7C7B\u9605\u8BFB\u7684\u4F20\u8F93\u534F\u8BAE\u6BD4\u8F83\u9002\u5408\u4E8E\u5E26\u5BBD\u4E0D\u654F\u611F\uFF08non-bandwidth-intensive\uFF09\u7684\u60C5\u51B5\uFF0C\u6BD4\u5982"),js={href:"https://en.wikipedia.org/wiki/Internet_Relay_Chat",target:"_blank",rel:"noopener noreferrer"},Gs=s("Internet Relay Chat\uFF08IRC\uFF09"),Hs=s("\u3002\u7F3A\u70B9\u5C31\u662F\u6570\u636E\u8F6C\u6362\u901F\u5EA6\u6162\uFF0C\u5E76\u4E14\u9700\u8981\u6BD4\u539F\u672C\u7684\u6570\u5B57\u5F62\u5F0F\u4F7F\u7528\u66F4\u591A\u7684\u7A7A\u95F4\u3002"),Vs=t(`<p>\u7B2C\u4E8C\u79CD\u65B9\u6CD5\u76F8\u5F53\u7B80\u5355\uFF0C\u4F46\u662F\u6781\u5177\u5371\u9669\uFF01\u56E0\u4E3A\u8FD9\u79CD\u65B9\u6CD5\u4E0D\u5177\u5907\u53EF\u79FB\u690D\u6027\uFF0C\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">3490.15926535</span><span class="token punctuation">;</span>
    
<span class="token function">send</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>d<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> d<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* \u4E0D\u5177\u5907\u53EF\u79FB\u690D\u6027\uFF01! */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u6536\u65B9\u63A5\u53D7\u9700\u8981\u8FD9\u6837\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">double</span> d<span class="token punctuation">;</span>

<span class="token function">recv</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>d<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> d<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* \u4E0D\u5177\u5907\u53EF\u79FB\u690D\u6027\uFF01! */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-6-\u6570\u636E\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#_8-6-\u6570\u636E\u5C01\u88C5" aria-hidden="true">#</a> 8.6. \u6570\u636E\u5C01\u88C5</h3><h3 id="_8-7-\u5E7F\u64AD\u6570\u636E\u5305-\u5927\u58F0\u8BF4\u300Chello-world\u300D" tabindex="-1"><a class="header-anchor" href="#_8-7-\u5E7F\u64AD\u6570\u636E\u5305-\u5927\u58F0\u8BF4\u300Chello-world\u300D" aria-hidden="true">#</a> 8.7. \u5E7F\u64AD\u6570\u636E\u5305-\u5927\u58F0\u8BF4\u300CHello\uFF0CWorld\u300D</h3><p>\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u8BA8\u8BBA\u4E86\u600E\u4E48\u4ECE\u4E00\u53F0\u4E3B\u673A\u53D1\u9001\u6570\u636E\u5230\u53E6\u4E00\u53F0\u4E3B\u673A\u3002\u4F46\u662F\uFF0C\u5982\u679C\u6709\u8FD9\u79CD\u53EF\u80FD\uFF0C\u4F60\u80AF\u5B9A\u60F3\u540C\u65F6\u628A\u6570\u636E\u53D1\u9001\u7ED9\u591A\u53F0\u4E3B\u673A\u3002</p><p>\u7528<code>UDP</code>\uFF08\u53EA\u80FD\u7528<code>UDP</code>\uFF0C<code>TCP</code>\u4E0D\u884C\uFF09\u548C\u6807\u51C6\u7684IPv4\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E00\u79CD\u53EB\u505A\u5E7F\u64AD\uFF08<em>broadcasting</em>\uFF09\u7684\u673A\u5236\u6765\u5B9E\u73B0\u3002IPv6\u4E0D\u652F\u6301\u5E7F\u64AD\uFF0C\u4F60\u5F97\u7528\u4E00\u79CD\u66F4\u9AD8\u7EA7\u7684\u6280\u672F\u2014\u2014\u591A\u64AD\uFF08<em>multicasting</em>\uFF09\u6765\u5B9E\u73B0\u3002\u8FD9\u4E2A\u6280\u672F\u6211\u4EEC\u8FD9\u6B21\u4E0D\u4F1A\u8BB2\uFF0C\u6BD5\u7ADF\u6211\u4EEC\u73B0\u5728\u8FD8\u505C\u7559\u5728IPv4\u768432\u4F4D\u9636\u6BB5\u5462\uFF0C\u5C31\u4E0D\u5F02\u60F3\u5929\u5F00\u4E86\u3002</p><p>Wait\uFF01\u4F60\u522B\u6E9C\u8D70\uFF0C\u81EA\u5DF1\u5077\u6478\u5F00\u59CB\u5E7F\u64AD\uFF0C\u6211\u8FD8\u6CA1\u5F00\u59CB\u4ECB\u7ECD\u5462\u3002\u4F60\u5FC5\u987B\u8BBE\u7F6E\u5957\u63A5\u5B57\u9009\u9879<code>SO_BROADCAST</code>\uFF0C\u7136\u540E\u624D\u80FD\u5728\u7F51\u7EDC\u4E0A\u53D1\u9001\u5E7F\u64AD\u6570\u636E\u5305\uFF0C\u8FD9\u5C31\u597D\u6BD4\u662F\u5728\u5BFC\u5F39\u53D1\u5C04\u5F00\u5173\u4E0A\u76D6\u7684\u4E00\u4E2A\u5C0F\u5851\u6599\u7F69\uFF0C\u4F60\u7684\u4E00\u6839\u6307\u5934\u5C31\u53EF\u4EE5\u63A7\u5236\u6240\u6709\uFF01</p><p>\u4F46\u662F\uFF0C\u8BF4\u771F\u7684\uFF0C\u4F7F\u7528\u5E7F\u64AD\u6570\u636E\u5305\u6709\u4E00\u4E2A\u5371\u9669\uFF0C\u56E0\u4E3A\u6BCF\u4E2A\u6536\u5230\u5E7F\u64AD\u5305\u7684\u7CFB\u7EDF\u90FD\u8981\u62E8\u5F00\u4E00\u5C42\u5C42\u50CF\u6D0B\u8471\u76AE\u4E00\u6837\u7684\u5C01\u88C5\uFF0C\u76F4\u5230\u7CFB\u7EDF\u77E5\u9053\u8FD9\u4E2A\u8D44\u6599\u662F\u8981\u53D1\u9001\u5230\u54EA\u4E2A port \u4E3A\u6B62\uFF0C\u7136\u540E\u7CFB\u7EDF\u4F1A\u5F00\u59CB\u5904\u7406\u8FD9\u4E2A\u6570\u636E\u6216\u8005\u5C06\u5176\u4E22\u5F03\u3002</p><p>\u65E0\u8BBA\u600E\u6837\uFF0C\u63A5\u6536\u5E7F\u64AD\u6570\u636E\u5305\u7684\u6BCF\u53F0\u673A\u5668\u90FD\u8981\u505A\u5F88\u591A\u5DE5\u4F5C\uFF0C\u800C\u4E14\u56E0\u4E3A\u5B83\u4EEC\u90FD\u5728\u672C\u5730\u7F51\u7EDC\u4E0A\uFF0C\u6240\u4EE5\u53EF\u80FD\u4F1A\u6709\u5F88\u591A\u673A\u5668\u505A\u5F88\u591A\u4E0D\u5FC5\u8981\u7684\u5DE5\u4F5C\u3002</p><p>\u73B0\u5728\uFF0C\u6709\u5F88\u591A\u65B9\u6CD5\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002\u3002\u3002</p><p>\u7B49\u4E00\u4E0B\uFF0C\u771F\u7684\u6709\u5F88\u591A\u65B9\u6CD5\u5417\uFF1F</p><p>\u90A3\u662F\u4EC0\u4E48\u8868\u60C5\u963F\uFF1F\u8BA9\u6211\u544A\u8BC9\u4F60\u5427\uFF0C\u53D1\u9001\u5E7F\u64AD\u5305\u7684\u65B9\u5F0F\u6709\u5F88\u591A\uFF0C\u6240\u4EE5\u91CD\u70B9\u5C31\u662F\uFF1A\u4F60\u8BE5\u5982\u4F55\u6307\u5B9A\u5E7F\u64AD\u6570\u636E\u7684\u76EE\u5730\u5730\u5740\uFF1F</p><p>\u6709\u4E24\u79CD\u5E38\u7528\u7684\u65B9\u6CD5\uFF1A</p><ol><li>\u5C06\u6570\u636E\u53D1\u9001\u5230\u6307\u5B9A\u5B50\u7F51\u7684\u5E7F\u64AD\u5730\u5740\uFF0C\u5C31\u662F\u628A\u5B50\u7F51\uFF08 subnet&#39;s network\uFF09\u7684\u4E3B\u673A\uFF08 host\uFF09\u90E8\u5206\u5168\u90E8\u586B<code> 1</code>\u3002\u4F8B\u5982\uFF0C\u6211\u7684\u7F51\u7EDC\u662F<code>192.168.1.0</code>\uFF0C\u6211\u7684\u5B50\u7F51\u63A9\u7801\u662F<code>255.255.255.0</code>\uFF0C\u6240\u4EE5\u5730\u5740\u7684\u6700\u540E\u4E00\u4E2A\u5B57\u8282\u662F\u6211\u7684\u4E3B\u673A\u53F7\uFF08\u56E0\u4E3A\u6839\u636E\u7F51\u7EDC\u63A9\u7801\uFF0C\u524D3\u4E2A\u5B57\u8282\u662F\u7F51\u7EDC\u53F7\uFF09\uFF0C\u6240\u4EE5\u6211\u7684\u5E7F\u64AD\u5730\u5740\u662F<code>192.168.1.255</code>\u3002\u5728Unix\u4E0B\uFF0C<code>ifconfig</code>\u4F1A\u544A\u8BC9\u4F60\u8FD9\u4E9B\u4FE1\u606F\u7684\u3002\u4F60\u53EF\u4EE5\u5C06\u8FD9\u79CD\u7C7B\u578B\u7684\u5E7F\u64AD\u6570\u636E\u5305\u53D1\u9001\u5230\u8FDC\u7A0B\u7F51\u7EDC\u548C\u672C\u5730\u7F51\u7EDC\uFF0C\u4F46\u4F60\u4F1A\u9762\u4E34\u6570\u636E\u5305\u88AB\u76EE\u6807\u8DEF\u7531\u5668\u4E22\u5F03\u7684\u98CE\u9669\u3002\uFF08\u5982\u679C\u4ED6\u4EEC\u4E0D\u653E\u5F03\u5B83\uFF0C\u90A3\u8FD9\u4E9B\u5E7F\u64AD\u6570\u636E\u53EF\u80FD\u4F1A\u6DF9\u6CA1\u4ED6\u4EEC\u7684\u5C40\u57DF\u7F51\u3002\uFF09</li><li>\u5C06\u6570\u636E\u53D1\u9001\u5230\u201C\u5168\u5C40\uFF08global\uFF09\u201D\u5E7F\u64AD\u5730\u5740\u3002\u8FD9\u662F<code>255.255.255.255</code>\uFF0C\u5373INADDR_BROADCAST\u3002\u8BB8\u591A\u673A\u5668\u4F1A\u81EA\u52A8\u5C06\u5176\u4E0E\u60A8\u7684\u7F51\u7EDC\u53F7\u7801\u300C\u6309\u4F4D\u4E0E\u300D\uFF0C\u4EE5\u5C06\u5176\u8F6C\u6362\u4E3A\u7F51\u7EDC\u5E7F\u64AD\u5730\u5740\uFF0C\u4F46\u6709\u4E9B\u673A\u5668\u5374\u4E0D\u4F1A\u3002\u5177\u6709\u8BBD\u523A\u610F\u5473\u7684\u662F\uFF0C\u8DEF\u7531\u5668\u4E0D\u4F1A\u628A\u8FD9\u79CD\u7C7B\u578B\u7684\u5E7F\u64AD\u6570\u636E\u5305\u4ECE\u4F60\u7684\u672C\u5730\u7F51\u7EDC\u8F6C\u53D1\u51FA\u53BB\u3002</li></ol>`,16),Ws=s("\u6240\u4EE5\u5982\u679C\u4F60\u60F3\u8981\u5C06\u6570\u636E\u9001\u5230\u5E7F\u64AD\u5730\u5740\uFF0C\u4F46\u662F\u5E76\u6CA1\u6709\u8BBE\u7F6E "),Ys=n("code",null,"SO_BROADCAST",-1),Qs=s(" socket \u9009\u9879\u65F6\u4F1A\u600E\u4E48\u6837\u5462\uFF1F\u597D\uFF0C\u6211\u4EEC\u7528\u4E4B\u524D\u7684 "),$s={href:"https://www.chanmufeng.com/posts/network-programming/Datagram-Sockets.html",target:"_blank",rel:"noopener noreferrer"},Zs=s("talker \u4E0E listener"),Js=s(" \u6765\u7092\u4E2A\u51B7\u996D\uFF0C\u7136\u540E\u770B\u770B\u4F1A\u53D1\u751F\u4EC0\u4E48\u4E8B\u60C5\u3002"),na=t(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ talker <span class="token number">192.168</span>.1.2 foo
sent <span class="token number">3</span> bytes to <span class="token number">192.168</span>.1.2
$ talker <span class="token number">192.168</span>.1.255 foo
sendto: Permission denied
$ talker <span class="token number">255.255</span>.255.255 foo
sendto: Permission denied
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4F60\u6240\u89C1\uFF0C\u6570\u636E\u53D1\u9001\u5F97\u5E76\u4E0D\u987A\u5229......\u56E0\u4E3A\u6211\u4EEC\u6CA1\u6709\u8BBE\u7F6E<code>SO_BROADCAST</code>\u8FD9\u4E2Asocket\u9009\u9879\uFF0C\u8BBE\u7F6E\u4E00\u4E0B\uFF0C\u7136\u540E\u4F60\u5C31\u53EF\u4EE5\u7528<code>sendto()</code>\u5C06\u6570\u636E\u53D1\u9001\u5230\u4EFB\u4F55\u4F60\u60F3\u53D1\u9001\u7684\u5730\u65B9\u53BB\u4E86\u3002</p><p>\u4E8B\u5B9E\u4E0A\uFF0C\u8FD9\u662F<code>UDP</code>\u5E94\u7528\u7A0B\u5E8F\u53EF\u4EE5\u5E7F\u64AD\u548C\u4E0D\u80FD\u5E7F\u64AD\u7684\u552F\u4E00\u533A\u522B\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u6539\u9020\u4E00\u4E0B\u4E4B\u524D\u7684<code>talker</code>\u7A0B\u5E8F\uFF0C\u6DFB\u52A0\u4E00\u4E2A\u8BBE\u7F6E<code>SO_BROADCAST</code>\u5957\u63A5\u5B57\u9009\u9879\u7684\u90E8\u5206\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*
** broadcaster.c -- a datagram &quot;client&quot; like talker.c, except
**                  this one can broadcast
*/</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SERVERPORT</span> <span class="token expression"><span class="token number">4950</span>	</span><span class="token comment">// the port users will be connecting to</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>
	<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> their_addr<span class="token punctuation">;</span> <span class="token comment">// connector&#39;s address information</span>
	<span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span>he<span class="token punctuation">;</span>
	<span class="token keyword">int</span> numbytes<span class="token punctuation">;</span>
	<span class="token keyword">int</span> broadcast <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token comment">//char broadcast = &#39;1&#39;; // if that doesn&#39;t work, try this</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span><span class="token string">&quot;usage: broadcaster hostname message\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>he<span class="token operator">=</span><span class="token function">gethostbyname</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// get the host info</span>
		<span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;gethostbyname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> SOCK_DGRAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// this call is what allows broadcast packets to be sent:</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">setsockopt</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> SOL_SOCKET<span class="token punctuation">,</span> SO_BROADCAST<span class="token punctuation">,</span> <span class="token operator">&amp;</span>broadcast<span class="token punctuation">,</span>
		<span class="token keyword">sizeof</span> broadcast<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;setsockopt (SO_BROADCAST)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	their_addr<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>	 <span class="token comment">// host byte order</span>
	their_addr<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>SERVERPORT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// short, network byte order</span>
	their_addr<span class="token punctuation">.</span>sin_addr <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">in_addr</span> <span class="token operator">*</span><span class="token punctuation">)</span>he<span class="token operator">-&gt;</span>h_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">memset</span><span class="token punctuation">(</span>their_addr<span class="token punctuation">.</span>sin_zero<span class="token punctuation">,</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">.</span>sin_zero<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>numbytes<span class="token operator">=</span><span class="token function">sendto</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
			 <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;sendto&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;sent %d bytes to %s\\n&quot;</span><span class="token punctuation">,</span> numbytes<span class="token punctuation">,</span>
		<span class="token function">inet_ntoa</span><span class="token punctuation">(</span>their_addr<span class="token punctuation">.</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u548C\u4E00\u822C\u7684UDP Client/Server\u6709\u4EC0\u4E48\u4E0D\u540C\u5462\uFF1F</p><p>\u9664\u4E86Client\u53EF\u4EE5\u53D1\u9001\u5E7F\u64AD\u5305\uFF0C\u6CA1\u6709\u4E0D\u540C\uFF01</p><p>\u6240\u4EE5\u4F60\u8D76\u7D27\u6253\u5F00\u4E00\u4E2A\u547D\u4EE4\u7A97\u53E3\uFF0C\u8FD0\u884C\u4E00\u4E0B\u4E4B\u524D\u7684UDP listener\u7A0B\u5E8F\uFF0C\u53E6\u4E00\u4E2A\u7A97\u53E3\u4E2D\u8FD0\u884C <code>broadcaster</code> \u7A0B\u5E8F\uFF0C\u4E4B\u524D\u5931\u8D25\u7684\u64CD\u4F5C\u73B0\u5728\u5C31\u53EF\u4EE5\u987A\u5229\u6267\u884C\u4E86\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ broadcaster <span class="token number">192.168</span>.1.2 foo
sent <span class="token number">3</span> bytes to <span class="token number">192.168</span>.1.2
$ broadcaster <span class="token number">192.168</span>.1.255 foo
sent <span class="token number">3</span> bytes to <span class="token number">192.168</span>.1.255
$ broadcaster <span class="token number">255.255</span>.255.255 foo
sent <span class="token number">3</span> bytes to <span class="token number">255.255</span>.255.255
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-\u5E38\u89C1\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_9-\u5E38\u89C1\u95EE\u9898" aria-hidden="true">#</a> 9. \u5E38\u89C1\u95EE\u9898</h2><p><strong>1. \u6211\u4ECE\u54EA\u83B7\u53D6\u8FD9\u4E9B\u5934\u6587\u4EF6\u8D44\u6599\uFF1F</strong></p><p>\u5982\u679C\u4F60\u7684\u7CFB\u7EDF\u4E2D\u6CA1\u6709\u81EA\u5E26\u8FD9\u4E9B\u6587\u4EF6\uFF0C\u6216\u8BB8\u4F60\u6839\u672C\u5C31\u4E0D\u9700\u8981\u4ED6\u4EEC\u3002\u4F60\u5F97\u770B\u4E00\u4E0B\u4F60\u5E73\u53F0\u7684\u4F7F\u7528\u624B\u518C\u3002</p><p>\u5BF9\u4E86\uFF0C\u5982\u679C\u4F60\u662F\u4E3AWindows\u5F00\u53D1\u7A0B\u5E8F\uFF0C\u4F60\u53EA\u9700\u8981<code>\\#include &lt;winsock.h&gt;</code>\u3002</p><p><strong>2. bind()\u62A5\u201CAddress already in use\u201D\u5F02\u5E38\u600E\u4E48\u529E\uFF1F</strong></p><p>\u4F60\u5FC5\u987B\u5BF9\u6B63\u5728\u76D1\u542C\u7684socket\u4F7F\u7528<code>setsockopt()</code>\u51FD\u6570\uFF0C\u5E76\u8BBE\u7F6E <code>SO_REUSEADDR</code> \u9009\u9879\u3002\u770B\u4E00\u4E0B<code>bind()</code>\u7AE0\u8282\u548C<code>select()</code>\u7AE0\u8282\u4E2D\u7684\u4F8B\u5B50\uFF0C\u4F60\u5C31\u660E\u767D\u4E86\u3002</p><p><strong>3. \u6211\u8BE5\u5982\u4F55\u83B7\u53D6\u5230\u7CFB\u7EDF\u4E2D\u5DF2\u7ECF\u6253\u5F00\u7684socket\u5217\u8868\uFF1F</strong></p><p>\u4F7F\u7528<code>netstat</code>\u547D\u4EE4\u3002\u4F7F\u7528\u7EC6\u8282\u4F60\u9700\u8981\u53C2\u8003man\u624B\u518C\uFF0C\u4E0D\u8FC7\u4F60\u53EA\u8981\u8F93\u5165\u4E0B\u5217\u6307\u4EE4\u5C31\u80FD\u83B7\u53D6\u5230\u4E00\u4E9B\u4E0D\u9519\u7684\u4FE1\u606F\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">netstat</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4. \u6211\u8BE5\u5982\u4F55\u67E5\u770B\u8DEF\u7531\u8868\uFF08routing table\uFF09\uFF1F</strong></p><p>\u6267\u884C<code>route</code>\u547D\u4EE4\uFF08\u591A\u6570\u7684Linux\u7CFB\u7EDF\u662F\u5728<code>/sbin</code>\u4E0B\uFF09\uFF0C\u6216\u8005<code>netstat -r</code>\u6307\u4EE4\u3002</p><p><strong>5. \u5982\u679C\u6211\u53EA\u6709\u4E00\u53F0\u7535\u8111\uFF0C\u6211\u8BE5\u600E\u4E48\u8FD0\u884CClient/Server\u7A0B\u5E8F\uFF1F\u6211\u9700\u8981\u8FDE\u63A5\u5916\u7F51\u5417\uFF1F</strong></p><p>\u5E78\u8FD0\u7684\u4E8B\uFF0C\u6240\u6709\u7CFB\u7EDF\u90FD\u6709\u4E00\u4E2A\u56DE\u73AF\uFF08loopback\uFF09\u865A\u62DF\u7F51\u7EDC\u201C\u8BBE\u5907\u201D\uFF0C\u8FD9\u4E2A\u8BBE\u5907\u4F4D\u4E8E\u5185\u6838\u4E2D\uFF0C\u5E76\u5047\u88C5\u81EA\u5DF1\u662F\u4E2A\u7F51\u5361\uFF08\u8FD9\u5BB6\u4F19\u5C31\u662F<code>ifconfig</code>\u4E2D\u5217\u51FA\u7684\u201C<code>lo</code>\u201D\uFF09\u3002</p><p><img src="http://qiniu.chanmufeng.com/2022-10-24-100623.png" alt="image-20221024180623943" loading="lazy"></p><p>\u5047\u8BBE\u4F60\u767B\u9646\u4E00\u53F0\u540D\u4E3A\u201Cgoat\u201D\u7684\u8BBE\u5907\uFF0C\u5E76\u5728\u4E00\u4E2A\u7A97\u53E3\u4E2D\u8FD0\u884C\u4E86Client\u7A0B\u5E8F\uFF0C\u5728\u53E6\u4E00\u4E2A\u7A97\u53E3\u4E2D\u8FD0\u884C\u4E86Server\u7AEF\u7A0B\u5E8F\u3002\u6216\u8005\u4F60\u4E5F\u53EF\u4EE5\u5728\u540E\u53F0\u8FD0\u884CServer\u7A0B\u5E8F\uFF08\u7528<code>server &amp;</code>\uFF09\uFF0C\u5728\u53E6\u4E00\u4E2A\u7A97\u53E3\u4E2D\u8FD0\u884CClient\u7A0B\u5E8F\u3002</p><p><code>loopback\u8BBE\u5907</code>\u7684\u7528\u5904\u5C31\u662F\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>client goat</code> \u6216\u8005 <code>client localhost</code> \uFF08\u56E0\u4E3A\u201C<code>localhost</code>\u201D\u5DF2\u7ECF\u5728\u4F60\u7684<code>/etc/hosts</code>\u4E2D\u5B9A\u4E49\u597D\u4E86\uFF09\uFF0C\u8FD9\u6837\u4F60\u5C31\u53EF\u4EE5\u8BA9client\u5728\u6CA1\u6709\u7F51\u7EDC\u7684\u60C5\u51B5\u4E0B\u4E5F\u53EF\u4EE5\u4E0Eserver\u901A\u4FE1\u3002</p><p>\u7B80\u800C\u8A00\u4E4B\uFF0C\u4E0D\u9700\u8981\u6539\u53D8\u4EFB\u4F55\u4EE3\u7801\uFF0C\u5C31\u53EF\u4EE5\u8BA9\u4F60\u7684\u7A0B\u5E8F\u5728\u6CA1\u6709\u7F51\u7EDC\u7684\u5355\u673A\u4E0A\u8FD0\u884C\uFF01</p><p><strong>6. \u5982\u679C\u8FDC\u7A0B\u65AD\u5F00\u4E86\u8FDE\u63A5\uFF0C\u6211\u8BE5\u600E\u4E48\u77E5\u9053\u5462\uFF1F</strong></p><p>\u4F60\u53EF\u4EE5\u5206\u8FA8\uFF0C\u56E0\u4E3A<code>recv()</code>\u4F1A\u8FD4\u56DE<code>0</code>\u3002</p><p><strong>7. \u6211\u81EA\u5DF1\u600E\u4E48\u5B9E\u73B0\u201Cping\u201D\u8FD9\u4E2A\u5C0F\u5DE5\u5177\uFF1F\u5565\u662FICMP\uFF1F\u6211\u4ECE\u54EA\u513F\u80FD\u5B66\u5230\u66F4\u591A\u5173\u4E8Eraw scoket\u548CSOCK_RAW\u7684\u77E5\u8BC6\uFF1F</strong></p>`,28),sa=s("\u4F60\u5BF9"),aa=n("code",null,"raw socket",-1),ea=s("\u7684\u5168\u90E8\u7591\u95EE\u90FD\u53EF\u4EE5\u5728 "),ta={href:"https://beej.us/guide/bgnet/html/#books",target:"_blank",rel:"noopener noreferrer"},oa=s("W. Richard Stevens\u2019 UNIX Network Programming books"),pa=s("\u8FD9\u672C\u4E66\u4E2D\u627E\u5230\u7B54\u6848\u3002\u5728Stevens\u2019 UNIX Network Programming\u6E90\u4EE3\u7801\u7684"),ca=n("code",null,"ping",-1),ia=s("\u5B50\u76EE\u5F55\u4E2D\uFF0C\u4F60\u53EF\u4EE5\u627E\u5230"),la={href:"http://www.unpbook.com/src.html",target:"_blank",rel:"noopener noreferrer"},da=s("ping\u7684\u6E90\u7801"),ra=s("\u3002"),ua=n("p",null,[n("strong",null,"8. \u6211\u8BE5\u5982\u4F55\u6539\u53D8\u6216\u7F29\u77ED\u8C03\u7528connect()\u7684\u8FC7\u671F\u65F6\u95F4\uFF1F")],-1),ka=s("\u8FD9\u4E2A\u95EE\u9898 W. Richard Stevens \u5DF2\u7ECF\u56DE\u7B54\u4E86\uFF0C\u6211\u4EEC\u5C31\u4E0D\u72D7\u5C3E\u7EED\u8C82\u4E86\u3002\u4F60\u53EF\u4EE5\u53C2\u8003UNIX Network Programming\u6E90\u4EE3\u7801\u4E2D\u7684 "),va={href:"http://www.unpbook.com/src.html",target:"_blank",rel:"noopener noreferrer"},ma=n("code",null,"lib/connect_nonb.c",-1),ba=s(),ha=s("\u3002"),_a=t("<p>\u5176\u8981\u70B9\u662F\uFF0C\u4F7F\u7528<code>socket()</code>\u521B\u5EFA\u4E00\u4E2Asocket descriptor\uFF0C\u5C06\u5176\u8BBE\u7F6E\u4E3A<code>non-blocking</code>\uFF0C\u8C03\u7528<code>connect()</code>\uFF0C\u5982\u679C\u4E00\u5207\u987A\u5229\uFF0C<code>connect()</code>\u5C06\u7ACB\u5373\u8FD4\u56DE<code>-1</code>\uFF0C<code>errno</code>\u5C06\u8BBE\u7F6E\u4E3A<code>EINPROGRESS</code>\u3002\u7136\u540E\uFF0C\u4F60\u53EF\u4EE5\u8C03\u7528<code>select()</code>\uFF0C\u5E76\u5728<code>read</code>\u548C<code>write</code>\u96C6\u5408\u4E2D\u4F20\u9012socket descriptor\u3002\u5982\u679C\u6CA1\u6709\u8D85\u65F6\uFF0C\u5219\u8868\u793A<code>connect()</code>\u8C03\u7528\u5DF2\u5B8C\u6210\u3002\u6B64\u65F6\uFF0C\u4F60\u5FC5\u987B\u4F7F\u7528<code>getsockopt()</code>\u8BBE\u7F6E<code>SO_ERROR</code>\u9009\u9879\uFF0C\u4EE5\u83B7\u53D6<code>connect()</code>\u8C03\u7528\u7684\u8FD4\u56DE\u503C\uFF0C\u5982\u679C\u6CA1\u6709\u9519\u8BEF\uFF0C\u8BE5\u503C\u5E94\u8BE5\u4E3A<code>0</code>\u3002</p><p>\u6700\u540E\uFF0C\u5728\u4F60\u5F00\u59CB\u901A\u8FC7socket\u4F20\u8F93\u6570\u636E\u4E4B\u524D\uFF0C\u4F60\u53EF\u80FD\u59DC\u518D\u5C06\u5176\u8BBE\u7F6E\u4E3A<code>blocking</code>\u3002</p><p>\u8FD9\u6837\u505A\u6709\u4E00\u4E2A\u597D\u5904\uFF0C\u5C31\u662F\u8BA9\u4F60\u7684\u7A0B\u5E8F\u5728<code>connecting</code>(\u8FDE\u63A5\u671F\u95F4)\u4E5F\u53EF\u4EE5\u505A\u522B\u7684\u4E8B\u60C5\u3002\u6BD4\u5982\uFF1A\u4F60\u53EF\u4EE5\u5C06<code>timeout</code>\u8BBE\u7F6E\u4E3A500ms\uFF0C\u5E76\u5728\u6BCF\u6B21<code>timeout</code>\u65F6\u66F4\u65B0\u5C4F\u5E55\u4E0A\u7684\u63D0\u793A\u4FE1\u606F\uFF0C\u7136\u540E\u518D\u6B21\u8C03\u7528<code>select()</code>\u3002\u5F53\u4F60\u8C03\u7528<code>select()</code>\u5E76\u8D85\u65F6\uFF08\u4F8B\u5982\uFF0C\u8FBE\u523020\u6B21\uFF09\u65F6\uFF0C\u4F60\u5C31\u77E5\u9053\u662F\u65F6\u5019\u653E\u5F03\u8FD9\u4E2A\u8FDE\u63A5\u4E86\u3002</p><p>\u5F3A\u70C8\u5EFA\u8BAE\u4F60\u770B\u770BStevens\u7684\u6E90\u7801\uFF0C\u627E\u4E2A\u597D\u4F8B\u5B50\u7814\u7A76\u4E00\u4E0B\u3002</p><p><strong>9. \u6211\u8BE5\u600E\u4E48\u5199Windows\u7F51\u7EDC\u7A0B\u5E8F\uFF1F</strong></p><p>\u9996\u5148\uFF0C\u5378\u8F7DWindows\uFF0C\u7136\u540E\u88C5\u4E00\u4E2ALinux\u6216\u8005BSD\u3002\u3002\u3002\u3002\u54C8\u54C8\u54C8\u54C8\uFF0C\u5F00\u4E2A\u73A9\u7B11\u3002</p>",6),fa=s("\u7ED9\u4F60\u4E2A\u94FE\u63A5\uFF0C\u4F60\u770B\u4E00\u4E0B"),ga={href:"https://beej.us/guide/bgnet/html/#windows",target:"_blank",rel:"noopener noreferrer"},ya=s("section on building for Windows"),wa=s(" \u3002"),Ia=n("p",null,[n("strong",null,"10. \u6211\u8BE5\u5982\u4F55\u5728Solaris/SunOS\u4E0A\u7F16\u8BD1\u7A0B\u5E8F\uFF1F\u6211\u8FDB\u884C\u7F16\u8BD1\u7684\u65F6\u5019\u603B\u62A5linker error")],-1),Pa=s("\u94FE\u63A5\u5668\u9519\u8BEF\u53D1\u751F\u662F\u56E0\u4E3A Sun \u7CFB\u7EDF\u4E0D\u4F1A\u5728\u5957\u63A5\u5B57\u5E93\u4E2D\u81EA\u52A8\u7F16\u8BD1\u3002\u53C2\u8003\u4E00\u4E0B"),xa={href:"https://beej.us/guide/bgnet/html/#solaris",target:"_blank",rel:"noopener noreferrer"},Sa=s("\u8FD9\u7BC7\u6587\u7AE0"),qa=s("\uFF0C\u5176\u4E2D\u4E8E\u5982\u4F55\u5904\u7406\u8FD9\u4E2A\u95EE\u9898\u7684\u8303\u4F8B\u3002"),Aa=t(`<h2 id="_10-man\u624B\u518C" tabindex="-1"><a class="header-anchor" href="#_10-man\u624B\u518C" aria-hidden="true">#</a> 10. man\u624B\u518C</h2><h3 id="_10-1-accept" tabindex="-1"><a class="header-anchor" href="#_10-1-accept" aria-hidden="true">#</a> 10.1. accept()</h3><p>\u63A5\u53D7\u4FA6\u542C\u5957\u63A5\u5B57\u4E0A\u4F20\u5165\u7684\u8FDE\u63A5\u3002</p><h4 id="_10-1-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-1-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.1.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> <span class="token operator">*</span>addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-1-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-1-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.1.2. \u8BF4\u660E</h4><p>\u4E00\u65E6\u4F60\u62FF\u5230\u4E86 SOCK_STREAM \u7C7B\u578B\u7684socket\uFF0C \u5E76\u5C06 socket \u8BBE\u5B9A\u597D\u53EF\u4EE5\u7528\u4F86\u76D1\u542C\uFF08 listen()\uFF09 \u8FDB\u5165\u7684\u8FDE\u63A5\uFF0C\u7136\u540E\u4F60\u5C31\u80FD\u8C03\u7528 accept() \u83B7\u5F97\u4E00\u4E2A\u65B0\u7684 socket descriptor\uFF0C\u4FBF\u4E8E\u4E0E\u540E\u7EED\u65B0\u8FDE\u63A5 client \u7684\u901A\u4FE1\u3002</p><p>\u539F\u672C\u88AB\u76D1\u542C\u7684socket\u4ECD\u7136\u4F1A\u88AB\u4FDD\u7559\uFF0C\u5F53\u6709\u65B0\u7684\u8FDE\u63A5\u8FDB\u6765\u65F6\uFF0C\u901A\u8FC7\u8C03\u7528accept()\u83B7\u53D6\u8FD9\u4E2A\u65B0\u8FDE\u63A5\u3002\u4E3B\u8981\u7684\u53C2\u6570\u5982\u4E0B\u6240\u793A\uFF1A</p><ul><li>s\uFF1Alisten()\u4E2D\u7684socket descriptor\u3002</li><li>addr\uFF1A\u8FD9\u91CC\u5199\u5165\u8FDE\u63A5\u5230\u4F60\u8FD9\u91CC\u7684client\u7684\u5730\u5740\u3002</li><li>addrlen\uFF1A\u8FD9\u91CC\u4F1A\u586B\u5165addr\u53C2\u6570\u4E2D\u4F20\u56DE\u7684\u6570\u636E\u7684\u5927\u5C0F\u3002\u5047\u8BBE\u4F60\u5F97\u5230\u4E86\u4E00\u4E2Astructsockaddr_in\uFF0C\u4F60\u53EF\u4EE5\u5B89\u5168\u5730\u5FFD\u7565\u5B83\uFF0C\u56E0\u4E3A\u8FD9\u662F\u4F60\u4E3Aaddr\u4F20\u5165\u7684\u7C7B\u578B\u3002</li></ul><p>accept() \u901A\u5E38\u4F1A\u963B\u585E\uFF0C\u800C\u4F60\u53EF\u4EE5\u4F7F\u7528 select() \u4E8B\u5148\u53D6\u5F97 listen \u4E2D\u7684 socket descriptor \u72B6\u6001\uFF0C\u68C0\u67E5 socket \u662F\u5426\u5DF2\u7ECF\u53EF\u8BFB\uFF08ready to read\uFF09\u3002\u82E5\u5DF2\u7ECF\u53EF\u8BFB\uFF0C\u5219\u8868\u793A\u6709\u65B0\u7684\u8FDE\u63A5\u6B63\u5728\u7B49\u5F85\u88AB accept()\uFF01\u53E6\u4E00\u4E2A\u65B9\u5F0F\u662F\u5C06 listen \u4E2D\u7684 socket \u4F7F\u7528 fcntl() \u8BBE\u7F6E O_NONBLOCK \u9009\u9879\uFF0C\u7136\u540E listen \u4E2D\u7684 socket descriptor \u5C31\u4E0D\u4F1A\u9020\u6210 block\uFF0C\u800C\u662F\u8FD4\u56DE -1\uFF0C\u5E76\u5C06 errno \u8BBE\u7F6E\u4E3A EWOULDBLOCK\u3002</p><p>\u5982\u679Caccept()\u8FD4\u56DE\u6210\u529F\uFF0C\u5176\u8FD4\u56DE\u503C\u662F\u7531\u5185\u6838\u751F\u6210\u7684\u4E00\u4E2A\u5168\u65B0\u7684\u63CF\u8FF0\u7B26\uFF0C\u4EE3\u8868\u4E0E\u6240\u8FD4\u56DE\u5BA2\u6237\u7AEF\u7684TCP\u8FDE\u63A5\u3002accept()\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u6210\u4E3A\u76D1\u542C\u5957\u63A5\u5B57\uFF0C\u79F0\u8FD4\u56DE\u503C\u4E3A\u5DF2\u8FDE\u63A5\u5957\u63A5\u5B57\u3002\u533A\u5206\u4E24\u4E2A\u5957\u63A5\u5B57\u5F88\u91CD\u8981\uFF0C\u4E00\u4E2A\u670D\u52A1\u5668\u901A\u5E38\u5728\u5176\u751F\u547D\u5468\u671F\u5185\u521B\u5EFA\u4E00\u4E2A\u76D1\u542C\u5957\u63A5\u5B57\u3002\u7531 accept() \u8FD4\u56DE\u7684 socket descriptor \u662F\u5982\u5047\u5305\u6362\u7684 socket descriptor\uFF0C\u5F00\u542F\u5E76\u548C\u8FDC\u7A0B\u4E3B\u673A\u5EFA\u7ACB\u8FDE\u63A5\uFF0C\u5982\u679C\u4F60\u8981\u65AD\u5F00\u548C client \u7684\u8FDE\u63A5\uFF0C\u5FC5\u987B\u4F7F\u7528 close()\u3002</p><h4 id="_10-1-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-1-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.1.3. \u8FD4\u56DE\u503C</h4><p>accept() \u8FD4\u56DE\u65B0\u8FDE\u63A5\u7684 socket descriptor\uFF0C\u53D1\u751F\u5F02\u5E38\u65F6\u8FD4\u56DE -1\uFF0C\u5E76\u5C06 errno \u8BBE\u7F6E\u4E3A\u5408\u9002\u7684\u503C\u3002</p><h4 id="_10-1-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-1-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.1.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> their_addr<span class="token punctuation">;</span>
<span class="token class-name">socklen_t</span> addr_size<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
<span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> new_fd<span class="token punctuation">;</span>

<span class="token comment">// first, load up address structs with getaddrinfo():</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>  <span class="token comment">// use IPv4 or IPv6, whichever</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>     <span class="token comment">// fill in my IP for me</span>

<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> MYPORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// make a socket, bind it, and listen on it:</span>

sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> BACKLOG<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// now accept an incoming connection:</span>

addr_size <span class="token operator">=</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">;</span>
new_fd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>addr_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ready to communicate on socket descriptor new_fd!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-1-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-1-5-\u53C2\u9605" aria-hidden="true">#</a> 10.1.5. \u53C2\u9605</h4>`,16),Ea={href:"https://beej.us/guide/bgnet/html/#socketman",target:"_blank",rel:"noopener noreferrer"},Ta=n("code",null,"socket()",-1),Na=s(", "),Ca={href:"https://beej.us/guide/bgnet/html/#getaddrinfoman",target:"_blank",rel:"noopener noreferrer"},Da=n("code",null,"getaddrinfo()",-1),Ra=s(", "),La={href:"https://beej.us/guide/bgnet/html/#listenman",target:"_blank",rel:"noopener noreferrer"},Oa=n("code",null,"listen()",-1),Ua=s(", "),Fa={href:"https://beej.us/guide/bgnet/html/#sockaddr_inman",target:"_blank",rel:"noopener noreferrer"},za=n("code",null,"struct sockaddr_in",-1),Ma=t(`<h3 id="_10-2-bind" tabindex="-1"><a class="header-anchor" href="#_10-2-bind" aria-hidden="true">#</a> 10.2. bind()</h3><p>\u5C06socket\u4E0EIP\u5730\u5740\u548C\u7AEF\u53E3\u53F7\u5173\u8054\u3002</p><h4 id="_10-2-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-2-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.2.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>my_addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-2-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-2-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.2.2. \u8BF4\u660E</h4><p>\u5F53\u8FDC\u7A0B\u8BA1\u7B97\u673A\u60F3\u8981\u8FDE\u63A5\u5230\u4F60\u7684\u670D\u52A1\u5668\u7A0B\u5E8F\u65F6\uFF0C\u5B83\u9700\u8981\u4E24\u6761\u4FE1\u606F\uFF1A<strong>IP\u5730\u5740</strong>\u548C<strong>\u7AEF\u53E3\u53F7</strong>\u3002<code>bind()</code>\u8C03\u7528\u5C31\u662F\u5E2E\u4F60\u505A\u8FD9\u4EF6\u4E8B\u60C5\u3002</p><p>\u7AEF\u53E3\u53F7\u662F\u5185\u6838\u7528\u6765\u786E\u8BA4\u5C06\u6536\u5230\u7684\u6570\u636E\u5305\u4EA4\u7ED9\u54EA\u4E2A\u5177\u4F53\u8FDB\u7A0B\u7684<code>socket descriptor</code>\u7684\u4F9D\u636E\u3002</p><blockquote><p>\u901A\u5E38\u5728\u5199\u670D\u52A1\u7AEF\u7A0B\u5E8F\u7684\u65F6\u5019\u6211\u4EEC\u624D\u9700\u8981\u8FDB\u884C\u5173\u8054\uFF0C\u5BA2\u6237\u7AEF\u7A0B\u5E8F\u4E0D\u9700\u8981\u6211\u4EEC\u624B\u52A8\u7ED1\u5B9A\u7AEF\u53E3\uFF0C\u76F4\u63A5<code>connect()</code>\u5C31\u597D\u4E86\u3002</p></blockquote><p>\u9996\u5148\uFF0C\u8C03\u7528<code>getaddrinfo()</code>\u52A0\u8F7D\u4E00\u4E2A\u5305\u542B\u76EE\u6807\u5730\u5740\u548C\u7AEF\u53E3\u4FE1\u606F\u7684\u7ED3\u6784<code>sockaddr</code>\uFF0C\u7136\u540E\u8C03\u7528<code>socket()</code>\u5F97\u5230<code>socket descriptor</code>\uFF0C\u7136\u540E\u5C06<code>socket</code>\u548C\u5730\u5740\u4F20\u9012\u5230<code>bind()</code>\u4E2D\uFF0CIP\u5730\u5740\u548C\u7AEF\u53E3\u5C31\u4F1A\u795E\u5947\u5730\u88AB\u7ED1\u5B9A\u5230socket\u4E0A\uFF01</p><p>\u5982\u679C\u4F60\u4E0D\u77E5\u9053\u4F60\u7684IP\u5730\u5740\uFF0C\u6216\u8005\u4F60\u77E5\u9053\u4F60\u7684\u673A\u5668\u4E0A\u53EA\u6709\u4E00\u4E2AIP\u5730\u5740\uFF0C\u6216\u8005\u4F60\u4E0D\u5728\u4E4E\u4F7F\u7528\u673A\u5668\u7684\u54EA\u4E00\u4E2AIP\u5730\u5740\u7684\u8BDD\uFF0C\u4F60\u53EF\u4EE5\u7B80\u5355\u5730\u5C06\u63D0\u793A\u53C2\u6570\u4E2D\u7684<code>AI_PASSIVE</code>\u6807\u8BC6\u4F20\u9012\u7ED9<code>getaddrinfo()</code>\u3002\u8FD9\u5176\u5B9E\u662F\u7528\u4E00\u4E2A\u7279\u6B8A\u503C\u586B\u5145<code>struct sockaddr</code>\u7684IP\u5730\u5740\u90E8\u5206\uFF0C\u8BE5\u503C\u544A\u8BC9<code>bind()</code>\u5B83\u5E94\u8BE5\u81EA\u52A8\u586B\u5145\u8BE5\u4E3B\u673A\u7684IP\u5730\u5740\u3002</p><p>\u4EC0\u4E48\u4EC0\u4E48\uFF1F\u4F60\u60F3\u77E5\u9053\u5728<code>struct sockaddr</code>\u7684IP\u5730\u5740\u4E2D\u52A0\u8F7D\u4E86\u4EC0\u4E48\u7279\u6B8A\u503C\uFF0C\u4F7F\u5176\u81EA\u52A8\u7528\u5F53\u524D\u4E3B\u673A\u7684IP\u586B\u5145\u5730\u5740\uFF1F\u6211\u4F1A\u544A\u8BC9\u4F60\uFF0C\u4F46\u8BF7\u8BB0\u4F4F\uFF0C\u8FD9\u53EA\u6709\u5728\u4F60\u624B\u52A8\u586B\u5199<code>struct sockaddr</code>\u7684\u65F6\u5019\u624D\u4F1A\u8FD9\u6837\uFF1B\u5426\u5219\u4E56\u4E56\u7167\u6211\u4E0A\u8FB9\u8BF4\u7684\uFF0C\u4F7F\u7528<code>getaddrinfo()</code>\u7684\u8FD4\u56DE\u7ED3\u679C\u3002</p><p>\u5728IPv4\u4E2D\uFF0C<code>struct sockaddr_in</code> \u7ED3\u6784\u7684 <code>sin_addr.s_addr</code> \u5B57\u6BB5\u88AB\u8BBE\u7F6E\u6210\u4E86<code>INADDR_ANY</code>\u3002\u5728IPv6\u4E2D\uFF0C<code>struct sockaddr_in6</code>\u7ED3\u6784\u7684<code>sin6_addr</code>\u5B57\u6BB5\u88AB\u8D4B\u503C\u6210\u5168\u5C40\u53D8\u91CF<code>in6addr_any</code>\u3002\u6216\u8005\uFF0C\u5982\u679C\u4F60\u58F0\u660E\u4E86\u4E00\u4E2A\u65B0\u7684 <code>struct in6_addr</code>\uFF0C\u4F60\u53EF\u4EE5\u5C06\u5176\u521D\u59CB\u5316\u4E3A<code>IN6ADDR_ANY_INIT</code>\u3002</p><p>\u6700\u540E\uFF0C<code>addrlen</code>\u53C2\u6570\u5E94\u8BE5\u8BBE\u7F6E\u4E3A <code>sizeof my_addr</code>\u3002</p><h4 id="_10-2-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-2-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.2.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u8FD4\u56DE<code>0</code>\uFF0C\u53D1\u751F\u5F02\u5E38\u65F6\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u5C06 <code>errno</code> \u8BBE\u7F6E\u4E3A\u5408\u9002\u7684\u503C\u3002</p><h4 id="_10-2-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-2-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.2.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// modern way of doing things with getaddrinfo()</span>

<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>

<span class="token comment">// first, load up address structs with getaddrinfo():</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>  <span class="token comment">// use IPv4 or IPv6, whichever</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>     <span class="token comment">// fill in my IP for me</span>

<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// make a socket:</span>
<span class="token comment">// (you should actually walk the &quot;res&quot; linked list and error-check!)</span>

sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// bind it to the port we passed in to getaddrinfo():</span>

<span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// example of packing a struct by hand, IPv4</span>

<span class="token keyword">struct</span> <span class="token class-name">sockaddr_in</span> myaddr<span class="token punctuation">;</span>
<span class="token keyword">int</span> s<span class="token punctuation">;</span>

myaddr<span class="token punctuation">.</span>sin_family <span class="token operator">=</span> AF_INET<span class="token punctuation">;</span>
myaddr<span class="token punctuation">.</span>sin_port <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span><span class="token number">3490</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// you can specify an IP address:</span>
<span class="token function">inet_pton</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> <span class="token string">&quot;63.161.169.137&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>myaddr<span class="token punctuation">.</span>sin_addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// or you can let it automatically select one:</span>
myaddr<span class="token punctuation">.</span>sin_addr<span class="token punctuation">.</span>s_addr <span class="token operator">=</span> INADDR_ANY<span class="token punctuation">;</span>

s <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>PF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bind</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>myaddr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> myaddr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-2-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-2-5-\u53C2\u9605" aria-hidden="true">#</a> 10.2.5. \u53C2\u9605</h4>`,19),Ba={href:"https://beej.us/guide/bgnet/html/#getaddrinfoman",target:"_blank",rel:"noopener noreferrer"},Ka=n("code",null,"getaddrinfo()",-1),Xa=s(", "),ja={href:"https://beej.us/guide/bgnet/html/#socketman",target:"_blank",rel:"noopener noreferrer"},Ga=n("code",null,"socket()",-1),Ha=s(", "),Va={href:"https://beej.us/guide/bgnet/html/#sockaddr_inman",target:"_blank",rel:"noopener noreferrer"},Wa=n("code",null,"struct sockaddr_in",-1),Ya=s(", "),Qa={href:"https://beej.us/guide/bgnet/html/#sockaddr_inman",target:"_blank",rel:"noopener noreferrer"},$a=n("code",null,"struct in_addr",-1),Za=t(`<h3 id="_10-3-connect" tabindex="-1"><a class="header-anchor" href="#_10-3-connect" aria-hidden="true">#</a> 10.3. connect()</h3><p>\u5C06\u4F60\u672C\u5730\u7684socket\u8FDE\u63A5\u5230\u670D\u52A1\u5668\u3002</p><h4 id="_10-3-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-3-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.3.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>serv_addr<span class="token punctuation">,</span>
            <span class="token class-name">socklen_t</span> addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-3-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-3-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.3.2. \u8BF4\u660E</h4><p>\u5F53\u4F60\u8C03\u7528<code>socket()</code>\u5F97\u5230\u4E00\u4E2Asocket descriptor\u4E4B\u540E\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>connect()</code>\u8FD9\u4E2A\u7CFB\u7EDF\u8C03\u7528\u8FDE\u63A5\u8FD9\u4E2Asocket\u5230\u8FDC\u7A0B\u670D\u52A1\u5668\u3002\u4F60\u9700\u8981\u505A\u7684\u5C31\u662F\u628Asocket descriptor\u548C\u670D\u52A1\u7AEF\u5730\u5740\u4F20\u9012\u7ED9<code>connect()</code>\u3002\u5BF9\u4E86\uFF0C\u8FD8\u6709\u5730\u5740\u7684\u957F\u5EA6\uFF0C\u4E5F\u5F97\u901A\u8FC7\u53C2\u6570\u7684\u5F62\u5F0F\u4F20\u9012\u3002</p><p>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528<code>getaddrinfo()</code>\u6765\u83B7\u53D6\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u4F46\u662F\u5982\u679C\u4F60\u975E\u8981\u624B\u52A8\u88C5\u586B<code>struct sockaddr</code>\u4E5F\u4E0D\u662F\u4E0D\u884C\u3002</p><p>\u5982\u679C\u4F60\u6CA1\u6709\u5BF9socket descriptor\u8C03\u7528<code>bind() </code>\u65B9\u6CD5\uFF0C\u5B83\u4F1A\u548C\u4F60\u7684IP\u5730\u5740\u4EE5\u53CA\u968F\u673A\u7AEF\u53E3\u53F7\u8FDB\u884C\u7ED1\u5B9A\u3002</p><p>\u5982\u679C\u4F60\u4E0D\u662FServer\u7AEF\u7A0B\u5E8F\uFF0C\u8FD9\u79CD\u81EA\u52A8\u673A\u5236\u662F\u633A\u597D\u7684\uFF0C\u56E0\u4E3A\u4F60\u6839\u672C\u5C31\u4E0D\u5728\u4E4E\u4F60\u7528\u7684\u662F\u5565\u7AEF\u53E3\u53F7\uFF0C\u4F60\u53EA\u9700\u8981\u5728\u4E4E\u8FDC\u7A0B\u7AEF\u53E3\u53F7\u662F\u4EC0\u4E48\uFF0C\u5E76\u628A\u5B83\u653E\u5728<code>serv_addr</code>\u53C2\u6570\u4E2D\u5C31\u884C\u4E86\u3002\u5982\u679C\u4F60\u5B9E\u5728\u60F3\u7ED1\u5B9A\u5230\u67D0\u4E2A\u7279\u5B9AIP\u5730\u5740\u548C\u7279\u5B9A\u7AEF\u53E3\u53F7\u4E0A\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u7528<code>bind()</code>\u51FD\u6570\u8FDB\u884C\u8BBE\u7F6E\uFF0C\u4F46\u5C5E\u5B9E\u6CA1\u6709\u5FC5\u8981\u3002</p><p>\u4E00\u65E6<code>connect()</code>\u5B8C\u6210\uFF0C\u4F60\u5C31\u53EF\u4EE5\u968F\u5FC3\u6240\u4EE5\u5730\u4F7F\u7528 <code>send()</code> \u548C <code>recv()</code>\u5904\u7406\u6570\u636E\u4E86\u3002</p><p>\u8BB0\u4F4F\uFF1A\u5982\u679C\u4F60<code>connect()</code>\u7684\u662F\u8FDC\u7A0B\u7684 <code>SOCK_DGRAM</code> UDP socket\uFF0C\u53EA\u8981\u4F60\u60F3\uFF0C <code>send()</code> \u3001 <code>recv()</code>\u548C <code>sendto()</code> \u3001 <code>recvfrom()</code>\u4F60\u90FD\u53EF\u4EE5\u7528\u3002</p><h4 id="_10-3-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-3-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.3.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u8FD4\u56DE<code>0</code>\uFF0C\u53D1\u751F\u5F02\u5E38\u65F6\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u5C06 <code>errno</code> \u8BBE\u7F6E\u4E3A\u5408\u9002\u7684\u503C\u3002</p><h4 id="_10-3-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-3-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.3.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// connect to www.example.com port 80 (http)</span>

<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>

<span class="token comment">// first, load up address structs with getaddrinfo():</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>  <span class="token comment">// use IPv4 or IPv6, whichever</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>

<span class="token comment">// we could put &quot;80&quot; instead on &quot;http&quot; on the next line:</span>
<span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// make a socket:</span>

sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// connect it to the address and port we passed in to getaddrinfo():</span>

<span class="token function">connect</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-3-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-3-5-\u53C2\u9605" aria-hidden="true">#</a> 10.3.5. \u53C2\u9605</h4>`,16),Ja={href:"https://beej.us/guide/bgnet/html/#socketman",target:"_blank",rel:"noopener noreferrer"},ne=n("code",null,"socket()",-1),se=s(", "),ae={href:"https://beej.us/guide/bgnet/html/#bindman",target:"_blank",rel:"noopener noreferrer"},ee=n("code",null,"bind()",-1),te=t(`<h3 id="_10-4-close" tabindex="-1"><a class="header-anchor" href="#_10-4-close" aria-hidden="true">#</a> 10.4. close()</h3><p>\u5173\u95EDsocket descriptor\u3002</p><h4 id="_10-4-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-4-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.4.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
    
<span class="token keyword">int</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-4-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-4-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.4.2. \u8BF4\u660E</h4><p>\u5F53\u4F60\u5B8C\u6210\u4E86\u5BF9\u5305\u542B\u4F60\u65E0\u6570\u5947\u601D\u5999\u60F3\u7684socket\u7684\u4F7F\u7528\uFF0C\u5E76\u4E14\u4F60\u4E0D\u60F3\u518D<code>send()</code>\u6216<code>recv()</code>\uFF0C\u53C8\u6216\u8005\u4EFB\u4F55\u5176\u4ED6\u4E8B\u60C5\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>close()</code>\uFF0Csocket\u5C06\u88AB\u6C38\u4E45\u91CA\u653E\u3002</p><p>\u8FDC\u7A0B\u4E3B\u673A\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F\u5224\u65AD\u4F60\u662F\u5426\u8FDB\u884C\u4E86<code>close()</code>\u3002</p><ol><li>\u5982\u679C\u8FDC\u7A0B\u4E3B\u673A\u8C03\u7528\u4E86<code>recv()</code>\uFF0C\u8FD4\u56DE\u503C\u4F1A\u662F0\uFF1B</li><li>\u5982\u679C\u8FDC\u7A0B\u4E3B\u673A\u8C03\u7528\u4E86<code>send()</code>\uFF0C\u5B83\u5C06\u4F1A\u6536\u5230\u4E00\u4E2A <code>SIGPIPE</code> \u4FE1\u53F7\uFF0C\u5E76\u4E14<code>send()</code>\u7684\u8FD4\u56DE\u503C\u4E3A<code>-1</code>\uFF0C<code>errno</code>\u503C\u4E5F\u4F1A\u88AB\u8BBE\u7F6E\u4E3A <code>EPIPE</code>\u3002</li></ol><blockquote><p><strong>Windows\u4F7F\u7528\u8005\u987B\u77E5\uFF1A</strong></p><p>\u5173\u95ED\u7684\u65B9\u6CD5\u4E3A<code>closesocket()</code>\uFF0C\u800C\u4E0D\u662F<code>close()</code>\u3002\u5982\u679C\u4F60\u8BD5\u56FE\u5728socket descriptor\u4E0A\u4F7F\u7528<code>close()</code>\uFF0CWindows\u53EF\u80FD\u4F1A\u8DDF\u4F60\u95F9\u522B\u626D\u3002\u3002\u3002\u4F60\u4F1A\u5F88\u82E6\u607C\u3002</p></blockquote><h4 id="_10-4-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-4-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.4.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u8FD4\u56DE<code>0</code>\uFF0C\u53D1\u751F\u5F02\u5E38\u65F6\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u5C06 <code>errno</code> \u8BBE\u7F6E\u4E3A\u5408\u9002\u7684\u503C\u3002</p><h4 id="_10-4-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-4-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.4.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>s <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>PF_INET<span class="token punctuation">,</span> SOCK_DGRAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token comment">// a whole lotta stuff...*BRRRONNNN!*</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token punctuation">.</span>
<span class="token function">close</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// not much to it, really.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-4-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-4-5-\u53C2\u9605" aria-hidden="true">#</a> 10.4.5. \u53C2\u9605</h4>`,14),oe={href:"https://beej.us/guide/bgnet/html/#socketman",target:"_blank",rel:"noopener noreferrer"},pe=n("code",null,"socket()",-1),ce=s(", "),ie={href:"https://beej.us/guide/bgnet/html/#shutdownman",target:"_blank",rel:"noopener noreferrer"},le=n("code",null,"shutdown()",-1),de=t(`<h3 id="_10-5-getaddrinfo-freeaddrinfo-gai-strerror" tabindex="-1"><a class="header-anchor" href="#_10-5-getaddrinfo-freeaddrinfo-gai-strerror" aria-hidden="true">#</a> 10.5. getaddrinfo(), freeaddrinfo(), gai_strerror()</h3><p>\u83B7\u53D6\u6709\u5173host name\uFF08\u4E3B\u673A\u540D\uFF09\u4EE5\u53CAservice\uFF08\u670D\u52A1\uFF09\u4FE1\u606F\uFF0C\u5E76\u5C06\u7ED3\u679C\u4FDD\u5B58\u5728<code>struct sockaddr</code>\u7ED3\u6784\u4E2D\u3002</p><h4 id="_10-5-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-5-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.5.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>nodename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>servname<span class="token punctuation">,</span>
                <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>hints<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span><span class="token operator">*</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">freeaddrinfo</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>ai<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">gai_strerror</span><span class="token punctuation">(</span><span class="token keyword">int</span> ecode<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span>     ai_flags<span class="token punctuation">;</span>          <span class="token comment">// AI_PASSIVE, AI_CANONNAME, ...</span>
  <span class="token keyword">int</span>     ai_family<span class="token punctuation">;</span>         <span class="token comment">// AF_xxx</span>
  <span class="token keyword">int</span>     ai_socktype<span class="token punctuation">;</span>       <span class="token comment">// SOCK_xxx</span>
  <span class="token keyword">int</span>     ai_protocol<span class="token punctuation">;</span>       <span class="token comment">// 0 (auto) or IPPROTO_TCP, IPPROTO_UDP </span>

  <span class="token class-name">socklen_t</span>  ai_addrlen<span class="token punctuation">;</span>     <span class="token comment">// length of ai_addr</span>
  <span class="token keyword">char</span>   <span class="token operator">*</span>ai_canonname<span class="token punctuation">;</span>      <span class="token comment">// canonical name for nodename</span>
  <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span>  <span class="token operator">*</span>ai_addr<span class="token punctuation">;</span> <span class="token comment">// binary address</span>
  <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span>  <span class="token operator">*</span>ai_next<span class="token punctuation">;</span> <span class="token comment">// next structure in linked list</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-5-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-5-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.5.2. \u8BF4\u660E</h4><p><code>getaddrinfo()</code>\u662F\u4E00\u4E2A\u975E\u5E38\u6709\u7528\u7684\u51FD\u6570\uFF0C\u5B83\u4F1A\u8FD4\u56DE\u7279\u5B9A\u4E3B\u673A\u540D\u7684\u76F8\u5173\u4FE1\u606F\uFF08\u4F8B\u5982\u5176IP\u5730\u5740\uFF09\uFF0C\u5E76\u628A\u4FE1\u606F\u4FDD\u5B58\u5728\u4E00\u4E2A<code>struct sockaddr</code>\u7ED3\u6784\u4E2D\uFF0C\u81EA\u52A8\u4E3A\u4F60\u5904\u7406\u7EC6\u8282\uFF08\u6BD4\u5982\u5730\u5740\u662FIPv4\u8FD8\u662FIPv6\uFF09\u3002</p><p>\u6709\u4E86\u8FD9\u4E2A\u51FD\u6570\uFF0C\u539F\u672C\u7684 <code>gethostbyname()</code> \u548C <code>getservbyname()</code>\u4E5F\u5C31\u53EF\u5C31\u53EF\u4EE5\u9000\u51FA\u6C5F\u6E56\u4E86\u3002</p><p>\u63A5\u4E0B\u6765\u7684\u63CF\u8FF0\u53EF\u80FD\u4F1A\u8BA9\u4F60\u671B\u800C\u751F\u754F\uFF0C\u4F46\u662F\u522B\u62C5\u5FC3\uFF0C\u8FD9\u4E2A\u51FD\u6570\u7528\u8D77\u6765\u8D3C\u7B80\u5355\u3002\u4F60\u53EF\u4EE5\u5148\u8DF3\u8FC7\u4E0B\u9762\u7684\u63CF\u8FF0\u76F4\u63A5\u770B\u4E00\u4E0B\u4F8B\u5B50\uFF0C\u589E\u5F3A\u4E00\u4E0B\u4F60\u7684\u4FE1\u5FC3\u3002</p>`,8),re=n("code",null,"nodename",-1),ue=s("\u53C2\u6570\u4E2D\u4FDD\u5B58\u7684\u5C31\u662Fhost name\uFF08\u4E3B\u673A\u540D\uFF09\u3002\u4E3B\u673A\u540D\u53EF\u4EE5\u662F\u57DF\u540D\uFF0C\u6BD4\u5982\u201C"),ke={href:"http://www.chanmufeng.com",target:"_blank",rel:"noopener noreferrer"},ve=s("www.chanmufeng.com"),me=s("\u201D\uFF0C\u4E5F\u53EF\u4EE5\u662FIPv4\u6216\u8005IPv6\u5730\u5740\uFF08\u4EE5\u5B57\u7B26\u4E32\u5F62\u5F0F\u4F20\u9012\uFF09\u3002\u5982\u679C\u4F60\u7528\u4E86"),be=n("code",null,"AI_PASSIVE",-1),he=s("\u9009\u9879\uFF0C\u8FD9\u4E2A\u53C2\u6570\u4F60\u4E5F\u53EF\u4EE5\u8BBE\u7F6E\u4E3A"),_e=n("code",null,"NULL",-1),fe=s("\uFF08\u89C1\u4E0B\u6587\uFF09\u3002"),ge=n("code",null,"servname",-1),ye=s("\u901A\u5E38\u5C31\u662F\u7AEF\u53E3\u53F7\uFF0C\u6BD4\u5982\u4F60\u53EF\u4EE5\u4EE5\u5B57\u7B26\u4E32\u683C\u5F0F\u4F20\u9012\u201C"),we=n("code",null,"80",-1),Ie=s("\u201D\uFF1B\u4E5F\u53EF\u4EE5\u662F\u670D\u52A1\u540D\uFF0C\u6BD4\u5982\u201C"),Pe=n("code",null,"http",-1),xe=s("\u201D\u3001\u201C"),Se=n("code",null,"tftp",-1),qe=s("\u201D\u3001\u6216\u8005\u201C"),Ae=n("code",null,"smtp",-1),Ee=s("\u201D\u3001\u201C"),Te=n("code",null,"pop",-1),Ne=s("\u201D\u7B49\u3002\u4F17\u6240\u5468\u77E5\u7684\u670D\u52A1\u540D\u53EF\u4EE5\u5728 "),Ce={href:"https://www.iana.org/assignments/port-numbers",target:"_blank",rel:"noopener noreferrer"},De=s("IANA Port List"),Re={href:"https://beej.us/guide/bgnet/html/#fn48",target:"_blank",rel:"noopener noreferrer"},Le=s("48"),Oe=s(" \u4E2D\u627E\u5230\uFF0C\u4F60\u672C\u5730\u7684"),Ue=n("code",null,"/etc/services",-1),Fe=s("\u6587\u4EF6\u4E2D\u4E5F\u6709\u8FD9\u4E9B\u4FE1\u606F\u3002"),ze=t(`<p>\u7136\u540E\u5C31\u662F\u6838\u5FC3\u53C2\u6570\u2014\u2014<code>hints</code>\u3002\u5728\u4F7F\u7528<code>addrinfo</code>\u4E4B\u524D\uFF0C\u4F60\u5FC5\u987B\u5148\u7528<code>memset()</code>\u5C06\u6574\u4E2A\u7ED3\u6784\u6570\u636E\u6E05\u7A7A\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u8BB2\u8BB2<code>addrinfo</code>\u4E2D\u7684\u5B57\u6BB5\u3002</p><p><code>ai_flags</code>\u6709\u5F88\u591A\u4E2A\u5019\u9009\u9879\uFF0C\u4F46\u662F\u91CD\u8981\u4E5F\u5C31\u51E0\u4E2A\u3002\uFF08\u5982\u679C\u8981\u540C\u65F6\u4F7F\u7528\u591A\u4E2A\u540E\u9009\u9879\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>\uFF5C</code>\u8FD0\u7B97\u7B26\u5BF9\u4ED6\u4EEC\u8FDB\u884C\u6309\u4F4D\u6216\u8FD0\u7B97\uFF09\u3002\u67E5\u770Bman\u624B\u518C\u83B7\u53D6\u5B8C\u6574\u7684\u6807\u8BC6\u5217\u8868\u3002</p><p><code>AI_CANONNAME</code> \u4F1A\u4EE4<code>res</code>\u7684 <code>ai_canonname</code> \u586B\u5145\u4E3A\u4E3B\u673A\u7684canonical(real) name\uFF08\u89C4\u8303\u540D\uFF0C\u6216\u8005\u6210\u4E3A\u771F\u540D\uFF09\u3002</p><p><code>AI_PASSIVE</code> \u4F1A\u4EE4<code>res</code>\u7684IP\u5730\u5740\u88AB\u8BBE\u7F6E\u4E3A <code>INADDR_ANY</code> (IPv4) \u6216 <code>in6addr_any</code> (IPv6)\uFF1B\u8FD9\u8BA9\u4E4B\u540E\u5728\u8C03\u7528<code>bind()</code>\u65F6\uFF0C\u53EF\u4EE5\u81EA\u52A8\u4F7F\u7528\u5F53\u524D\u4E3B\u673A\u7684IP\u5730\u5740\u6765\u586B\u5145<code>struct sockaddr</code>\u7684IP\u5730\u5740\u3002\u8FD9\u5728\u4F60\u5199Server\u4EE3\u7801\u4E14\u4E0D\u60F3\u5199\u6B7BIP\u5730\u5740\u65F6\u975E\u5E38\u597D\u7528\u3002</p><p>\u5982\u679C\u4F60\u4F7F\u7528\u4E86 <code>AI_PASSIVE</code>\u6807\u8BC6\uFF0C\u4F60\u5C31\u53EF\u4EE5\u5C06<code>nodename</code>\u5B57\u6BB5\u8BBE\u7F6E\u4E3A<code>NULL</code>\u4E86\uFF08\u56E0\u4E3A<code>bind()</code>\u5728\u4E4B\u540E\u4F1A\u81EA\u52A8\u7ED9\u4F60\u586B\u4E0A\uFF09\u3002</p><p>\u63A5\u7740\u804A\u53C2\u6570\u3002</p><p>\u4F60\u5E94\u8BE5\u4F1A\u60F3\u5C06 <code>ai_family</code> \u8BBE\u7F6E\u4E3A<code>AF_UNSPEC</code>\uFF0C\u8FD9\u6837 <code>getaddrinfo() </code>\u5C31\u80FD\u540C\u65F6\u5E94\u4ED8IPv4\u548CIPv6\u4E86\u3002\u5F53\u7136\u55BD\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u7528 AF_INET \u6216 AF_INET6 \u6765\u81EA\u5DF1\u6307\u5B9A\u4F7F\u7528IPv4\u8FD8\u662FIPv6.</p><p>\u53E6\u5916\uFF0Csocktype\u5E94\u8BE5\u88AB\u8BBE\u7F6E\u4E3A <code>SOCK_STREAM</code> \u6216 <code>SOCK_DGRAM</code>\uFF0C\u5177\u4F53\u53D6\u51B3\u4E8E\u4F60\u60F3\u4F7F\u7528\u90A3\u79CDsocket\u3002</p><p>\u6700\u540E\uFF0C\u4F60\u53EF\u4EE5\u5C06 <code>ai_protocol</code> \u8BBE\u7F6E\u4E3A<code>0</code>\uFF0C\u8BA9\u5176\u81EA\u52A8\u9009\u62E9\u4F60\u7684protocol type\u3002</p><p>\u505A\u4E86\u8FD9\u4E48\u591A\uFF0C\u7EC8\u4E8E\u53EF\u4EE5\u8C03\u7528<code>getaddrinfo()</code>\u4E86\u3002</p><p>\u4E8B\u60C5\u53D8\u5F97\u6709\u8DA3\u4E86\u3002<code>res</code>\u4F1A\u6307\u5411<code>struct addrinfo</code>\u7684\u4E00\u4E2A\u94FE\u63A5\u5217\u8868\uFF0C\u60A8\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u94FE\u8868\u6765\u83B7\u5F97\u5168\u90E8\u7684\u5730\u5740\u4FE1\u606F\uFF08\u7B26\u5408\u4F60\u901A\u8FC7<code>hints</code>\u6307\u5B9A\u7684address\u7C7B\u578B\uFF09\u3002</p><p>\u4F46\u662F\u4F60\u53EF\u80FD\u4F1A\u83B7\u53D6\u5230\u4E00\u4E9B\u56E0\u4E3A\u67D0\u4E9B\u539F\u56E0\u800C\u65E0\u6548\u7684address\uFF0C\u56E0\u6B64Linux\u7684man\u624B\u518C\u63D0\u4F9B\u7684\u65B9\u6CD5\u662F\u5FAA\u73AF\u8BFB\u53D6\u94FE\u8868\uFF0C\u7136\u540E\u8FDB\u884C\u8C03\u7528<code>socket()</code>\u3001<code>connect()</code>\uFF08\u5982\u679CServer\u7AEF\u7A0B\u5E8F\u4F7F\u7528\u4E86<code>AI_PASSIVE</code>\uFF0C\u90A3\u5C31\u662F<code>bind()</code>\uFF09\uFF0C\u76F4\u5230\u6210\u529F\u4E3A\u6B62\u3002</p><p>\u6700\u540E\uFF0C\u5F53\u4F60\u5904\u7406\u5B8C\u94FE\u8868\u4E4B\u540E\uFF0C\u4F60\u9700\u8981\u8C03\u7528<code>freeaddrinfo()</code>\u6765\u91CA\u653E\u5185\u5B58\uFF0C\u907F\u514D\u5185\u5B58\u51FA\u73B0\u6CC4\u6F0F\u3002</p><h4 id="_10-5-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-5-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.5.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u8FD4\u56DE<code>0</code>\uFF0C\u5F02\u5E38\u8FD4\u56DE<code>\u975E0</code>\u3002\u5982\u679C\u8FD4\u56DE\u7684\u662F<code>\u975E0</code>\uFF0C\u4F60\u53EF\u4EE5\u8C03\u7528<code>gai_strerror() </code>\u83B7\u53D6\u4E00\u4E2A\u6587\u5B57\u7248\u672C\u7684\u9519\u8BEF\u4FE1\u606F\u3002</p><h4 id="_10-5-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-5-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.5.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// code for a client connecting to a server</span>
<span class="token comment">// namely a stream socket to www.example.com on port 80 (http)</span>
<span class="token comment">// either IPv4 or IPv6</span>

<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>  
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>servinfo<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token keyword">int</span> rv<span class="token punctuation">;</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span> <span class="token comment">// use AF_INET6 to force IPv6</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// loop through all the results and connect to the first we can</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> servinfo<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span>
            p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">connect</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;connect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// if we get here, we must have connected successfully</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// looped off the end of the list with no connection</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;failed to connect\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// all done with this structure</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// code for a server waiting for connections</span>
<span class="token comment">// namely a stream socket on port 3490, on this host&#39;s IP</span>
<span class="token comment">// either IPv4 or IPv6.</span>

<span class="token keyword">int</span> sockfd<span class="token punctuation">;</span>  
<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>servinfo<span class="token punctuation">,</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
<span class="token keyword">int</span> rv<span class="token punctuation">;</span>

<span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span> <span class="token comment">// use AF_INET6 to force IPv6</span>
hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span> <span class="token comment">// use my IP address</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rv <span class="token operator">=</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token string">&quot;3490&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;getaddrinfo: %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">gai_strerror</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// loop through all the results and bind to the first we can</span>
<span class="token keyword">for</span><span class="token punctuation">(</span>p <span class="token operator">=</span> servinfo<span class="token punctuation">;</span> p <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>ai_next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span>
            p<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;socket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">close</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">&quot;bind&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// if we get here, we must have connected successfully</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// looped off the end of the list with no successful bind</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">&quot;failed to bind socket\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">freeaddrinfo</span><span class="token punctuation">(</span>servinfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// all done with this structure</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-5-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-5-5-\u53C2\u9605" aria-hidden="true">#</a> 10.5.5. \u53C2\u9605</h4>`,19),Me={href:"https://beej.us/guide/bgnet/html/#gethostbynameman",target:"_blank",rel:"noopener noreferrer"},Be=n("code",null,"gethostbyname()",-1),Ke=s(", "),Xe={href:"https://beej.us/guide/bgnet/html/#getnameinfoman",target:"_blank",rel:"noopener noreferrer"},je=n("code",null,"getnameinfo()",-1),Ge=t(`<h3 id="_10-6-gethostname" tabindex="-1"><a class="header-anchor" href="#_10-6-gethostname" aria-hidden="true">#</a> 10.6. gethostname()</h3><p>\u8FD4\u56DE\u7CFB\u7EDF\u4E3B\u673A\u540D\u79F0</p><h4 id="_10-6-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-6-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.6.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/unistd.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">gethostname</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">,</span> <span class="token class-name">size_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-6-2-\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_10-6-2-\u63CF\u8FF0" aria-hidden="true">#</a> 10.6.2. \u63CF\u8FF0</h4><p>\u4F60\u7684\u7CFB\u7EDF\u6709\u4E2A\u540D\u5B57\uFF0C\u6240\u6709\u7CFB\u7EDF\u90FD\u6709\u3002\u8FD9\u662F\u4E00\u4E2A\u6BD4\u6211\u4EEC\u4E00\u76F4\u5728\u8C08\u8BBA\u7684\u5176\u4ED6\u7F51\u7EDC\u5185\u5BB9\u7A0D\u5FAE\u66F4Unixy\u7684\u4E1C\u897F\uFF0C\u4F46\u5B83\u4ECD\u7136\u6709\u5B83\u7684\u7528\u9014\u3002</p><p>\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u83B7\u53D6\u4F60\u7684\u4E3B\u673A\u540D\uFF0C\u7136\u540E\u8C03\u7528gethostbyname()\u6765\u67E5\u627E\u4F60\u7684IP\u5730\u5740\u3002</p><p>name \u53C2\u6570\u5E94\u8BE5\u6307\u5411\u4E00\u4E2A\u4FDD\u5B58\u4E3B\u673A\u540D\u79F0\u7684\u7F13\u51B2\u533A\uFF0C\u800C len \u662F\u8BE5\u7F13\u51B2\u533A\u7684\u5927\u5C0F\uFF0C\u4EE5 byte \u4E3A\u5355\u4F4D\u3002gethostname() \u4E0D\u4F1A\u8986\u76D6\u7F13\u51B2\u533A\u7684\u7ED3\u5C3E\uFF08\u53EF\u80FD\u4F1A\u8FD4\u56DE\u9519\u8BEF\uFF0C\u6216\u8005\u53EA\u662F\u5355\u7EAF\u505C\u6B62\u5199\u5165\uFF09\uFF0C\u800C\u4E14\u5982\u679C\u7F13\u51B2\u533A\u6709\u8DB3\u591F\u7684\u7A7A\u95F4\uFF0C\u5B83\u8FD8\u4F1A\u4FDD\u7559\u5B57\u4E32\u7684 NUL-\u7ED3\u5C3E\u3002</p><h4 id="_10-6-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-6-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.6.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u8FD4\u56DE<code>0</code>\uFF0C\u53D1\u751F\u5F02\u5E38\u65F6\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u5C06 <code>errno</code> \u8BBE\u7F6E\u4E3A\u5408\u9002\u7684\u503C\u3002</p><h4 id="_10-6-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-6-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.6.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">char</span> hostname<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">gethostname</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hostname<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;My hostname: %s\\n&quot;</span><span class="token punctuation">,</span> hostname<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-6-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-6-5-\u53C2\u9605" aria-hidden="true">#</a> 10.6.5. \u53C2\u9605</h4>`,13),He={href:"https://beej.us/guide/bgnet/html/#gethostbynameman",target:"_blank",rel:"noopener noreferrer"},Ve=n("code",null,"gethostbyname()",-1),We=t(`<h3 id="_10-7-gethostbyname-gethostbyaddr" tabindex="-1"><a class="header-anchor" href="#_10-7-gethostbyname-gethostbyaddr" aria-hidden="true">#</a> 10.7. gethostbyname(), gethostbyaddr()</h3><p>\u6839\u636E\u4E3B\u673A\u540D\u83B7\u53D6IP\u5730\u5740\uFF0C\u6216\u8005\u76F8\u53CD\u3002</p><h4 id="_10-7-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-7-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.7.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span><span class="token function">gethostbyname</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// DEPRECATED!</span>
<span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span><span class="token function">gethostbyaddr</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-7-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-7-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.7.2. \u8BF4\u660E</h4><blockquote><p>\u8BF7\u6CE8\u610F\uFF1A\u8FD9\u4E24\u4E2A\u51FD\u6570\u5DF2\u7ECF\u7531 getaddrinfo() \u4E0E getnameinfo() \u53D6\u800C\u4EE3\u4E4B\uFF01\u5B9E\u9645\u4E0A\uFF0Cgethostbyname() \u65E0\u6CD5\u5728 IPv6 \u4E2D\u6B63\u5E38\u8FD0\u884C\u3002</p></blockquote><p>\u8FD9\u4E9B\u51FD\u6570\u53EF\u4EE5\u8F6C\u6362 host name \u4E0E IP addresse\u3002\u4F8B\u5982\uFF1A\u4F60\u53EF\u4EE5\u7528 <code>gethostbyname()</code> \u53D6\u5F97\u5176 IP address\uFF0C\u5E76\u50A8\u5B58\u5728 <code>struct in_addr</code>\u3002</p><p>\u53CD\u4E4B\uFF0C\u5982\u679C\u4F60\u6709\u4E00\u4E2A <code>struct in_addr</code> \u6216 <code>struct in6_addr</code>\uFF0C\u4F60\u53EF\u4EE5\u7528 <code>gethostbyaddr()</code>\u5F97\u5230 hostname\u3002<code>gethostbyaddr() </code>\u4E0E IPv6 \u76F8\u5BB9\uFF0C\u4F46\u662F\u4F60\u6700\u597D\u4F7F\u7528\u65B0\u7684 <code>getnameinfo()</code> \u4EE3\u66FF\u5B83\u3002</p><p>\uFF08\u5982\u679C\u4F60\u6709\u4E00\u4E2A\u70B9\u5206\u5341\u8FDB\u5236\u683C\u5F0F\u7684IP\u5730\u5740\uFF0C\u4F60\u60F3\u8981\u67E5\u8BE2\u5B83\u7684 hostname\uFF0C\u4F60\u5728\u4F7F\u7528 <code>getaddrinfo()</code> \u65F6\u6700\u597D\u8981\u642D\u914D<code> AI_CANONNAME</code> \u6807\u8BC6\uFF09\u3002</p>`,9),Ye=n("code",null,"gethostbyname()",-1),Qe=s(' \u63A5\u6536\u4E00\u4E2A\u7C7B\u4F3C "'),$e={href:"http://www.chanmufeng.com",target:"_blank",rel:"noopener noreferrer"},Ze=s("www.chanmufeng.com"),Je=s('" \u7684\u5B57\u4E32\uFF0C\u7136\u540E\u4F20\u56DE\u4E00\u4E2A '),nt=n("code",null,"struct hostent",-1),st=s("\uFF0C\u91CC\u9762\u5305\u542B\u4E86\u8D85\u591A\u7684\u6570\u636E\uFF0C\u5305\u62EC\u4E86 IP address\uFF08\u5176\u5B83\u7684\u4FE1\u606F\u5305\u62EC\u5B98\u65B9\u7684 host name\u3001\u4E00\u8FDE\u4E32\u7684\u522B\u540D\u3001\u5730\u5740\u7C7B\u578B\u3001\u5730\u5740\u957F\u5EA6\u3001\u4EE5\u53CA\u5730\u5740\u5217\u8868\u3002\u8FD9\u662F\u4E2A\u901A\u7528\u7684\u8D44\u6599\u7ED3\u6784\uFF0C\u5728\u7279\u5B9A\u7684\u7528\u9014\u4E0A\u4F7F\u7528\u8D77\u6765\u4E5F\u5F88\u65B9\u4FBF\uFF09\u3002"),at=t(`<p>\u5728<code>gethostbyaddr()</code>\u4EE3\u5165\u4E00\u4E2A <code>struct in_addr </code>\u6216 <code>struct in6_addr</code>\uFF0C\u7136\u540E\u5C31\u4F1A\u8FD4\u56DE\u7ED9\u4F60\u4E00\u4E2A\u76F8\u5BF9\u5E94\u7684 host name\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\uFF0C\u5B83\u7684\u4F5C\u7528\u548C <code>gethostbyname() </code>\u6B63\u597D\u76F8\u53CD\u3002\u81F3\u4E8E\u53C2\u6570\uFF0C<code>addr </code>\u662F\u4E00\u4E2A <code>char*</code>\uFF0C\u4F60\u5B9E\u9645\u4E0A\u60F3\u8981\u7528\u4E00\u4E2A\u6307\u5411<code> struct in_addr</code> \u7684\u6307\u9488\uFF1B<code>len </code>\u5E94\u8BE5\u88AB\u8BBE\u7F6E\u6210 <code>sizeof(struct in_addr)</code>\uFF0C\u800C <code>type</code> \u5E94\u4E3A <code>AF_INET</code>\u3002</p><p>\u6240\u4EE5\u8FD9\u4E2A <code>struct hostent</code> \u4F1A\u8FD4\u56DE\u4EC0\u4E48\u5462\uFF1F\u5B83\u6709\u8BB8\u591A\u5B57\u6BB5\uFF0C\u5305\u542B host \u7684\u76F8\u5173\u6570\u636E\u3002</p><table><thead><tr><th>\u5B57\u6BB5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>char *h_name</td><td>\u4E3B\u673A\u7684\u89C4\u8303\uFF08official\u3001canonical\uFF09\u540D\u5B57</td></tr><tr><td>char **h_aliases</td><td>\u53EF\u4EE5\u4F7F\u7528\u6570\u7EC4\u8BBF\u95EE\u7684\u522B\u540D\u5217\u8868\uFF0C\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E3ANULL</td></tr><tr><td>int h_addrtype</td><td>\u7ED3\u679C\u7684\u5730\u5740\u7C7B\u578B\uFF0C\u51FA\u4E8E\u6211\u4EEC\u7684\u76EE\u7684\uFF0C\u5B83\u5B9E\u9645\u4E0A\u5E94\u8BE5\u662FAF_INET\u3002</td></tr><tr><td>int length</td><td>\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\u7684\u5730\u5740\u957F\u5EA6\uFF0C\u5BF9\u4E8EIP\uFF08\u7248\u672C4\uFF09\u5730\u5740\u4E3A4\u3002</td></tr><tr><td>char **h_addr_list</td><td>\u6B64\u4E3B\u673A\u7684IP\u5730\u5740\u5217\u8868\u3002\u867D\u7136\u8FD9\u662F\u4E00\u4E2Achar**\uFF0C\u4F46\u5B83\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u4F2A\u88C5\u7684structin_addr *s\u6570\u7EC4\u3002\u6700\u540E\u4E00\u4E2A\u6570\u7EC4\u5143\u7D20\u4E3ANULL\u3002</td></tr><tr><td>h_addr</td><td>h_addr_list[0]\u7684\u5E38\u7528\u522B\u540D\u3002\u5982\u679C\u4F60\u53EA\u662F\u60F3\u8981\u6B64\u4E3B\u673A\u7684\u4EFB\u4F55\u65E7IP\u5730\u5740\uFF08\u662F\u7684\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u6709\u591A\u4E2A\uFF09\uFF0C\u8BF7\u4F7F\u7528\u6B64\u5B57\u6BB5\u3002</td></tr></tbody></table><h4 id="_10-7-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-7-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.7.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u65F6\u8FD4\u56DE\u6307\u5411<code>struct hostent</code>\u7ED3\u679C\u7684\u6307\u9488\uFF0C\u9519\u8BEF\u65F6\u8FD4\u56DE <code>NULL</code>\u3002</p><p>\u548C\u4E4B\u524D\u4ECB\u7ECD\u8FC7\u7684\u5176\u4ED6\u51FD\u6570\u4E0D\u540C\uFF0C\u5F53\u53D1\u751F\u9519\u8BEF\u65F6\uFF0C\u5B83\u4E0D\u8BBE\u7F6E<code>errno</code>\u53D8\u91CF\uFF0C\u800C\u662F\u5C06\u5168\u5C40\u6574\u6570\u53D8\u91CF<code>h_errno</code>\u8BBE\u7F6E\u4E3A\u5728\u5934\u6587\u4EF6<code>&lt;netdb.h&gt;</code>\u4E2D\u5B9A\u4E49\u7684\u5E38\u503C\u3002</p><h4 id="_10-7-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-7-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.7.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// THIS IS A DEPRECATED METHOD OF GETTING HOST NAMES</span>
<span class="token comment">// use getaddrinfo() instead!</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netinet/in.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;arpa/inet.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span>he<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">in_addr</span> <span class="token operator">*</span><span class="token operator">*</span>addr_list<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span><span class="token string">&quot;usage: ghbn hostname\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>he <span class="token operator">=</span> <span class="token function">gethostbyname</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// get the host info</span>
        <span class="token function">herror</span><span class="token punctuation">(</span><span class="token string">&quot;gethostbyname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// print information about this host:</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Official name is: %s\\n&quot;</span><span class="token punctuation">,</span> he<span class="token operator">-&gt;</span>h_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;    IP addresses: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    addr_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">in_addr</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span>he<span class="token operator">-&gt;</span>h_addr_list<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> addr_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s &quot;</span><span class="token punctuation">,</span> <span class="token function">inet_ntoa</span><span class="token punctuation">(</span><span class="token operator">*</span>addr_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// THIS HAS BEEN SUPERCEDED</span>
<span class="token comment">// use getnameinfo() instead!</span>

<span class="token keyword">struct</span> <span class="token class-name">hostent</span> <span class="token operator">*</span>he<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">in_addr</span> ipv4addr<span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">in6_addr</span> ipv6addr<span class="token punctuation">;</span>

<span class="token function">inet_pton</span><span class="token punctuation">(</span>AF_INET<span class="token punctuation">,</span> <span class="token string">&quot;192.0.2.34&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ipv4addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
he <span class="token operator">=</span> <span class="token function">gethostbyaddr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ipv4addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> ipv4addr<span class="token punctuation">,</span> AF_INET<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Host name: %s\\n&quot;</span><span class="token punctuation">,</span> he<span class="token operator">-&gt;</span>h_name<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">inet_pton</span><span class="token punctuation">(</span>AF_INET6<span class="token punctuation">,</span> <span class="token string">&quot;2001:db8:63b3:1::beef&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ipv6addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
he <span class="token operator">=</span> <span class="token function">gethostbyaddr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ipv6addr<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> ipv6addr<span class="token punctuation">,</span> AF_INET6<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Host name: %s\\n&quot;</span><span class="token punctuation">,</span> he<span class="token operator">-&gt;</span>h_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-7-5-\u53C2\u89C1" tabindex="-1"><a class="header-anchor" href="#_10-7-5-\u53C2\u89C1" aria-hidden="true">#</a> 10.7.5. \u53C2\u89C1</h4>`,10),et={href:"https://beej.us/guide/bgnet/html/#getaddrinfoman",target:"_blank",rel:"noopener noreferrer"},tt=n("code",null,"getaddrinfo()",-1),ot=s(", "),pt={href:"https://beej.us/guide/bgnet/html/#getnameinfoman",target:"_blank",rel:"noopener noreferrer"},ct=n("code",null,"getnameinfo()",-1),it=s(", "),lt={href:"https://beej.us/guide/bgnet/html/#gethostnameman",target:"_blank",rel:"noopener noreferrer"},dt=n("code",null,"gethostname()",-1),rt=s(", "),ut={href:"https://beej.us/guide/bgnet/html/#errnoman",target:"_blank",rel:"noopener noreferrer"},kt=n("code",null,"errno",-1),vt=s(", "),mt={href:"https://beej.us/guide/bgnet/html/#perrorman",target:"_blank",rel:"noopener noreferrer"},bt=n("code",null,"perror()",-1),ht=s(", "),_t={href:"https://beej.us/guide/bgnet/html/#perrorman",target:"_blank",rel:"noopener noreferrer"},ft=n("code",null,"strerror()",-1),gt=s(", "),yt={href:"https://beej.us/guide/bgnet/html/#sockaddr_inman",target:"_blank",rel:"noopener noreferrer"},wt=n("code",null,"struct in_addr",-1),It=t(`<h3 id="_10-8-getnameinfo" tabindex="-1"><a class="header-anchor" href="#_10-8-getnameinfo" aria-hidden="true">#</a> 10.8. getnameinfo()</h3><p>\u7531 struct sockaddr \u63D0\u4F9B\u7684\u4FE1\u606F\u67E5\u8BE2\u4E3B\u673A\u540D\u79F0\uFF08host name\uFF09\u4EE5\u53CA\u670D\u52A1\u540D\uFF08service name\uFF09\u3002</p><h4 id="_10-8-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-8-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.8.1. \u51FD\u6570\u539F\u578B</h4><h3 id="_10-9-shutdown" tabindex="-1"><a class="header-anchor" href="#_10-9-shutdown" aria-hidden="true">#</a> 10.9. shutdown()</h3><p>\u505C\u6B62\u5BF9socket\u7EE7\u7EED\u4F20\u9001\u4E0E\u63A5\u53D7\u3002</p><h4 id="_10-9-1-\u51FD\u6570\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#_10-9-1-\u51FD\u6570\u539F\u578B" aria-hidden="true">#</a> 10.9.1. \u51FD\u6570\u539F\u578B</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
    
<span class="token keyword">int</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> how<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-9-2-\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_10-9-2-\u8BF4\u660E" aria-hidden="true">#</a> 10.9.2. \u8BF4\u660E</h4><p>\u5982\u679C\u6211\u4E0D\u9700\u8981\u518D\u5BF9 socket \u8FDB\u884C<code>send()</code>\u4E86\uFF0C\u4F46\u662F\u6211\u4ECD\u7136\u60F3\u8981<code>recv() </code>socket \u7684\u6570\u636E\uFF0C\u53CD\u4E4B\u4EA6\u7136\uFF0C\u90A3\u6211\u8BE5\u600E\u4E48\u505A\u5462\uFF1F</p><p>\u5F53\u4F60\u4F7F\u7528 <code>close()</code> \u5173\u95ED socket descriptor \u65F6\uFF0C\u5B83\u4F1A\u5C06 socket \u7684\u4F20\u9001\u4E0E\u63A5\u6536\u4E24\u7AEF\u90FD\u5173\u95ED\uFF0C\u5E76\u4E14\u91CA\u653E socket descriptor\u3002\u82E5\u4F60\u53EA\u60F3\u8981\u5173\u95ED\u5176\u4E2D\u4E00\u7AEF\uFF0C\u4F60\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>shutdown() </code>\u8FD9\u4E2A\u51FD\u6570\u3002</p><p>\u5728\u8FD9\u4E9B\u53C2\u6570\u4E2D\uFF0C<code>s </code>\u663E\u7136\u662F\u4F60\u60F3\u8981\u8FDB\u884C\u52A8\u4F5C\u7684 socket\uFF0C\u800C\u8981\u8FDB\u884C\u4EC0\u4E48\u6837\u7684\u52A8\u4F5C\uFF0C\u5219\u8981\u7531 <code>how</code> \u53C2\u6570\u6307\u5B9A\u3002\u53EF\u4EE5\u4F7F\u7528 <code>SHUT_RD</code> \u6765\u5173\u95ED\u63A5\u6536\uFF0C<code>SHUT_WR</code> \u4EE5\u5173\u95ED\u4F20\u9001\uFF0C\u6216\u8005 <code>SHUT_RDWR</code> \u5C06\u6536\u9001\u529F\u80FD\u90FD\u5173\u95ED\u3002</p><ul><li><p>SHUT_RD</p><p>\u5173\u95ED\u8FDE\u63A5\u7684\u8BFB\u529F\u80FD\uFF0Csocket\u4E2D\u4E0D\u518D\u6709\u6570\u636E\u53EF\u4EE5\u88AB\u63A5\u53D7\uFF0C\u800C\u4E14socket\u63A5\u6536\u7F13\u51B2\u533A\u4E2D\u7684\u5148\u6709\u6570\u636E\u90FD\u88AB\u4E22\u5F03\u3002\u8FDB\u7A0B\u4E0D\u80FD\u518D\u5BF9\u8FD9\u6837\u7684socket\u8C03\u7528\u4EFB\u4F55\u8BFB\u51FD\u6570\u3002</p></li><li><p>SHUT_WR</p><p>\u5173\u95ED\u8FDE\u63A5\u7684\u5199\u529F\u80FD\u3002\u5F53\u524D\u7559\u5728socket\u53D1\u9001\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u5C06\u88AB\u53D1\u9001\u6389\uFF0C\u540E\u9762\u8DDF\u7740TCP\u7684\u6B63\u5E38\u8FDE\u63A5\u7EC8\u6B62\u5E8F\u5217\u3002\u8FDB\u7A0B\u4E0D\u80FD\u518D\u5BF9\u8FD9\u6837\u7684socket\u8C03\u7528\u4EFB\u4F55\u5199\u51FD\u6570\u3002</p></li><li><p>SHUT_RDWR</p><p>\u8FDE\u63A5\u7684\u8BFB\u529F\u80FD\u548C\u5199\u529F\u80FD\u90FD\u88AB\u5173\u95ED\uFF0C\u8FD9\u7B49\u4E8E\u8C03\u7528<code>shutdown</code>\u4E24\u6B21\uFF1A\u7B2C\u4E00\u6B21\u8C03\u7528\u6307\u5B9A<code>SHUT_RD</code>\uFF0C\u7B2C\u4E8C\u6B21\u8C03\u7528\u6307\u5B9A<code>SHUT_WR</code>\u3002</p></li></ul><p><code>shutdown() </code>\u7528\u6765\u5173\u95ED\u8FDE\u63A5\uFF0C\u800C\u4E0D\u662Fsocket\uFF0C\u4E0D\u7BA1\u8C03\u7528\u591A\u5C11\u6B21<code>shutdown()</code>\uFF0Csocket\u4F9D\u7136\u5B58\u5728\uFF0C\u56E0\u4E3A <code>shutdown() </code>\u5E76\u6CA1\u6709\u91CA\u653E socket descriptor\uFF0C\u6240\u4EE5\u5373\u4F7F socket \u5DF2\u7ECF\u6574\u4E2A shutdown \u4E86\uFF0C\u6700\u7EC8\u4ECD\u7136\u5F97\u900F\u8FC7 <code>close() </code>\u5173\u95ED socket\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C<code>close()</code>\u4F1A\u7ACB\u5373\u5411\u7F51\u7EDC\u4E2D\u53D1\u9001<code>FIN</code>\u5305\uFF0C\u4E0D\u7BA1\u8F93\u51FA\u7F13\u51B2\u533A\u4E2D\u662F\u5426\u8FD8\u6709\u6570\u636E\uFF0C\u800C<code>shutdown() </code>\u4F1A\u7B49\u8F93\u51FA\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u4F20\u8F93\u5B8C\u6BD5\u518D\u53D1\u9001<code>FIN</code>\u5305\u3002\u4E5F\u5C31\u610F\u5473\u7740\uFF0C\u8C03\u7528<code> close()</code>\u5C06\u4E22\u5931\u8F93\u51FA\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\uFF0C\u800C\u8C03\u7528 <code>shutdown() </code>\u4E0D\u4F1A\u3002</p><p>\u8FD9\u4E2A\u51FD\u6570\u7528\u7684\u5E76\u4E0D\u5E38\u7528\u3002</p><h4 id="_10-9-3-\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_10-9-3-\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 10.9.3. \u8FD4\u56DE\u503C</h4><p>\u6210\u529F\u8FD4\u56DE<code>0</code>\uFF0C\u53D1\u751F\u5F02\u5E38\u65F6\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u5C06 <code>errno</code> \u8BBE\u7F6E\u4E3A\u5408\u9002\u7684\u503C\u3002</p><h4 id="_10-9-4-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_10-9-4-\u4F8B\u5B50" aria-hidden="true">#</a> 10.9.4. \u4F8B\u5B50</h4><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> s <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>PF_INET<span class="token punctuation">,</span> SOCK_STREAM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ...do some send()s and stuff in here...</span>

<span class="token comment">// and now that we&#39;re done, don&#39;t allow any more sends()s:</span>
<span class="token function">shutdown</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> SHUT_WR<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-9-5-\u53C2\u9605" tabindex="-1"><a class="header-anchor" href="#_10-9-5-\u53C2\u9605" aria-hidden="true">#</a> 10.9.5. \u53C2\u9605</h4>`,20),Pt={href:"https://beej.us/guide/bgnet/html/#closeman",target:"_blank",rel:"noopener noreferrer"},xt=n("code",null,"close()",-1),St=n("h2",{id:"_11-\u66F4\u591A\u8D44\u6599",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_11-\u66F4\u591A\u8D44\u6599","aria-hidden":"true"},"#"),s(" 11. \u66F4\u591A\u8D44\u6599")],-1),qt=n("h2",{id:"_12-\u540E\u8BB0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_12-\u540E\u8BB0","aria-hidden":"true"},"#"),s(" 12. \u540E\u8BB0")],-1);function At(Et,Tt){const a=i("ExternalLinkIcon");return p(),c("div",null,[d,n("blockquote",null,[n("p",null,[r,n("a",u,[k,e(a)]),v])]),m,n("p",null,[b,h,_,f,n("a",g,[y,e(a)]),w]),n("p",null,[I,P,x,S,q,A,E,T,n("a",N,[C,e(a)]),D,R,L]),O,U,F,n("p",null,[z,M,B,n("a",K,[X,e(a)]),j,G,H]),V,n("blockquote",null,[n("p",null,[W,n("a",Y,[Q,e(a)]),$])]),Z,J,nn,n("p",null,[sn,an,en,tn,on,pn,cn,ln,dn,rn,un,kn,n("a",vn,[mn,e(a)]),bn]),hn,n("p",null,[_n,n("a",fn,[gn,e(a)]),yn]),wn,n("ol",null,[n("li",null,[n("p",null,[In,n("a",Pn,[xn,e(a)]),Sn,qn,An])]),En,n("li",null,[n("p",null,[Tn,Nn,Cn,Dn,Rn,n("a",Ln,[On,e(a)]),Un,Fn,zn])]),Mn]),Bn,n("blockquote",null,[n("p",null,[Kn,n("a",Xn,[jn,e(a)]),Gn,Hn,Vn])]),Wn,n("p",null,[Yn,n("a",Qn,[$n,e(a)]),Zn,Jn,ns]),ss,n("p",null,[as,es,ts,n("a",os,[ps,e(a)]),cs,is,ls]),ds,n("blockquote",null,[n("p",null,[rs,n("a",us,[ks,e(a)]),vs])]),ms,n("blockquote",null,[n("p",null,[bs,hs,_s,n("a",fs,[gs,e(a)]),ys])]),ws,n("p",null,[Is,n("a",Ps,[xs,e(a)]),Ss,qs,As,Es,Ts,Ns,Cs,Ds,Rs,Ls,Os]),Us,n("p",null,[Fs,n("a",zs,[Ms,e(a)]),Bs]),Ks,n("p",null,[Xs,n("a",js,[Gs,e(a)]),Hs]),Vs,n("p",null,[Ws,Ys,Qs,n("a",$s,[Zs,e(a)]),Js]),na,n("p",null,[sa,aa,ea,n("a",ta,[oa,e(a)]),pa,ca,ia,n("a",la,[da,e(a)]),ra]),ua,n("p",null,[ka,n("a",va,[ma,ba,e(a)]),ha]),_a,n("p",null,[fa,n("a",ga,[ya,e(a)]),wa]),Ia,n("p",null,[Pa,n("a",xa,[Sa,e(a)]),qa]),Aa,n("p",null,[n("a",Ea,[Ta,e(a)]),Na,n("a",Ca,[Da,e(a)]),Ra,n("a",La,[Oa,e(a)]),Ua,n("a",Fa,[za,e(a)])]),Ma,n("p",null,[n("a",Ba,[Ka,e(a)]),Xa,n("a",ja,[Ga,e(a)]),Ha,n("a",Va,[Wa,e(a)]),Ya,n("a",Qa,[$a,e(a)])]),Za,n("p",null,[n("a",Ja,[ne,e(a)]),se,n("a",ae,[ee,e(a)])]),te,n("p",null,[n("a",oe,[pe,e(a)]),ce,n("a",ie,[le,e(a)])]),de,n("p",null,[re,ue,n("a",ke,[ve,e(a)]),me,be,he,_e,fe]),n("p",null,[ge,ye,we,Ie,Pe,xe,Se,qe,Ae,Ee,Te,Ne,n("a",Ce,[De,e(a)]),n("a",Re,[Le,e(a)]),Oe,Ue,Fe]),ze,n("p",null,[n("a",Me,[Be,e(a)]),Ke,n("a",Xe,[je,e(a)])]),Ge,n("p",null,[n("a",He,[Ve,e(a)])]),We,n("p",null,[Ye,Qe,n("a",$e,[Ze,e(a)]),Je,nt,st]),at,n("p",null,[n("a",et,[tt,e(a)]),ot,n("a",pt,[ct,e(a)]),it,n("a",lt,[dt,e(a)]),rt,n("a",ut,[kt,e(a)]),vt,n("a",mt,[bt,e(a)]),ht,n("a",_t,[ft,e(a)]),gt,n("a",yt,[wt,e(a)])]),It,n("p",null,[n("a",Pt,[xt,e(a)])]),St,qt])}var Dt=o(l,[["render",At],["__file","network-programming.html.vue"]]);export{Dt as default};
