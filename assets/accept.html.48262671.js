import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";import{o as n,c as a,e}from"./app.2358da6c.js";const c={},o=e(`<p>\u7CFB\u597D\u5B89\u5168\u5E26\uFF0C<code>accept()</code>\u4E4B\u65C5\u5F00\u59CB\u4E86\u3002</p><p>\u4E00\u4E2A\u8FDC\u7A0B\u7528\u6237\u8BD5\u56FE\u8C03\u7528<code>connect()</code>\u6765\u8FDE\u63A5\u5230\u4F60\u4F7F\u7528<code>listen()</code>\u8FDB\u884C\u76D1\u542C\u7684\u7AEF\u53E3\u4E0A\uFF0C\u8FD9\u4E2A\u8FDE\u63A5\u4F1A\u88AB\u653E\u5230\u961F\u5217\u4E2D\u7B49\u7740\u88AB\u4F60<code>accept()</code>\u3002\u8FD9\u53E5\u8BDD\u8981\u662F\u4F60\u770B\u4E0D\u61C2\u4F60\u9700\u8981\u56DE\u53BB\u770B\u770B\u524D\u6587\u54E6\u3002</p><p>\u7136\u540E\u4F60\u8C03\u7528<code>accept()</code>\uFF0C\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u4E00\u4E2A\u7B49\u5019\u5DF2\u4E45\u7684\u8FDE\u63A5\uFF0C<code>accept()</code>\u4F1A\u8FD4\u56DE\u7ED9\u4F60\u4E00\u4E2A\u4E13\u5C5E\u4E8E\u8FD9\u4E2A\u8FDE\u63A5\u7684\u4E00\u4E2A<strong>\u5168\u65B0\u7684</strong><code>socket file descriptor</code>\uFF01</p><p>\u6CA1\u9519\uFF0C\u4F60\u73B0\u5728\u6709<strong>2\u4E2A</strong><code>socket file descriptor</code>\u4E86\uFF01\u539F\u6765\u7684<code>socket file descriptor</code>\u4ECD\u5728\u5904\u4E8E\u88AB<code>listen()</code>\u7684\u72B6\u6001\u7B49\u5F85\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\uFF0C\u800C\u4F60\u521A\u521A\u5F97\u5230\u7684<code>socket file descriptor</code>\u5219\u662F\u51C6\u5907\u7ED9<code>send()</code>\u548C<code>recv()</code>\u4F7F\u7528\u7684\uFF0C\u901A\u8FC7\u8FD9\u4FE9\u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u5B9E\u73B0\u548C\u5BA2\u6237\u7AEF\u4E4B\u95F4\u7684\u901A\u4FE1\u4E86\u3002</p><p><code>accept()</code>\u4F7F\u7528\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> <span class="token operator">*</span>addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sockfd</code>\u5C31\u662F\u6B63\u5728\u88AB<code>listen()</code>\u7684\u90A3\u4E2A<code>socket descriptor</code>\uFF0C\u8FD9\u4E2A\u6CA1\u5565\u96BE\u5EA6\u3002</p><p><code>addr</code>\u5C31\u662F\u4E00\u4E2A\u6307\u5411 <code>struct sockaddr_storage</code>\u7684\u6307\u9488\uFF0C\u8FD9\u91CC\u8FB9\u4F1A\u81EA\u52A8\u4FDD\u5B58\u5BA2\u6237\u7AEF\u7684\u4E00\u4E9B\u4FE1\u606F\uFF0C\u4F60\u80FD\u4ECE\u4E2D\u5F97\u77E5\u5BA2\u6237\u7AEF\u662F\u4ECE\u54EA\u4E2AIP\u3001\u54EA\u4E2A\u7AEF\u53E3\u5BF9\u4F60\u53D1\u8D77\u7684\u8FDE\u63A5\u3002</p><p><code>addrlen</code>\u662F\u4E00\u4E2A\u6574\u6570\u53D8\u91CF\uFF0C\u4F60\u5E94\u8BE5\u5728\u5C06\u5B83\u7684\u5730\u5740\u4F20\u7ED9<code>accept()</code>\u4E4B\u524D\uFF0C\u628A\u5B83\u8BBE\u7F6E\u4E3A <code>sizeof(struct sockaddr_storage)</code> \u3002<code>accept()</code>\u4FDD\u5B58\u5728<code>addr</code>\u6307\u5411\u7684\u5BF9\u8C61\u4E2D\u7684\u6570\u636E\u5927\u5C0F\u53EA\u4F1A\u5C0F\u4E8E\u7B49\u4E8E<code>addrlen</code>\uFF0C\u5982\u679C\u5C0F\u4E8E\u7684\u8BDD\uFF0C<code>accept()</code>\u4F1A\u901A\u8FC7\u6539\u53D8<code>addrlen</code>\u7684\u503C\u6765\u544A\u8BC9\u4F60\uFF0C\u6240\u4EE5\u4F60\u5E94\u8BE5\u77E5\u9053\u4E3A\u4EC0\u4E48\u8FD9\u4E2A\u5B57\u6BB5\u662F\u4E2A\u6307\u9488\u53D8\u91CF\u4E86\u5427\u3002</p><p>\u731C\u731C\u6211\u8981\u8BF4\u5565\uFF0C\u4E00\u53E5\u6211\u5FEB\u8BF4\u5410\u4E86\u7684\u8BDD\u3002<code>accept() </code>\u5728\u9519\u8BEF\u7684\u65F6\u5019\u4F1A\u8FD4\u56DE<code> -1</code>\uFF0C\u5E76\u8BBE\u7F6E <code>errno</code>\u3002</p><p>\u548C\u4E4B\u524D\u4E00\u6837\uFF0Cshow you the code\u53EF\u80FD\u4F1A\u66F4\u597D\u5438\u6536\uFF0C\u770B\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;netdb.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MYPORT</span> <span class="token string">&quot;3490&quot;</span>  <span class="token comment">// the port users will be connecting to</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BACKLOG</span> <span class="token expression"><span class="token number">10</span>     </span><span class="token comment">// how many pending connections queue will hold</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr_storage</span> their_addr<span class="token punctuation">;</span>
    <span class="token class-name">socklen_t</span> addr_size<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> hints<span class="token punctuation">,</span> <span class="token operator">*</span>res<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> new_fd<span class="token punctuation">;</span>

    <span class="token comment">// !! don&#39;t forget your error checking for these calls !!</span>

    <span class="token comment">// first, load up address structs with getaddrinfo():</span>

    <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> hints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_family <span class="token operator">=</span> AF_UNSPEC<span class="token punctuation">;</span>  <span class="token comment">// use IPv4 or IPv6, whichever</span>
    hints<span class="token punctuation">.</span>ai_socktype <span class="token operator">=</span> SOCK_STREAM<span class="token punctuation">;</span>
    hints<span class="token punctuation">.</span>ai_flags <span class="token operator">=</span> AI_PASSIVE<span class="token punctuation">;</span>     <span class="token comment">// fill in my IP for me</span>

    <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> MYPORT<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hints<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// make a socket, bind it, and listen on it:</span>

    sockfd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span>res<span class="token operator">-&gt;</span>ai_family<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_socktype<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">bind</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addr<span class="token punctuation">,</span> res<span class="token operator">-&gt;</span>ai_addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">listen</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> BACKLOG<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// now accept an incoming connection:</span>

    addr_size <span class="token operator">=</span> <span class="token keyword">sizeof</span> their_addr<span class="token punctuation">;</span>
    new_fd <span class="token operator">=</span> <span class="token function">accept</span><span class="token punctuation">(</span>sockfd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>their_addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>addr_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ready to communicate on socket descriptor new_fd!</span>
    <span class="token punctuation">.</span>
    <span class="token punctuation">.</span>
    <span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u4F1A\u7528\u5F97\u5230\u7684<code>new_fd</code>\u8FD9\u4E2A<code>socket descriptor</code>\u8FDB\u884C<code>send()</code>\u548C<code>recv()</code>\u3002</p><p>\u5982\u679C\u4F60\u53EA\u662F\u60F3\u83B7\u53D6\u8FD9\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>close()</code>\u6765\u5173\u95ED\u5904\u4E8E<code>LISTEN</code>\u72B6\u6001\u7684<code>sockfd</code>\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u907F\u514D\u6709\u66F4\u591A\u7684\u5BA2\u6237\u7AEF\u8FDE\u63A5\u5230<code>3490</code>\u8FD9\u4E2A\u7AEF\u53E3\u4E0A\u4E86\u3002</p>`,14),t=[o];function p(i,d){return n(),a("div",null,t)}var u=s(c,[["render",p],["__file","accept.html.vue"]]);export{u as default};
